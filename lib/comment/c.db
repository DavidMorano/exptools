_exit;/* _exit ==> terminate process */
_tolower;/* _tolower ==> translate characters */
_toupper;/* _toupper ==> translate characters */
a64l;/* a64l ==> convert between long integer and base */
abort;/* abort ==> generate an IOT fault */
abs;/* abs ==> return integer absolute value */
access;/* access ==> determine accessibility of a file.
First argument is pathname, second argument is bit
mask of permissions to test.  Returns 0 if
requested access is permitted, otherwise a -1.
The bit pattern is constructed as follows:
04	read
02	write
01	execute (search)
00	check existence of file */
acct;/* acct ==> enable or disable process accounting.
Argument is pathname of accounting file */
acos;/* acos ==> trigonometric arccosine function */
advfs;/* advfs ==> advertise a directory for remote access */
alarm;/* alarm ==> set a process alarm clock to send
SIGALRM signal after number of real time seconds
specified has elapsed */
asctime;/* asctime ==> convert date and time to string */
asin;/* asin ==> trigonometric functions */
assert;/* assert ==> verify program assertion */
atan2;/* atan2 ==> trigonometric functions */
atan;/* atan ==> trigonometric functions */
atof;/* atof ==> convert string to double */
atoi;/* atoi ==> convert string to integer */
atol;/* atol ==> convert string to integer */
brk;/* brk ==> change data segment space allocation.
The break value will be set to the argument */
bsearch;/* bsearch ==> binary search a sorted table */
calloc;/* calloc ==> main memory allocator */
ceil;/* ceil ==> return smallest integer not greater
than the argument */
chdir;/* chdir ==> change working directory to specified directory.
Return 0 if successful. */
chmod;/* chmod ==> change mode of file.  Bit mask specifies mode:
04000	Set user ID on execution.
02000	Set group ID  on execution.
01000	Save text image  after execution.
	Make files sticky if a directory.
00400	Read by owner.
00200	Write by owner.
00100	Execute (search if a directory) by owner.
00070	Read, write, execute  (search) by group.
00007	Read, write, execute  (search) by others. */
chown;/* chown ==> change owner and group of a file */
chroot;/* chroot ==> change root directory */
clearerr;/* clearerr ==> stream status inquiries */
clock;/* clock ==> report CPU time used */
close;/* close ==> close a file descriptor */
cos;/* cos ==> trigonometric functions */
cosh;/* cosh ==> hyperbolic functions */
creat;/* creat ==> create a new file or rewrite an existing
one.  Bit mask specifies mode:
04000	Set user ID on execution.
02000	Set group ID  on execution.
01000	Save text image  after execution.
	Make files sticky if a directory.
00400	Read by owner.
00200	Write by owner.
00100	Execute (search if a directory) by owner.
00070	Read, write, execute  (search) by group.
00007	Read, write, execute  (search) by others. */
crypt;/* crypt ==> generate DES encryptions */
ctermid;/* ctermid ==> generate file name for terminal */
ctime;/* ctime ==> convert date and time to string */
curses;/* curses ==> ASCII CRT screen handling package */
cuserid;/* cuserid ==> get character login name of the user */
ddim;/* ddim ==> positive difference intrinsic functions */
dial;/* dial ==> establish an outgoing terminal line connection */
dim;/* dim ==> positive difference intrinsic functions */
dkbreak;/* dkbreak ==> generate break signal on remote TY */
dkdial;/* dkdial ==> establish a Datakit VCS connection to a remote destination */
dkenviron;/* dkenviron ==> transmit environment variables to a remote Datakit VCS host */
dkeof;/* dkeof ==> send soft end */
dkerr;/* dkerr ==> generate standard Datakit VCS error message */
dkmgr;/* dkmgr ==> establish a Datakit VCS interface manager */
dkminor;/* dkminor ==> return minor device number */
dknamer;/* dknamer ==> create file name from minor device number */
dksplice;/* dksplice ==> splice two Datakit VCS connections together */
dkxstdio;/* dkxstdio ==> user */
dprod;/* dprod ==> double precision product intrinsic function */
drand48;/* drand48 ==> generate uniformly distributed pseudo */
dup;/* dup ==> duplicate an open file descriptor.
Return a new file descriptor with the same open file,
file pointer, and access mode as the argument file
descriptor */
ecvt;/* ecvt ==> convert floating number to string */
edata;/* edata ==> last locations in program */
encrypt;/* encrypt ==> generate DES encryption */
end;/* end ==> last locations in program */
endgrent;/* endgrent ==> get group file entry */
endpwent;/* endpwent ==> get password file entry */
endutent;/* endutent ==> access utmp file entry */
erand48;/* erand48 ==> generate uniformly distributed pseudo */
erf;/* erf ==> error function */
erfc;/* erfc ==> complementary error function */
errno;/* errno ==> system error messages */
etext;/* etext ==> last locations in program */
execl;/* execl ==> execute a file */
execle;/* execle ==> execute a file */
execlp;/* execlp ==> execute a file */
execv;/* execv ==> execute a file */
execve;/* execve ==> execute a file */
execvp;/* execvp ==> execute a file */
exit;/* exit ==> terminate process */
exp;/* exp ==> exponential function */
fabs;/* fabs ==> absolute value function */
fclose;/* fclose ==> close or flush a stream */
fcntl;/* fcntl ==> file control */
fcvt;/* fcvt ==> convert floating */
fdopen;/* fdopen ==> open a stream */
feof;/* feof ==> stream status inquiries */
ferror;/* ferror ==> determine if an I/O error occurred
while reading or writing a stream */
fflush;/* fflush ==> close or flush a stream */
fgetc;/* fgetc ==> get character or word from a stream */
fgetgrent;/* fgetgrent ==> get group file entry */
fgetpwent;/* fgetpwent ==> get password file entry */
fgets;/* fgets ==> get a string from a stream */
fileno;/* fileno ==> stream status inquiries */
floor;/* floor ==> returns largest integer
(as a double precision number) not greater than argument */
fmod;/* fmod ==> returns floating point remainder of
the division of the first arg by the second */
fopen;/* fopen ==> open a stream */
fork;/* fork ==> create a new process */
fprintf;/* fprintf ==> write formatted output to a stream */
fputc;/* fputc ==> put character or word on a stream */
fputs;/* fputs ==> put a string on a stream */
fread;/* fread ==> binary input/output */
free;/* free ==> relinquish main memory allocated with malloc */
freopen;/* freopen ==> open a stream */
frexp;/* frexp ==> manipulate parts of floating */
fscanf;/* fscanf ==> convert formatted input */
fseek;/* fseek ==> reposition a file pointer in a stream */
fstat;/* fstat ==> get file status */
fstatfs;/* fstatfs ==> get file system information */
ftell;/* ftell ==> reposition a file pointer in a stream */
ftok;/* ftok ==> standard interprocess communication package */
ftw;/* ftw ==> walk a file tree */
fwrite;/* fwrite ==> binary input/output */
gamma;/* gamma ==> log gamma function */
gcvt;/* gcvt ==> convert floating */
getc;/* getc ==> get character or word from a stream */
getchar;/* getchar ==> get character or word from a stream */
getcwd;/* getcwd ==> get path */
getdents;/* getdents ==> read directory entries and put in a file */
getegid;/* getegid ==> get effective group ID */
getenv;/* getenv ==> return value for environment name */
geteuid;/* geteuid ==> get effective user ID */
getgid;/* getgid ==> get real group ID */
getgrent;/* getgrent ==> get group file entry */
getgrgid;/* getgrgid ==> get group file entry */
getgrnam;/* getgrnam ==> get group file entry */
getlogin;/* getlogin ==> get login name */
getmsg;/* getmsg ==> get next message off a stream */
getopt;/* getopt ==> get option letter from argument vector */
getpass;/* getpass ==> read a password */
getpgrp;/* getpgrp ==> get process group process ID */
getpid;/* getpid ==> get process ID */
getppid;/* getppid ==> get parent process ID */
getpw;/* getpw ==> get name from UID */
getpwent;/* getpwent ==> get next password file entry */
getpwnam;/* getpwnam ==> get password file entry for login name */
getpwuid;/* getpwuid ==> get password file entry for UID */
gets;/* gets ==> get a string from a stream */
getuid;/* getuid ==> get real user ID */
getutent;/* getutent ==> access utmp file entry */
getutid;/* getutid ==> access utmp file entry */
getutline;/* getutline ==> access utmp file entry */
getw;/* getw ==> get character or word from a stream */
gmtime;/* gmtime ==> convert date and time to string */
gsignal;/* gsignal ==> software signals */
hcreate;/* hcreate ==> manage hash search tables */
hdestroy;/* hdestroy ==> manage hash search tables */
hsearch;/* hsearch ==> manage hash search tables */
hypot;/* hypot ==> Euclidean distance function */
iargc;/* iargc ==> return number of command line arguments */
idim;/* idim ==> positive difference intrinsic functions */
ioctl;/* ioctl ==> control device */
irand;/* irand ==> random number generator */
isalnum;/* isalnum ==> is character for letter or digit */
isalpha;/* isalpha ==> is character a letter */
isascii;/* isascii ==> is character less than 0200 */
isatty;/* isatty ==> find name of a terminal */
iscntrl;/* iscntrl ==> is character a control character */
isdigit;/* isdigit ==> is character a digit */
isgraph;/* isgraph ==> is character a printable character, except space */
islower;/* islower ==> is character lower case */
isprint;/* isprint ==> is character printable */
ispunct;/* ispunct ==> is character a punctuation character */
isspace;/* isspace ==> is character space, CR, NL, |, or formfeed */
isupper;/* isupper ==> is character upper case */
isxdigit;/* isxdigit ==> is character hexadecimal digit */
j0;/* j0 ==> Bessel functions */
j1;/* j1 ==> Bessel functions */
jn;/* jn ==> Bessel functions */
jrand48;/* jrand48 ==> generate uniformly distributed pseudo */
kill;/* kill ==> send a signal to a process or a group of processes */
l3tol;/* l3tol ==> convert between 3 */
l64a;/* l64a ==> convert between long integer and base */
lcong48;/* lcong48 ==> generate uniformly distributed pseudo */
ldaclose;/* ldaclose ==> close a common object file */
ldahread;/* ldahread ==> read the archive header of a member of an archive file */
ldaopen;/* ldaopen ==> open a common object file for reading */
ldclose;/* ldclose ==> close a common object file */
ldexp;/* ldexp ==> manipulate parts of floating */
ldfhread;/* ldfhread ==> read the file header of a common object file */
ldgetname;/* ldgetname ==> retrieve symbol name for common object file symbol table entry */
ldlinit;/* ldlinit ==> manipulate line number entries of a */
ldlitem;/* ldlitem ==> manipulate line number entries of a */
ldlread;/* ldlread ==> manipulate line number entries of a */
ldlseek;/* ldlseek ==> seek to the line number entries */
ldnlseek;/* ldnlseek ==> seek to the line number entries */
ldnrseek;/* ldnrseek ==> seek to the relocation entries */
ldnshread;/* ldnshread ==> read an indexed named section header */
ldnsseek;/* ldnsseek ==> seek to an indexed named section */
ldohseek;/* ldohseek ==> seek to the optional file header */
ldopen;/* ldopen ==> open a common object file for reading */
ldrseek;/* ldrseek ==> seek to the relocation entries */
ldshread;/* ldshread ==> read an indexed named section header */
ldsseek;/* ldsseek ==> seek to an indexed named section */
ldtbindex;/* ldtbindex ==> compute the index of a symbol table entry */
ldtbread;/* ldtbread ==> read an indexed symbol table entry */
ldtbseek;/* ldtbseek ==> seek to the symbol table of a common object file */
lfind;/* lfind ==> linear search and update */
lge;/* lge ==> string comparision intrinsic functions */
lgt;/* lgt ==> string comparision intrinsic functions */
link;/* link ==> link to a file */
lle;/* lle ==> string comparision intrinsic functions */
llt;/* llt ==> string comparision intrinsic functions */
localtime;/* localtime ==> convert date and time to string */
lockf;/* lockf ==> record locking on files */
log10;/* log10 ==> exponential, logarithm, power, square root functions */
log;/* log ==> exponential, logarithm, power, square root functions */
logname;/* logname ==> return login name of user */
longjmp;/* longjmp ==> non */
lrand48;/* lrand48 ==> generate uniformly distributed pseudo */
lsearch;/* lsearch ==> linear search and update */
lseek;/* lseek ==> move read/write file pointer */
ltol3;/* ltol3 ==> convert between 3 */
mallinfo;/* mallinfo ==> fast main memory allocator */
malloc;/* malloc ==> main memory allocator */
mallopt;/* mallopt ==> fast main memory allocator */
maphost;/* maphost ==> map Datakit VCS destination name to a dialstring */
matherr;/* matherr ==> error */
memccpy;/* memccpy ==> memory operations */
memchr;/* memchr ==> memory operations */
memcmp;/* memcmp ==> memory operations */
memcpy;/* memcpy ==> memory operations */
memset;/* memset ==> memory operations */
mkdir;/* mkdir ==> make a directory */
mknod;/* mknod ==> make a directory, or a special or ordinary file */
mktemp;/* mktemp ==> make a unique file name */
modf;/* modf ==> manipulate parts of floating */
monitor;/* monitor ==> prepare execution profile */
mount;/* mount ==> mount a file system */
mrand48;/* mrand48 ==> generate uniformly distributed pseudo */
msgctl;/* msgctl ==> message control operations */
msgget;/* msgget ==> get message queue */
nice;/* nice ==> change priority of a process */
nlist;/* nlist ==> get entries from name list */
nrand48;/* nrand48 ==> generate uniformly distributed pseudo */
open;/* open ==> open file or device for reading or writing */
pause;/* pause ==> suspend process until signal */
pclose;/* pclose ==> initiate pipe to/from a process */
perror;/* perror ==> system error messages */
pipe;/* pipe ==> create an interprocess channel */
plock;/* plock ==> lock process, text, or data in memory */
plot;/* plot ==> graphics interface subroutines */
popen;/* popen ==> initiate pipe to/from a process */
pow;/* pow ==> exponential, logarithm, power, square root functions */
ppremote;/* ppremote ==> file transfer subroutine interface */
printf;/* printf ==> print formatted output */
profil;/* profil ==> execution time profile */
ptrace;/* ptrace ==> process trace */
putc;/* putc ==> put character or word on a stream */
putchar;/* putchar ==> put character or word on a stream */
putenv;/* putenv ==> change or add value to environment */
putmsg;/* putmsg ==> send a message on a stream */
putpwent;/* putpwent ==> write password file entry */
puts;/* puts ==> put a string on a stream */
pututline;/* pututline ==> access utmp file entry */
putw;/* putw ==> put character or word on a stream */
qsort;/* qsort ==> quicker sort */
rand;/* rand ==> random number generator */
rand;/* rand ==> simple random */
read;/* read ==> read from file */
realloc;/* realloc ==> fast main memory allocator */
realloc;/* realloc ==> main memory allocator */
regcmp;/* regcmp ==> compile, execute regular expressions */
regex;/* regex ==> compile, execute regular expressions */
rewind;/* rewind ==> reposition a file pointer in a stream */
rexecl;/* rexecl ==> subroutine interface to remote execution */
rexecv;/* rexecv ==> subroutine interface to remote execution */
rfstart;/* rfstart ==> start the Remote File Sharing environment */
rmdir;/* rmdir ==> remove a directory */
sbrk;/* sbrk ==> change data segment space allocation by
the specified number of bytes. */
scanf;/* scanf ==> convert formatted input */
seed48;/* seed48 ==> generate uniformly distributed pseudo */
semctl;/* semctl ==> semaphore control operations */
semget;/* semget ==> get set of semaphores */
semop;/* semop ==> semaphore operations */
setbuf;/* setbuf ==> assign buffering to a stream */
setgid;/* setgid ==> set user and group */
setgrent;/* setgrent ==> get group file entry */
setjmp;/* setjmp ==> non */
setkey;/* setkey ==> generate */
setpgrp;/* setpgrp ==> set process group */
setpwent;/* setpwent ==> get password file entry */
setuid;/* setuid ==> set user and group */
setutent;/* setutent ==> access utmp file entry */
setvbuf;/* setvbuf ==> assign buffering to a stream */
sgetl;/* sgetl ==> access long integer data in a machine */
shmctl;/* shmctl ==> shared memory control operations */
shmget;/* shmget ==> get shared memory segment */
sighold;/* sighold ==> signal management */
sigignore;/* sigignore ==> signal management */
signal;/* signal ==> specify what to do upon receipt of a signal */
sigpause;/* sigpause ==> signal management */
sigrelse;/* sigrelse ==> signal management */
sigset;/* sigset ==> signal management */
sin;/* sin ==> trigonometric functions */
sinh;/* sinh ==> hyperbolic functions */
sleep;/* sleep ==> suspend execution for interval */
sprintf;/* sprintf ==> place formatted output into buffer */
sputl;/* sputl ==> access long integer data in a machine */
sqrt;/* sqrt ==> exponential, logarithm, power, square root functions */
srand48;/* srand48 ==> generate uniformly distributed pseudo */
srand;/* srand ==> random number generator */
srand;/* srand ==> simple random */
sscanf;/* sscanf ==> convert formatted input */
ssignal;/* ssignal ==> software signals */
stat;/* stat ==> get file status */
statfs;/* statfs ==> get file system information */
stdio;/* stdio ==> standard buffered input/output package */
stdipc;/* stdipc ==> standard interprocess communication package */
stime;/* stime ==> set time */
strcat;/* strcat ==> append 2nd string to 1st */
strchr;/* strchr ==> look for 1st occurrence of character
in string */
strrchr;/* strchr ==> look for last occurrence of character
in string */
strcmp;/* strcmp ==> string compare */
strcpy;/* strcpy ==> copy 2nd string to 1st */
strcspn;/* strcspn ==> string operations */
strlen;/* strlen ==> calculate string length */
strncat;/* strncat ==> append at most N characters
to string */
strncmp;/* strncmp ==> string comparison for at most N characters */
strncpy;/* strncpy ==> copy exactly N characters from string */
strpbrk;/* strpbrk ==> search string for characters */
strspn;/* strspn ==> string operations */
strtod;/* strtod ==> convert string to double */
strtok;/* strtok ==> partition string into tokens */
strtol;/* strtol ==> convert string to integer */
swab;/* swab ==> swap bytes */
sync;/* sync ==> update super */
sys_errlist;/* sys_errlist ==> system error messages */
sys_nerr;/* sys_nerr ==> system error messages */
sysfs;/* sysfs ==> get file system type information */
system;/* system ==> issue a shell command */
t_accept;/* t_accept ==> accept a connect request */
t_alloc;/* t_alloc ==> allocate a library structure */
t_bind;/* t_bind ==> bind an address to a transport endpoint */
t_close;/* t_close ==> close a transport endpoint */
t_connect;/* t_connect ==> establish a connection with another transport user */
t_error;/* t_error ==> produce error message */
t_free;/* t_free ==> free a library structure */
t_getinfo;/* t_getinfo ==> get protocol */
t_getstate;/* t_getstate ==> get the current state */
t_listen;/* t_listen ==> listen for a connect request */
t_look;/* t_look ==> look at the current event on a transport endpoint */
t_open;/* t_open ==> establish a transport endpoint */
t_optmgmt;/* t_optmgmt ==> manage options for a transport endpoint */
t_rcv;/* t_rcv ==> receive data or expedited data sent over a connection */
t_rcvconnect;/* t_rcvconnect ==> receive the confirmation from a connect request */
t_rcvdis;/* t_rcvdis ==> retrieve information from disconnect */
t_rcvrel;/* t_rcvrel ==> acknowledge receipt of an orderly release indication */
t_rcvudata;/* t_rcvudata ==> receive a data unit */
t_rcvuderr;/* t_rcvuderr ==> receive a unit data error indication */
t_snd;/* t_snd ==> send data or expedited data over a connection */
t_snddis;/* t_snddis ==> send user */
t_sndrel;/* t_sndrel ==> initiate an orderly release */
t_sndudata;/* t_sndudata ==> send a data unit */
t_sync;/* t_sync ==> synchronize transport library */
t_unbind;/* t_unbind ==> disable a transport endpoint */
tan;/* tan ==> trigonometric functions */
tanh;/* tanh ==> hyperbolic functions */
tdelete;/* tdelete ==> manage binary search trees */
tempnam;/* tempnam ==> create a name for a temporary file */
tfind;/* tfind ==> manage binary search trees */
time;/* time ==> get time */
times;/* times ==> get process and child process times */
tmpfile;/* tmpfile ==> create a temporary file */
tmpnam;/* tmpnam ==> create a name for a temporary file */
toascii;/* toascii ==> translate characters */
tolower;/* tolower ==> translate characters */
toupper;/* toupper ==> translate characters */
tsearch;/* tsearch ==> manage binary search trees */
ttyname;/* ttyname ==> find name of a terminal */
ttyslot;/* ttyslot ==> find the slot in the utmp file of the current user */
twalk;/* twalk ==> manage binary search trees */
tzset;/* tzset ==> convert date and time to string */
ulimit;/* ulimit ==> get and set user limits */
umask;/* umask ==> set and get file creation mask */
umount;/* umount ==> unmount a file system */
uname;/* uname ==> get name of current machine */
undial;/* undial ==> establish an outgoing terminal line connection */
ungetc;/* ungetc ==> push character back into input stream */
unlink;/* unlink ==> remove directory entry */
ustat;/* ustat ==> get file system statistics */
utime;/* utime ==> set file access and modification times */
utmpname;/* utmpname ==> access utmp file entry */
vfprintf;/* vfprintf ==> print formatted output of a varargs argument list */
vprintf;/* vprintf ==> print formatted output of a varargs argument list */
vsprintf;/* vsprintf ==> print formatted output of a varargs argument list */
wait;/* wait ==> wait for child process to stop or terminate */
write;/* write ==> write on a file or device */
y0;/* y0 ==> Bessel functions */
y1;/* y1 ==> Bessel functions */
yn;/* yn ==> Bessel functions */
