


     RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          Range (1.6) - intervals or regions of types which have order

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS OOOOFFFF RRRRaaaannnnggggeeee
          ####iiiinnnncccclllluuuuddddeeee """"RRRRaaaannnnggggeeee....hhhh""""

          // Macros used to simulate parameterized types:
          RRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee((((TTTT))))
          nnnnRRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee((((TTTT))))
          RRRRaaaannnnggggeeeeiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT))))
          nnnnRRRRaaaannnnggggeeeeiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT))))

          // Expanding RRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee produces the following text:

          ####iiiiffffnnnnddddeeeeffff SSSSTTTTDDDD____HHHH
          ttttyyyyppppeeeeddddeeeeffff sssshhhhoooorrrrtttt BBBBOOOOOOOOLLLL;;;; ////**** BBBBOOOOOOOOLLLL uuuusssseeeedddd ffffoooorrrr llllooooggggiiiiccccaaaallll vvvvaaaarrrriiiiaaaabbbblllleeeessss aaaassss aaaa rrrreeeemmmmiiiinnnnddddeeeerrrr
                               ttttoooo tttthhhheeee pppprrrrooooggggrrrraaaammmmmmmmeeeerrrr.... ****////
          ####eeeennnnddddiiiiffff

          ccccllllaaaassssssss RRRRaaaannnnggggeeee((((TTTT)))) {{{{
               ppppuuuubbbblllliiiicccc::::
               TTTT lllloooowwww,,,, hhhhiiiigggghhhh;;;;
               RRRRaaaannnnggggeeee((((TTTT))))((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx))));;;;
               RRRRaaaannnnggggeeee((((TTTT))))((((TTTT llll,,,, TTTT hhhh))));;;;
               RRRRaaaannnnggggeeee((((TTTT))))((((TTTT xxxx))));;;;
               ooooppppeeeerrrraaaattttoooorrrr ccccoooonnnnsssstttt vvvvooooiiiidddd ****(((()))) ccccoooonnnnsssstttt;;;;
               BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!(((()))) ccccoooonnnnsssstttt;;;;
               ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr&&&&====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy)))) ccccoooonnnnsssstttt;;;;
               ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr||||====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy)))) ccccoooonnnnsssstttt;;;;
               iiiinnnntttt ccccoooommmmppppaaaarrrreeee((((TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
               BBBBOOOOOOOOLLLL ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx))));;;;
               BBBBOOOOOOOOLLLL ssssuuuubbbbsssseeeetttt____ooooffff((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx))));;;;
               }}}};;;;

          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& aaaa,,,, TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& aaaa,,,, TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr <<<<((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& aaaa,,,, TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr<<<<====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& aaaa,,,, TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr >>>>((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& aaaa,,,, TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr>>>>====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& aaaa,,,, TTTT xxxx)))) ccccoooonnnnsssstttt;;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr <<<<((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr<<<<====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr >>>>((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr>>>>====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          RRRRaaaannnnggggeeee((((TTTT)))) ooooppppeeeerrrraaaattttoooorrrr&&&&((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
          RRRRaaaannnnggggeeee((((TTTT)))) ooooppppeeeerrrraaaattttoooorrrr||||((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyy))));;;;
           ... and all the reverses.






     Page 1                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))



          Expanding nnnnRRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee produces the following text, in
          addition to the contents of RRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee:

          ccccllllaaaassssssss nnnnRRRRaaaannnnggggeeee((((TTTT)))) :::: ppppuuuubbbblllliiiicccc RRRRaaaannnnggggeeee((((TTTT))))  {{{{
               ppppuuuubbbblllliiiicccc::::
               nnnnRRRRaaaannnnggggeeee((((TTTT))))((((TTTT llll,,,, TTTT hhhh)))) :::: RRRRaaaannnnggggeeee((((TTTT))))((((llll,,,, hhhh))));;;;
               nnnnRRRRaaaannnnggggeeee((((TTTT))))((((TTTT xxxx)))) :::: RRRRaaaannnnggggeeee((((TTTT))))((((xxxx))));;;;
               nnnnRRRRaaaannnnggggeeee((((TTTT))))(((()))) :::: RRRRaaaannnnggggeeee((((TTTT))))((((1111,,,, 0000))));;;;
               nnnnRRRRaaaannnnggggeeee((((TTTT))))((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx))));;;;
               ccccoooonnnnsssstttt nnnnRRRRaaaannnnggggeeee((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx))));;;;
               TTTT lllleeeennnnggggtttthhhh(((()))) ccccoooonnnnsssstttt;;;;
               TTTT wwwweeeeiiiigggghhhhtttt(((()))) ccccoooonnnnsssstttt;;;;
               ddddoooouuuubbbblllleeee cccceeeennnntttteeeerrrr((((ddddoooouuuubbbblllleeee ffffrrrraaaaccccttttiiiioooonnnn ==== 0000....5555)))) ccccoooonnnnsssstttt;;;;
               }}}};;;;
          iiiinnnnlllliiiinnnneeee nnnnRRRRaaaannnnggggeeee((((TTTT)))) eeeexxxxppppaaaannnndddd((((ccccoooonnnnsssstttt nnnnRRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ddddoooouuuubbbblllleeee aaaabbbboooouuuutttt,,,, ddddoooouuuubbbblllleeee ffffaaaaccccttttoooorrrr))));;;;
          iiiinnnnlllliiiinnnneeee nnnnRRRRaaaannnnggggeeee((((TTTT)))) eeeexxxxppppaaaannnndddd((((ccccoooonnnnsssstttt nnnnRRRRaaaannnnggggeeee((((TTTT))))&&&& xxxx,,,, ddddoooouuuubbbblllleeee ffffaaaaccccttttoooorrrr))));;;;

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Every Range represents an interval containing zero or more
          values of type T, where T is implicit in the type of the
          Range.  Ranges are useful for representing, for example,
          acceptable values of temperature in a control system.
          RRRRaaaannnnggggeeee((((ddddoooouuuubbbblllleeee))))((((0000....0000,,,, 55555555....0000)))) can represent legal velocities on
          Interstate 78.  RRRRaaaannnnggggeeee((((SSSSttttrrrriiiinnnngggg))))((((""""UUUUnnnniiiiccccoooorrrrnnnn"""",,,, """"ZZZZyyyymmmmuuuurrrrggggyyyy"""")))) could
          represent the contents of the last volume of an
          encyclopedia.

          The type of a range's elements should ideally be a _t_y_p_e
          _p_a_r_a_m_e_t_e_r; a preprocessor presently simulates this facility.
          Thus the type name of a range takes the form Range(T), where
          T is a type name that is a single identifier.

          The type T must have assignment ( operator= )
          initialization, ( T(const T&) ) and comparison ( operator> ,
          operator< , operator== , operator>= , operator<= )
          operations defined.  A type for a nRange must have most
          arithmetic operations defined.  The typename BOOL is used to
          denote logical variables.  It is equivalent to int, and is
          included for clarity.  The typedef is protected by
          "#ifndef STD_H".

     MMMMaaaaccccrrrroooossss UUUUsssseeeedddd ttttoooo SSSSiiiimmmmuuuullllaaaatttteeee PPPPaaaarrrraaaammmmeeeetttteeeerrrriiiizzzzeeeedddd TTTTyyyyppppeeeessss
          The macro RRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee((((TTTT)))) generates the declarations for the
          class Range(T).  It must appear once in every source file
          for every T used in that source file.  The macro
          nnnnRRRRaaaannnnggggeeeeddddeeeeccccllllaaaarrrreeee((((TTTT)))) generates the declarations for the
          extension class nRange(T) which adds a few operations which
          are strictly relevant to numeric data types.  Conversion
          operators are defined so that Ranges and nRanges may be
          freely intermixed.  When parameterized types become a
          reality, the nRange classes may become obsolete.




     Page 2                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))



          Because Range(T) and nRange(T) are preprocessor macros, no
          spaces may appear inside the parentheses in Range(T) or
          nRange(T).

     DDDDeeeessssccccrrrriiiippppttttiiiioooonnnn ooooffff RRRRaaaannnnggggeeee((((TTTT))))
          Assume a and b are of type T, and C and D are Range(T).

     CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss
          The constructor RRRRaaaannnnggggeeee((((TTTT))))((((aaaa,,,, bbbb)))) specifies a range from a to
          b, inclusive.  The constructor RRRRaaaannnnggggeeee((((TTTT))))((((aaaa)))) makes a range
          that includes just a.

     CCCCoooommmmppppaaaarrrriiiissssoooonnnnssss wwwwiiiitttthhhh TTTT
          The class is most often used by comparing a T to a Range(T):
          aaaa========CCCC is interpreted as "a is included in C" (remember,
          ranges are defined to include their limits); aaaa!!!!====CCCC means "a
          is outside of C"; aaaa<<<<CCCC means "a is smaller than the lower
          limit of range C"; aaaa<<<<====CCCC means "a is below C, or inside of C"
          (a is not bigger than C); >>>> and >>>>==== are defined similarly.
          The type T and the range can be interchanged in all of the
          above operations.  The function CCCC....ccccoooommmmppppaaaarrrreeee((((aaaa)))) returns -1, 0,
          or 1, depending on whether a<C, a==C, or a>C.

     CCCCoooommmmppppaaaarrrriiiissssoooonnnnssss wwwwiiiitttthhhh aaaannnnooootttthhhheeeerrrr RRRRaaaannnnggggeeee((((TTTT))))
          Comparisons of ranges with one another are CCCC========DDDD and CCCC!!!!====DDDD,
          which check to see if the ranges are identical.
          Additionally, one can check CCCC....ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((DDDD)))) or
          CCCC....ssssuuuubbbbsssseeeetttt____ooooffff((((DDDD)))), which are true if C includes D, or vice
          versa.  Null ranges are subsets of everything, and supersets
          of nothing except other null ranges.  Note that if C==D,
          then both C.superset_of(D), C.subset_of(D), D.subset_of(C),
          and D.subset_of(C) are all true.

     CCCCoooommmmbbbbiiiinnnnaaaattttiiiioooonnnnssss
          Ranges can be combined: CCCC||||DDDD returns the smallest range which
          is large enough to include both C and D, while CCCC&&&&DDDD returns
          the intersection of the two ranges.  Operators ||||==== and &&&&====
          work as expected.

     MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss
          The ends of a range are publicly accessible as CCCC....lllloooowwww and
          CCCC....hhhhiiiigggghhhh.  An empty range is one where low>high.  A range may
          be tested for emptiness by ooooppppeeeerrrraaaattttoooorrrr ccccoooonnnnsssstttt vvvvooooiiiidddd ****, which
          returns zero for an empty range, or by ooooppppeeeerrrraaaattttoooorrrr!!!!, which
          returns nonzero (true) for an empty range.

     DDDDeeeessssccccrrrriiiippppttttiiiioooonnnn ooooffff nnnnRRRRaaaannnnggggeeee((((TTTT))))
          Assume E is a nRange(T), and that x, and y are doubles.

     CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss :::: nnnnRRRRaaaannnnggggeeee((((TTTT))))
          The class nRange(T) has all operations and constructors that
          Range(T) has, and adds a null constructor: nnnnRRRRaaaannnnggggeeee((((TTTT))))(((()))),



     Page 3                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   RRRRAAAANNNNGGGGEEEE((((3333CCCC++++++++))))



          which returns an empty range, and some functions.

     FFFFuuuunnnnccccttttiiiioooonnnnssss oooonnnn nnnnRRRRaaaannnnggggeeee((((TTTT))))
          The member functions are EEEE....cccceeeennnntttteeeerrrr(((()))), that returns the center
          of the range, EEEE....cccceeeennnntttteeeerrrr((((ddddoooouuuubbbblllleeee xxxx)))), that returns a point which
          is a fraction x of the way from E.low to E.high, lllleeeennnnggggtttthhhh(((())))
          which returns high-low (or zero for empty Ranges), and
          weight().  WWWWeeeeiiiigggghhhhtttt(((()))) is intended to reduce fencepost errors;
          for continuous variables, it returns length(), but for
          integer types, it returns length()+1 -- it measures how much
          "stuff" is in the interval.  Additionally, the function
          eeeexxxxppppaaaannnndddd((((EEEE,,,, yyyy,,,, xxxx)))) returns an nRange(T) which is the result of
          expanding E about the point y, by multiplying by x.
          expand(E, y, 1.0) == E, and expand(E, y, 0.0) is a nRange(T)
          which includes just the single point a.  The function
          eeeexxxxppppaaaannnndddd((((EEEE,,,, xxxx)))) expands the interval E about its center.
          Expand with a negative x yields a null range.

     BBBBUUUUGGGGSSSS aaaannnndddd CCCCAAAAUUUUTTTTIIIIOOOONNNNSSSS
          Null (e.g. empty) ranges will give undefined results for
          comparisons to a T with T>=, >, <=, and <.  All new
          operations in class nRange(T) are unsafe for null ranges.
          Other operations are now properly behaved; all null ranges
          compare equal, and so forth.

          Expand() is potentially tricky with ints because of round-
          off error.  Calculations are made as doubles, and cast to
          type T at the very end.  Perhaps the results should be
          rounded.

          Length() returns the difference between two Ts as a T.  This
          can sometimes overflow (e.g. a large positive int minus a
          large negative int).  For integral types, beware that there
          are length()+1 integers included in the range -- use
          weight() if you want to know how many you have.

          Loops over a Range should be
          for(i=C.low;i<=C.high;i++).

          It is now necessary to expand RRRRaaaannnnggggeeeeiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT)))) or
          nnnnRRRRaaaannnnggggeeeeiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT)))) for the definitions of certain of the
          functions.













     Page 4                                           (printed 3/6/91)



