


     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          Range2d (1.1) - Two dimensional rectangular areas

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS OOOOFFFF RRRRaaaannnnggggeeee2222dddd
          ####iiiinnnncccclllluuuuddddeeee """"RRRRaaaannnnggggeeee2222dddd....hhhh""""

          // Macros used to simulate parameterized types:
          RRRRaaaannnnggggeeee2222ddddddddeeeeccccllllaaaarrrreeee((((TTTT))))
          RRRRaaaannnnggggeeee2222ddddiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT))))

          // Expanding RRRRaaaannnnggggeeee2222ddddddddeeeeccccllllaaaarrrreeee produces the following text:

          ####iiiiffffnnnnddddeeeeffff RRRRAAAANNNNGGGGEEEE2222DDDD____HHHH
          #### ddddeeeeffffiiiinnnneeee RRRRAAAANNNNGGGGEEEE2222DDDD____HHHH

          #### iiiiffffnnnnddddeeeeffff SSSSTTTTDDDD____HHHH
           ttttyyyyppppeeeeddddeeeeffff sssshhhhoooorrrrtttt BBBBOOOOOOOOLLLL;;;;     ////**** UUUUsssseeee BBBBOOOOOOOOLLLL ffffoooorrrr llllooooggggiiiiccccaaaallll vvvvaaaarrrriiiiaaaabbbblllleeeessss aaaassss aaaa rrrreeeemmmmiiiinnnnddddeeeerrrr ttttoooo
                                        tttthhhheeee pppprrrrooooggggrrrraaaammmmmmmmeeeerrrr.... ****////
          #### eeeennnnddddiiiiffff

          ccccllllaaaassssssss RRRRaaaannnnggggeeee2222dddd((((TTTT))))    {{{{
               ppppuuuubbbblllliiiicccc::::
               nnnnRRRRaaaannnnggggeeee((((TTTT)))) xxxx;;;;
               nnnnRRRRaaaannnnggggeeee((((TTTT)))) yyyy;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) hhhhhhhhcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) hhhhllllcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) llllllllcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) llllhhhhcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) aaaarrrreeeeaaaa((((vvvvooooiiiidddd)))) ccccoooonnnnsssstttt;;;;
               lllloooonnnngggg wwwweeeeiiiigggghhhhtttt(((()))) ccccoooonnnnsssstttt;;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____llllllllcccc,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____hhhhhhhhcccc))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& cccc))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxxrrrr,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyyrrrr))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((TTTT xxxx1111,,,, TTTT yyyy1111,,,, TTTT xxxx2222,,,, TTTT yyyy2222))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))(((())));;;;
               ooooppppeeeerrrraaaattttoooorrrr ccccoooonnnnsssstttt vvvvooooiiiidddd ****(((()))) ccccoooonnnnsssstttt;;;;
               BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!(((()))) ccccoooonnnnsssstttt;;;;
               CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr &&&&====((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa))));;;;
               CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr ||||====((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa))));;;;
               BBBBOOOOOOOOLLLL ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa)))) CCCC;;;;
               BBBBOOOOOOOOLLLL ssssuuuubbbbsssseeeetttt____ooooffff((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa)))) CCCC;;;;
               }}}};;;;

          RRRRaaaannnnggggeeee2222dddd((((TTTT)))) ooooppppeeeerrrraaaattttoooorrrr&&&&((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          RRRRaaaannnnggggeeee2222dddd((((TTTT)))) ooooppppeeeerrrraaaattttoooorrrr||||((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;




     Page 1                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



          RRRRaaaannnnggggeeee2222ddddiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT))))
          must be expanded to define some of the functions.

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Every RRRRaaaannnnggggeeee2222dddd((((TTTT)))) represents a rectangular area whose sides
          are parallel to the coordinate axes.  Range2ds can be used
          for representing, windows on a graphics display, garden
          plots, or perhaps the space taken by letters in a text
          processor.  Range2d(int)(0, 0, 79, 23) can represent the
          legal locations on a typical crt text terminal.
          Range2d(double)(0.0, 0.0, 1.0, 6.283) might specify the area
          over which a function must be integrated.

          The type of a range2d's elements should ideally be a _t_y_p_e
          _p_a_r_a_m_e_t_e_r; a preprocessor presently simulates this facility.
          Thus the type name of a range takes the form Range2d(T),
          where T is a type name that is a single identifier.

          The type T must have most of the operations of a built-in
          numeric type.  The typename BOOL is used to denote logical
          variables.  It is equivalent to int, and is included for
          clarity.  The typedef is protected by "#ifndef STD_H".

     MMMMaaaaccccrrrroooossss UUUUsssseeeedddd ttttoooo SSSSiiiimmmmuuuullllaaaatttteeee PPPPaaaarrrraaaammmmeeeetttteeeerrrriiiizzzzeeeedddd TTTTyyyyppppeeeessss
          The macro RRRRaaaannnnggggeeee2222ddddddddeeeeccccllllaaaarrrreeee((((TTTT)))) generates the declarations for
          the class Range2d(T).  It must appear once in every source
          file for every T used in that source file.

          Because Range2d(T) is a preprocessor macros, no spaces may
          appear inside the parentheses in Range2d(T).

     DDDDeeeessssccccrrrriiiippppttttiiiioooonnnn ooooffff RRRRaaaannnnggggeeee2222dddd((((TTTT))))
          All operations in Range2d(T) are constructed of the
          equivalent operations of Range(T).  For the purposes of the
          following descriptions, assume x1, x2, y1 and y2 are of type
          T, r1 and r2 are of type nRange(T), d1 and d2 are of type
          gdoublet(T), and R1 and R2 are Range2d(T).

     CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))(((()))) creates an empty range, containing nothing.
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((dddd1111)))) creates a range which contains only the
          single point d1.
          The remaining three constructors can make larger ranges:
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____llllllllcccc,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____hhhhhhhhcccc))))
          makes a range specified by the lower-lower corner (smaller
          values of both x and y) and the corner with the two higher
          values,
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((TTTT xxxx1111,,,, TTTT yyyy1111,,,, TTTT xxxx2222,,,, TTTT yyyy2222)))) makes a range specified
          by the minimum and maximum values of x and y (x2>=x1 and
          y2>=y1 for the result to be non-empty), or
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxxrrrr,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyyrrrr)))) makes a
          range specified by the intersection of a Range(T) in one



     Page 2                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



          coordinate and another Range(T) in the other coordinate.
          Any Range2d(T) with x.low>x.high or y.low>y.high is "null"
          or "empty".  With certain exceptions mentioned below, all
          null ranges are equivalent, and behave like an empty set.

     CCCCoooommmmppppaaaarrrriiiissssoooonnnnssss
          It is sensible to compare Range2ds to themselves and to
          coordinate pairs -- gdoublet(T)s.
          OOOOppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& dddd1111)))), and
          it's reversal find out whether d1 is inside of R1.
          OOOOppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& dddd1111)))), and
          it's reversal are just the negation of operator==.
          OOOOppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) tests
          for equality -- all null Range2ds compare equal.
          OOOOppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) is
          the reverse of operator==.
          RRRR1111....ssssuuuubbbbsssseeeetttt____ooooffff((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) returns nonzero if R1
          completely encloses R2.  A null range is a subset of
          everything.
          RRRR1111....ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) returns nonzero if R2
          completely encloses R1.  A null range is a superset of
          nothing except another null range.

     CCCCoooommmmbbbbiiiinnnnaaaattttiiiioooonnnnssss
          Range2ds can be combined:
          RRRR1111||||RRRR2222 returns the smallest rectangle which is large enough
          to include both R1 and R2, while
          RRRR1111&&&&RRRR2222 returns the intersection of the two ranges.  Operators
          ||||==== and &&&&==== work as expected.

     CCCCoooorrrrnnnneeeerrrrssss aaaannnndddd CCCCoooooooorrrrddddiiiinnnnaaaatttteeeessss
          The ranges in the two dimensions are accessible as RRRR1111....xxxx and
          RRRR1111....yyyy.  These are nRange(T); their ends may be accessed as
          R1.x.low, R1.y.high, and so forth.  Additionally, functions
          are provided to return the corners and center: hhhhhhhhcccc(((()))) returns
          the corner (x.high, y.high), and llllhhhhcccc(((()))), hhhhllllcccc(((()))), and llllllllcccc(((())))
          return the other corners.

     MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss
          An empty Range2d(T) is one where either x or y are null
          ranges.  A range2d may be tested for emptiness by
          ooooppppeeeerrrraaaattttoooorrrr ccccoooonnnnsssstttt vvvvooooiiiidddd ****, which returns zero for an empty
          range2d, or by
          ooooppppeeeerrrraaaattttoooorrrr!!!!, which returns nonzero (true) for an empty
          range2d.
          The function wwwweeeeiiiigggghhhhtttt(((()))) returns either the area (for floating
          point types), or the number of points included (for an
          integral type).  Zero is returned for a null range.  For
          example, if a Range2d(T) is used to represent a window, the
          weight will be the number of pixels in the window
          (Range2d(int)(0,0,2,2).weight() == 9).




     Page 3                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



     BBBBUUUUGGGGSSSS aaaannnndddd CCCCAAAAUUUUTTTTIIIIOOOONNNNSSSS
          Remember, Range(int)(0,0,1,1) includes the points (0,0),
          (0,1), (1,0), and (1,1) -- the edges are included.  Null
          (e.g. empty) ranges will give undefined results for their
          corners and endpoints.

          It is necessary to expand Range2dimplement(T) for the
          definitions of certain of the functions.

     SSSSeeeeeeee aaaallllssssoooo
          Range.h and gdoublet.h.












































     Page 4                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          gdoublet (1.0) - pairs of things.

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS OOOOFFFF ggggddddoooouuuubbbblllleeeetttt
          ####iiiinnnncccclllluuuuddddeeee """"ggggddddoooouuuubbbblllleeeetttt....hhhh""""

          // Macros used to simulate parameterized types:
          ggggddddoooouuuubbbblllleeeettttddddeeeeccccllllaaaarrrreeee((((TTTT))))

          // Expanding RRRRaaaannnnggggeeee2222ddddddddeeeeccccllllaaaarrrreeee produces the following text:

          ####iiiiffffnnnnddddeeeeffff RRRRAAAANNNNGGGGEEEE2222DDDD____HHHH
          #### ddddeeeeffffiiiinnnneeee RRRRAAAANNNNGGGGEEEE2222DDDD____HHHH

          #### iiiiffffnnnnddddeeeeffff SSSSTTTTDDDD____HHHH
           ttttyyyyppppeeeeddddeeeeffff sssshhhhoooorrrrtttt BBBBOOOOOOOOLLLL;;;;     ////**** UUUUsssseeee BBBBOOOOOOOOLLLL ffffoooorrrr llllooooggggiiiiccccaaaallll vvvvaaaarrrriiiiaaaabbbblllleeeessss aaaassss aaaa rrrreeeemmmmiiiinnnnddddeeeerrrr ttttoooo
                                        tttthhhheeee pppprrrrooooggggrrrraaaammmmmmmmeeeerrrr.... ****////
          #### eeeennnnddddiiiiffff

          ccccllllaaaassssssss RRRRaaaannnnggggeeee2222dddd((((TTTT))))    {{{{
               ppppuuuubbbblllliiiicccc::::
               nnnnRRRRaaaannnnggggeeee((((TTTT)))) xxxx;;;;
               nnnnRRRRaaaannnnggggeeee((((TTTT)))) yyyy;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) hhhhhhhhcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) hhhhllllcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) llllllllcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) llllhhhhcccc(((()))) ccccoooonnnnsssstttt;;;;
               ggggddddoooouuuubbbblllleeeetttt((((TTTT)))) aaaarrrreeeeaaaa((((vvvvooooiiiidddd)))) ccccoooonnnnsssstttt;;;;
               lllloooonnnngggg wwwweeeeiiiigggghhhhtttt(((()))) ccccoooonnnnsssstttt;;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____llllllllcccc,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____hhhhhhhhcccc))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& cccc))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxxrrrr,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyyrrrr))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((TTTT xxxx1111,,,, TTTT yyyy1111,,,, TTTT xxxx2222,,,, TTTT yyyy2222))));;;;
               RRRRaaaannnnggggeeee2222dddd((((TTTT))))(((())));;;;
               ooooppppeeeerrrraaaattttoooorrrr ccccoooonnnnsssstttt vvvvooooiiiidddd ****(((()))) ccccoooonnnnsssstttt;;;;
               BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!(((()))) ccccoooonnnnsssstttt;;;;
               CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr &&&&====((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa))));;;;
               CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& ooooppppeeeerrrraaaattttoooorrrr ||||====((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa))));;;;
               BBBBOOOOOOOOLLLL ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa)))) CCCC;;;;
               BBBBOOOOOOOOLLLL ssssuuuubbbbsssseeeetttt____ooooffff((((CCCC RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa)))) CCCC;;;;
               }}}};;;;

          RRRRaaaannnnggggeeee2222dddd((((TTTT)))) ooooppppeeeerrrraaaattttoooorrrr&&&&((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          RRRRaaaannnnggggeeee2222dddd((((TTTT)))) ooooppppeeeerrrraaaattttoooorrrr||||((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;
          BBBBOOOOOOOOLLLL ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& aaaa,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& bbbb))));;;;

          RRRRaaaannnnggggeeee2222ddddiiiimmmmpppplllleeeemmmmeeeennnntttt((((TTTT))))



     Page 1                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



          must be expanded to define some of the functions.

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Every RRRRaaaannnnggggeeee2222dddd((((TTTT)))) represents a rectangular area whose sides
          are parallel to the coordinate axes.  Range2ds can be used
          for representing, windows on a graphics display, garden
          plots, or perhaps the space taken by letters in a text
          processor.  Range2d(int)(0, 0, 79, 23) can represent the
          legal locations on a typical crt text terminal.
          Range2d(double)(0.0, 0.0, 1.0, 6.283) might specify the area
          over which a function must be integrated.

          The type of a range2d's elements should ideally be a _t_y_p_e
          _p_a_r_a_m_e_t_e_r; a preprocessor presently simulates this facility.
          Thus the type name of a range takes the form Range2d(T),
          where T is a type name that is a single identifier.

          The type T must have most of the operations of a built-in
          numeric type.  The typename BOOL is used to denote logical
          variables.  It is equivalent to int, and is included for
          clarity.  The typedef is protected by "#ifndef STD_H".

     MMMMaaaaccccrrrroooossss UUUUsssseeeedddd ttttoooo SSSSiiiimmmmuuuullllaaaatttteeee PPPPaaaarrrraaaammmmeeeetttteeeerrrriiiizzzzeeeedddd TTTTyyyyppppeeeessss
          The macro RRRRaaaannnnggggeeee2222ddddddddeeeeccccllllaaaarrrreeee((((TTTT)))) generates the declarations for
          the class Range2d(T).  It must appear once in every source
          file for every T used in that source file.

          Because Range2d(T) is a preprocessor macros, no spaces may
          appear inside the parentheses in Range2d(T).

     DDDDeeeessssccccrrrriiiippppttttiiiioooonnnn ooooffff RRRRaaaannnnggggeeee2222dddd((((TTTT))))
          All operations in Range2d(T) are constructed of the
          equivalent operations of Range(T).  For the purposes of the
          following descriptions, assume x1, x2, y1 and y2 are of type
          T, r1 and r2 are of type nRange(T), d1 and d2 are of type
          gdoublet(T), and R1 and R2 are Range2d(T).

     CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))(((()))) creates an empty range, containing nothing.
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((dddd1111)))) creates a range which contains only the
          single point d1.
          The remaining three constructors can make larger ranges:
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____llllllllcccc,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& ____hhhhhhhhcccc))))
          makes a range specified by the lower-lower corner (smaller
          values of both x and y) and the corner with the two higher
          values,
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((TTTT xxxx1111,,,, TTTT yyyy1111,,,, TTTT xxxx2222,,,, TTTT yyyy2222)))) makes a range specified
          by the minimum and maximum values of x and y (x2>=x1 and
          y2>=y1 for the result to be non-empty), or
          RRRRaaaannnnggggeeee2222dddd((((TTTT))))((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& xxxxrrrr,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee((((TTTT))))&&&& yyyyrrrr)))) makes a
          range specified by the intersection of a Range(T) in one
          coordinate and another Range(T) in the other coordinate.



     Page 2                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



     CCCCoooommmmppppaaaarrrriiiissssoooonnnnssss
          It is sensible to compare Range2ds to themselves and to
          coordinate pairs -- gdoublet(T)s.
          OOOOppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& dddd1111)))), and
          it's reversal find out whether d1 is inside of R1.
          OOOOppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt ggggddddoooouuuubbbblllleeeetttt((((TTTT))))&&&& dddd1111)))), and
          it's reversal are just the negation of operator==.
          OOOOppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) tests
          for equality -- all null Range2ds compare equal.
          OOOOppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR1111,,,, ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) is
          the reverse of operator==.
          RRRR1111....ssssuuuubbbbsssseeeetttt____ooooffff((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) returns nonzero if R1
          completely encloses R2.  A null range is a subset of
          everything.
          RRRR1111....ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((ccccoooonnnnsssstttt RRRRaaaannnnggggeeee2222dddd((((TTTT))))&&&& RRRR2222)))) returns nonzero if R2
          completely encloses R1.  A null range is a superset of
          nothing except another null range.

     CCCCoooommmmbbbbiiiinnnnaaaattttiiiioooonnnnssss
          Range2ds can be combined:
          RRRR1111||||RRRR2222 returns the smallest rectangle which is large enough
          to include both R1 and R2, while
          RRRR1111&&&&RRRR2222 returns the intersection of the two ranges.  Operators
          ||||==== and &&&&==== work as expected.

     CCCCoooorrrrnnnneeeerrrrssss aaaannnndddd CCCCoooooooorrrrddddiiiinnnnaaaatttteeeessss
          The ranges in the two dimensions are accessible as RRRR1111....xxxx and
          RRRR1111....yyyy.  These are nRange(T); their ends may be accessed as
          R1.x.low, R1.y.high, and so forth.  Additionally, functions
          are provided to return the corners and center: hhhhhhhhcccc(((()))) returns
          the corner (x.high, y.high), and llllhhhhcccc(((()))), hhhhllllcccc(((()))), and llllllllcccc(((())))
          return the other corners.

     MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss
          An empty Range2d(T) is one where either x or y are null
          ranges.  A range2d may be tested for emptiness by
          ooooppppeeeerrrraaaattttoooorrrr ccccoooonnnnsssstttt vvvvooooiiiidddd ****, which returns zero for an empty
          range2d, or by
          ooooppppeeeerrrraaaattttoooorrrr!!!!, which returns nonzero (true) for an empty
          range2d.
          The function wwwweeeeiiiigggghhhhtttt(((()))) returns either the area (for floating
          point types), or the number of points included (for an
          integral type).  Zero is returned for a null range.  For
          example, if a Range2d(T) is used to represent a window, the
          weight will be the number of pixels in the window
          (Range2d(int)(0,0,2,2).weight() == 9).

     BBBBUUUUGGGGSSSS aaaannnndddd CCCCAAAAUUUUTTTTIIIIOOOONNNNSSSS
          Remember, Range(int)(0,0,1,1) includes the points (0,0),
          (0,1), (1,0), and (1,1) -- the edges are included.  Null
          (e.g. empty) ranges will give undefined results for their
          corners and endpoints.



     Page 3                                           (printed 3/6/91)






     RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))                 CCCCCCCClllliiiibbbb                 RRRRAAAANNNNGGGGEEEE2222DDDD((((3333CCCC++++++++))))



          It is necessary to expand Range2dimplement(T) for the
          definitions of certain of the functions.

     SSSSeeeeeeee aaaallllssssoooo
          Range.h and gdoublet.h.


















































     Page 4                                           (printed 3/6/91)



