


     FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))                CCCCCCCClllliiiibbbb                FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          File_vec - treats a flat file like a one-dimensional array

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee """"FFFFiiiilllleeee____vvvveeeecccc....hhhh""""
          ccccllllaaaassssssss FFFFiiiilllleeee____vvvveeeecccc :::: ppppuuuubbbblllliiiicccc EEEErrrrrrrroooorrrr____bbbbuuuuffff {{{{
          ppppuuuubbbblllliiiicccc::::
               /* _c_o_n_s_t_r_u_c_t_o_r_s */
               FFFFiiiilllleeee____vvvveeeecccc(((())));;;;
               FFFFiiiilllleeee____vvvveeeecccc((((SSSSttttrrrriiiinnnngggg&&&&,,,, iiiinnnntttt,,,, SSSSttttrrrriiiinnnngggg&&&&))));;;;
               /* _F_i_l_e__v_e_c _f_u_n_c_t_i_o_n_s */
               ssssttttaaaatttteeeessss iiiinnnniiiitttt((((SSSSttttrrrriiiinnnngggg&&&&,,,, iiiinnnntttt,,,, SSSSttttrrrriiiinnnngggg&&&&))));;;;
               iiiinnnntttt fffflllluuuusssshhhh(((())));;;;
               iiiinnnntttt eeeennnndddd(((())));;;;
               iiiinnnntttt nnnnuuuummmmrrrreeeeccccssss(((())));;;;
               vvvvooooiiiidddd**** ppppuuuutttt((((vvvvooooiiiidddd****))));;;;
               vvvvooooiiiidddd**** ggggeeeetttt((((vvvvooooiiiidddd****))));;;;
               /* _o_p_e_r_a_t_o_r_s */
               FFFFiiiilllleeee____vvvveeeecccc&&&& ooooppppeeeerrrraaaattttoooorrrr[[[[]]]]((((iiiinnnntttt))));;;;
               ffffrrrriiiieeeennnndddd vvvvooooiiiidddd**** ooooppppeeeerrrraaaattttoooorrrr====((((vvvvooooiiiidddd****,,,, FFFFiiiilllleeee____vvvveeeecccc&&&&))));;;;
               ffffrrrriiiieeeennnndddd vvvvooooiiiidddd**** ooooppppeeeerrrraaaattttoooorrrr====((((FFFFiiiilllleeee____vvvveeeecccc&&&&,,,, vvvvooooiiiidddd****))));;;;
          }}}};;;;

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          The File_vec class allows a flat file with fixed length
          records to be treated like a one-dimensional array from
          within a C++ program.

          FFFFiiiilllleeee____vvvveeeecccc((((SSSSttttrrrriiiinnnngggg&&&& ffffiiiilllleeee,,,,iiiinnnntttt ssssiiiizzzzeeee,,,,SSSSttttrrrriiiinnnngggg&&&& mmmmooooddddeeee)))) is a
          constructor that opens a file called ffffiiiilllleeee with open mode
          mmmmooooddddeeee.  The allowable open modes are identical to those of
          _s_t_d_i_o: "w+", "r+", "a", etc. Remember that append mode
          initially puts the file pointer at the end of the file.
          SSSSiiiizzzzeeee specifies the record size in bytes.

          FFFFiiiilllleeee____vvvveeeecccc(((()))),,,, a do nothing constructor, and iiiinnnniiiitttt,,,, a member
          function that does the same job as FFFFiiiilllleeee____vvvveeeecccc((((SSSSttttrrrriiiinnnngggg&&&&,,,, iiiinnnntttt,,,,
          SSSSttttrrrriiiinnnngggg&&&&)))),,,, are used in conjunction when a broader scope for a
          File_vec object is needed, as in the following scenario:

               File_vec vec;
               if (exists("file")) {
                   vec.init("file",20,"r");
                   f1(vec);
               }
               else {
                   create("file");
                   vec.init("file",20,"w+");
               }
               f2(vec);





     Page 1                                          (printed 11/9/90)






     FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))                CCCCCCCClllliiiibbbb                FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))



          The file associated with a File_vec object is automatically
          closed when the object dies or is reassigned by a subsequent
          call to iiiinnnniiiitttt.

          The fffflllluuuusssshhhh function explicitly flushes the file's buffer.

          The eeeennnndddd function moves the file pointer to the point just
          after the last record in the file.  EEEEnnnndddd returns -1 on
          failure, otherwise the new current record number.

          The nnnnuuuummmmrrrreeeeccccssss function returns the number of records in the
          file.  NNNNuuuummmmrrrreeeeccccssss silently does a flush to the disk.

          GGGGeeeetttt((((vvvvooooiiiidddd**** rrrreeeecccc)))) reads a record from the file at the record
          postion just _a_f_t_e_r the current one, copies it into rrrreeeecccc, and
          advances the file pointer by one record.  It returns a
          pointer to rrrreeeecccc or _z_e_r_o if the operation fails.  The type of
          rrrreeeecccc must be a pointer to a structure of contiguous memory.

          PPPPuuuutttt((((vvvvooooiiiidddd**** rrrreeeecccc)))) writes the record rrrreeeecccc to the file at the
          record postion just _a_f_t_e_r the current one and advances the
          file pointer by one record. It returns a pointer to rrrreeeecccc or
          _z_e_r_o if the operation fails.  The type of rrrreeeecccc must be a
          pointer to a structure of contiguous memory.

          OOOOppppeeeerrrraaaattttoooorrrr==== and ooooppppeeeerrrraaaattttoooorrrr[[[[]]]] are used in conjunction to give the
          illusion of reading and writing to a vector instead of a
          file.  The index to ooooppppeeeerrrraaaattttoooorrrr[[[[]]]] specifies the record number
          in the file to access (read or write).  OOOOppppeeeerrrraaaattttoooorrrr==== returns
          _z_e_r_o if the assignment operation fails, or the void*
          argument if the assignment operation succeeds. It has the
          side effect of reading from the object on the right hand
          side and writing (or memory copying) to the object on the
          left hand side.  The type of void* must be a pointer to a
          structure of contiguous memory.

     UUUUSSSSAAAAGGGGEEEE
          The following is an example of File_vec usage.

               #include "File_vec.h"
               struct Person {
                  char name[20];
                  char sex;
                  int age;
               };
               main()
               {
                  void add_person(char*, Person*);
                  void inc_age_on_all(char*);
                  Person p1;
                  strcpy(p1.name,"John Doe");
                  p1.sex = 'M';



     Page 2                                          (printed 11/9/90)






     FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))                CCCCCCCClllliiiibbbb                FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))



                  p1.age = 49;
                  add_person("person.db",&p1);
                  inc_age_on_all("person.db");
               }
               void add_person(char* fname, Person* p)
               {
                  File_vec person_vec(fname,sizeof(Person),"a");
                  if (person_vec.state == _FAIL) {
                      cerr << person_vec.bufvalue() << "\n";
                      return;
                  }
                  if (person_vec.put(p) == NULL)  {
                      cerr << person_vec.bufvalue() << "\n";
                  }
               }
               void inc_age_on_all(char* fname)
               {
                  Person p;
                  int nrecs,i;
                  File_vec person_vec(fname,sizeof(Person),"r+");
                  if (person_vec.state == _FAIL) {
                      cerr << person_vec.bufvalue() << "\n";
                      return;
                  }
                  nrecs = person_vec.numrecs();
                  for (i=0;i<nrecs;i++) {
                      if ((&p = person_vec[i]) == NULL)  {  // read
                         cerr << person_vec.bufvalue() << "\n";
                         return;
                      }
                      p.age++;
                      if ((person_vec[i] = &p) == NULL)  {  // write
                         cerr << person_vec.bufvalue() << "\n";
                         return;
                      }
                  }
               }


     FFFFIIIILLLLEEEESSSS
          File_vec.h
          Error_buf.h
     DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
          File_vec errors are detected by its member functions and
          constructors. When this happens, the Error_buf public
          variable ssssttttaaaatttteeee will be set to ____FFFFAAAAIIIILLLL,,,, and the Error_buf
          member function bbbbuuuuffffvvvvaaaalllluuuueeee can be used to return an
          explanation of the failure.  The most common problem is the
          inability to access the file in one way or another.
     CCCCAAAAVVVVEEEEAAAATTTTSSSS
          Error_buf should probably not be a base class but rather a
          public member of File_vec.  This may change in future



     Page 3                                          (printed 11/9/90)






     FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))                CCCCCCCClllliiiibbbb                FFFFIIIILLLLEEEE____VVVVEEEECCCC((((3333CCCC++++++++))))



          releases.
     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          Error_buf class




















































     Page 4                                          (printed 11/9/90)



