


     PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          Point, Rect - simple points and rectangles

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee <<<<ggggeeeeoooommmmeeeettttrrrryyyy....hhhh>>>>

          ssssttttrrrruuuucccctttt PPPPooooiiiinnnntttt {{{{
               sssshhhhoooorrrrtttt xxxx,,,, yyyy;;;;

            /* _C_o_n_s_t_r_u_c_t_o_r_s. */
               PPPPooooiiiinnnntttt (((())));;;;
               PPPPooooiiiinnnntttt ((((iiiinnnntttt aaaa,,,, iiiinnnntttt bbbb))));;;;
            /* _O_p_e_r_a_t_o_r_s */
               PPPPooooiiiinnnntttt&&&& ooooppppeeeerrrraaaattttoooorrrr++++==== ((((PPPPooooiiiinnnntttt))));;;;
               PPPPooooiiiinnnntttt&&&& ooooppppeeeerrrraaaattttoooorrrr----==== ((((PPPPooooiiiinnnntttt))));;;;
               PPPPooooiiiinnnntttt&&&& ooooppppeeeerrrraaaattttoooorrrr****==== ((((iiiinnnntttt))));;;;
               PPPPooooiiiinnnntttt&&&& ooooppppeeeerrrraaaattttoooorrrr****==== ((((PPPPooooiiiinnnntttt))));;;;
          }}}};;;;

          ccccllllaaaassssssss RRRReeeecccctttt {{{{
          ppppuuuubbbblllliiiicccc::::
            /* _C_o_n_s_t_r_u_c_t_o_r_s. */
               RRRReeeecccctttt (((())));;;;
               RRRReeeecccctttt ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
               RRRReeeecccctttt ((((iiiinnnntttt xxxxoooo,,,, iiiinnnntttt yyyyoooo,,,, iiiinnnntttt xxxxcccc,,,, iiiinnnntttt yyyycccc))));;;;
            /* _M_e_m_b_e_r _f_u_n_c_t_i_o_n_s */
               iiiinnnntttt cccclllliiiipppp ((((RRRReeeecccctttt))));;;;
               iiiinnnntttt iiiinnnntttteeeerrrrsssseeeecccctttt ((((RRRReeeecccctttt))));;;;
               iiiinnnntttt ccccoooonnnnttttaaaaiiiinnnnssss ((((PPPPooooiiiinnnntttt))));;;;
               iiiinnnntttt ccccoooonnnnttttaaaaiiiinnnnssss ((((RRRReeeecccctttt))));;;;
               PPPPooooiiiinnnntttt oooorrrriiiiggggiiiinnnn (((())));;;;
               PPPPooooiiiinnnntttt ccccoooorrrrnnnneeeerrrr (((())));;;;
               PPPPooooiiiinnnntttt ssssiiiizzzzeeee (((())));;;;
               iiiinnnntttt wwwwiiiiddddtttthhhh (((())));;;;
               iiiinnnntttt hhhheeeeiiiigggghhhhtttt (((())));;;;
               RRRReeeecccctttt iiiinnnnsssseeeetttt ((((iiiinnnntttt iiii))));;;;
            /* _O_p_e_r_a_t_o_r_s */
               RRRReeeecccctttt&&&& ooooppppeeeerrrraaaattttoooorrrr++++==== ((((PPPPooooiiiinnnntttt pppp))));;;;
               RRRReeeecccctttt&&&& ooooppppeeeerrrraaaattttoooorrrr----==== ((((PPPPooooiiiinnnntttt pppp))));;;;
               RRRReeeecccctttt&&&& ooooppppeeeerrrraaaattttoooorrrr****==== ((((PPPPooooiiiinnnntttt pppp))));;;;
               RRRReeeecccctttt&&&& ooooppppeeeerrrraaaattttoooorrrr****==== ((((iiiinnnntttt ssss))));;;;
          }}}};;;;
            /* _A_r_i_t_h_m_e_t_i_c _o_p_e_r_a_t_o_r_s. */
          PPPPooooiiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr++++ ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          PPPPooooiiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr---- ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          PPPPooooiiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr**** ((((PPPPooooiiiinnnntttt aaaa,,,, iiiinnnntttt bbbb))));;;;
          PPPPooooiiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr**** ((((iiiinnnntttt bbbb,,,, PPPPooooiiiinnnntttt aaaa))));;;;
          PPPPooooiiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr**** ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr++++ ((((PPPPooooiiiinnnntttt pppp,,,, RRRReeeecccctttt rrrr))));;;;
          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr++++ ((((RRRReeeecccctttt rrrr,,,, PPPPooooiiiinnnntttt pppp))));;;;
          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr---- ((((RRRReeeecccctttt rrrr,,,, PPPPooooiiiinnnntttt pppp))));;;;
          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr**** ((((PPPPooooiiiinnnntttt pppp,,,, RRRReeeecccctttt rrrr))));;;;



     Page 1                                          (printed 11/9/90)






     PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))



          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr**** ((((RRRReeeecccctttt rrrr,,,, PPPPooooiiiinnnntttt pppp))));;;;
          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr**** ((((RRRReeeecccctttt rrrr,,,, iiiinnnntttt iiii))));;;;
          RRRReeeecccctttt ooooppppeeeerrrraaaattttoooorrrr**** ((((iiiinnnntttt iiii,,,, RRRReeeecccctttt rrrr))));;;;
            /* _C_o_m_p_a_r_i_s_o_n _o_p_e_r_a_t_o_r_s. */
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr======== ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr!!!!==== ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr>>>>==== ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr<<<<==== ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr>>>> ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr<<<< ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr======== ((((RRRReeeecccctttt rrrr,,,, RRRReeeecccctttt ssss))));;;;
          iiiinnnntttt ooooppppeeeerrrraaaattttoooorrrr!!!!==== ((((RRRReeeecccctttt rrrr,,,, RRRReeeecccctttt ssss))));;;;
            /* _M_i_s_c_e_l_l_a_n_e_o_u_s _f_u_n_c_t_i_o_n_s. */
          RRRReeeecccctttt ccccaaaannnnoooonnnn ((((PPPPooooiiiinnnntttt aaaa,,,, PPPPooooiiiinnnntttt bbbb))));;;;
          lllloooonnnngggg mmmmuuuullllddddiiiivvvv ((((iiiinnnntttt aaaa,,,, iiiinnnntttt bbbb,,,, iiiinnnntttt cccc))));;;;

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          The Point and Rect classes, along with their related
          functions, provide a simple implementation of points and
          rectangles, as might be used in a bitmap graphics library.

          The library defines the following functions, where iiii has
          type int, llll has type long, xxxx0000, yyyy0000, xxxx1111 and yyyy1111 have type
          short, pppp0000 and pppp1111 have type Point, and rrrr0000 and rrrr1111 have type
          Rect:

        CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss::::
              PPPPooooiiiinnnntttt ((((xxxx0000,,,, yyyy0000))))
                   A point with x coordinate xxxx0000 and y coordinate yyyy0000.
                   If xxxx0000 and yyyy0000 are omitted, they default to 0.
              RRRReeeecccctttt ((((pppp0000,,,, pppp1111))))
                   A rectangle whose origin is pppp0000 and whose corner is
                   pppp1111.  If pppp0000 and pppp1111 are omitted, they default to the
                   origin.  See NNNNOOOOTTTTEEEESSSS below for the meaning of a
                   rectangle's corner.
              RRRReeeecccctttt ((((xxxx0000,,,, yyyy0000,,,, xxxx1111,,,, yyyy1111))))
                   A rectangle whose origin has coordinates xxxx0000 and yyyy0000,
                   and whose corner has coordinates xxxx1111 and yyyy1111.

        AAAAssssssssiiiiggggnnnnmmmmeeeennnntttt ooooppppeeeerrrraaaattttoooorrrrssss::::
              pppp0000 ++++==== pppp1111
              pppp0000 ----==== pppp1111
                   Translate pppp0000 by adding or subtracting the point pppp1111.
              pppp0000 ****==== iiii
              pppp0000 ****==== pppp1111
                   Scale pppp0000, either by multiplying both coordinates by
                   iiii, or by multiplying the x (y) coordinate by the x
                   (y) coordinate of pppp1111.
              rrrr0000 ++++==== pppp0000
              rrrr0000 ----==== pppp0000
                   TTTTrrrraaaannnnssssllllaaaatttteeee rrrr0000 bbbbyyyy aaaaddddddddiiiinnnngggg oooorrrr ssssuuuubbbbttttrrrraaaaccccttttiiiinnnngggg tttthhhheeee ppppooooiiiinnnntttt pppp0000....
              rrrr0000 ****==== iiii



     Page 2                                          (printed 11/9/90)






     PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))



              rrrr0000 ****==== pppp0000
                   Scale rrrr0000, either by multiplying all coordinates by
                   iiii, or by multiplying the x (y) coordinates of the
                   origin and corner by the x (y) coordinate of pppp0000.

        AAAArrrriiiitttthhhhmmmmeeeettttiiiicccc ooooppppeeeerrrraaaattttoooorrrrssss::::
              pppp0000 ++++ pppp1111
              pppp0000 ---- pppp1111
                   Return the point that is the sum or difference of
                   the given points.
              pppp0000 **** iiii
              iiii **** pppp0000
                   Return the point whose coordinates are those of pppp0000
                   multiplied by iiii.
              pppp0000 **** pppp1111
                   Return the point whose x (y) coordinate is the
                   product of the x (y) coordinates of pppp0000 and pppp1111.
              pppp0000 ++++ rrrr0000
              rrrr0000 ++++ pppp0000
              rrrr0000 ---- pppp0000
                   Return the rectangle obtained by translating rrrr0000
                   appropriately by pppp0000.
              rrrr0000 **** iiii
              iiii **** rrrr0000
                   Return the rectangle obtained by scaling all
                   coordinates of rrrr0000 by iiii.
              pppp0000 **** rrrr0000
              rrrr0000 **** pppp0000
                   Return the rectangle obtained by scaling the x (y)
                   coordinates of the origin and corner of rrrr0000 by the x
                   (y) coordinate of pppp0000.

        CCCCoooommmmppppaaaarrrriiiissssoooonnnn ooooppppeeeerrrraaaattttoooorrrrssss::::
              pppp0000 ======== pppp1111
              pppp0000 !!!!==== pppp1111
              pppp0000 >>>>==== pppp1111
              pppp0000 <<<<==== pppp1111
              pppp0000 >>>> pppp1111
              pppp0000 <<<< pppp1111
                   Return non-zero if pppp0000 and pppp1111 satisfy the
                   appropriate relationship.  ``Less than or equal
                   to'' is evaluated coordinate-wise. ``Less than''
                   means ``less than or equal to'' but not equal.
                   Similar definitions hold for ``greater than or
                   equal to'' and ``greater than''.
              rrrr0000 ======== rrrr1111
              rrrr0000 !!!!==== rrrr1111
                   Return non-zero if rrrr0000 and rrrr1111 satisfy the
                   appropriate relationship.

        RRRReeeecccctttt mmmmeeeemmmmbbbbeeeerrrr ffffuuuunnnnccccttttiiiioooonnnnssss::::
              iiii ==== rrrr0000....cccclllliiiipppp ((((rrrr1111))))



     Page 3                                          (printed 11/9/90)






     PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))



                   Clip rrrr0000 to the intersection of itself with rrrr1111.
                   Return non-zero if the intersection is non-empty;
                   otherwise return 0.
              iiii ==== rrrr0000....iiiinnnntttteeeerrrrsssseeeecccctttt ((((rrrr1111))))
                   Return non-zero if the intersection of rrrr0000 with rrrr1111
                   is non-empty; otherwise return 0.
              iiii ==== rrrr0000....ccccoooonnnnttttaaaaiiiinnnnssss ((((pppp0000))))
                   Return non-zero if rrrr0000 contains the point pppp0000;
                   otherwise return 0.
              iiii ==== rrrr0000....ccccoooonnnnttttaaaaiiiinnnnssss ((((rrrr1111))))
                   Return non-zero if rrrr0000 contains the rectangle rrrr1111;
                   otherwise return 0.
              pppp0000 ==== rrrr0000....oooorrrriiiiggggiiiinnnn (((())))
              pppp0000 ==== rrrr0000....ccccoooorrrrnnnneeeerrrr (((())))
                   Return the origin or corner of rrrr0000.
              rrrr0000....sssseeeetttt____oooorrrriiiiggggiiiinnnn ((((pppp0000))))
              rrrr0000....sssseeeetttt____ccccoooorrrrnnnneeeerrrr ((((pppp0000))))
                   Set the origin or corner of rrrr0000 to pppp0000.
              pppp0000 ==== rrrr0000....ssssiiiizzzzeeee (((())))
                   Return the width and height of rrrr0000 as the x and y
                   coordinates of pppp0000.
              iiii ==== rrrr0000....wwwwiiiiddddtttthhhh (((())))
              iiii ==== rrrr0000....hhhheeeeiiiigggghhhhtttt (((())))
                   Return the width or height of rrrr0000.
              rrrr1111 ==== rrrr0000....iiiinnnnsssseeeetttt ((((iiii))))
                   Return the rectangle obtained by uniformly
                   shrinking rrrr0000 by iiii units.  If iiii is negative, rrrr1111 will
                   be larger than rrrr0000.

        MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss ffffuuuunnnnccccttttiiiioooonnnnssss::::
              llll ==== mmmmuuuullllddddiiiivvvv ((((xxxx0000,,,, yyyy0000,,,, xxxx1111))))
                   Returns the value of xxxx0000*yyyy0000/xxxx1111, performing the
                   arithmetic as longs.
              rrrr0000 ==== ccccaaaannnnoooonnnn ((((pppp0000,,,, pppp1111))))
                   Returns the rectangle determined by the given
                   points.

     NNNNOOOOTTTTEEEESSSS
          The Point stores its x and y coordinates as two shorts Rect
          is represented by its origin and the opposing corner. It is
          assumed that the origin is less than or equal to the corner,
          in the defined ordering on points.  The library uses the
          Blit rectangle model, in which the corner actually lies
          outside of the rectangle. The rectangle contains all points
          whose x and y coordinates are greater than or equal to the
          origin's x and y coordinates, and strictly less than the
          corner's x and y coordinates.  Thus, the width of the
          rectangle is the corner's x coordinate minus the origin's x
          coordinate, and similarly for the height.  For example, the
          rectangle with corner (0,0) and corner (1,2) contains the
          points (0,0) and (0,1).




     Page 4                                          (printed 11/9/90)






     PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))                   CCCCCCCClllliiiibbbb                   PPPPOOOOIIIINNNNTTTT((((3333CCCC++++++++))))



     FFFFIIIILLLLEEEESSSS
          geometry.h

     BBBBUUUUGGGGSSSS
          There are no checks for integer overflow, or that a
          rectangle corner is greater than or equal to its origin.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          Pike, R. et al., _B_i_t_m_a_p _G_r_a_p_h_i_c_s _S_I_G_G_R_A_P_H'_8_4 _c_o_u_r_s_e _n_o_t_e_s,
          AT&T Bell Laboratories TM 11271-840521-05, 1984.  Gansner,
          E., _I_r_i_s: _A _C_l_a_s_s-_B_a_s_e_d _W_i_n_d_o_w _L_i_b_r_a_r_y, AT&T Bell
          Laboratories TM 59113-880331-02, 1988.











































     Page 5                                          (printed 11/9/90)



