


     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          Int_set - simple, flexible sets of integers

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee <<<<Int_set.h>

          eeeexxxxtttteeeerrrrnnnn iiiinnnntttt IIIINNNNTTTTSSSSEEEETTTT____DDDDBBBBGGGG;;;;

          ssssttttrrrruuuucccctttt IIIInnnntttt____sssseeeetttt____ssssiiiizzzzeeee{{{{
               iiiinnnntttt ssssiiiizzzzeeee;;;;      ////****tttthhhheeee ppppoooossssssssiiiibbbblllleeee llllaaaarrrrggggeeeesssstttt mmmmeeeemmmmbbbbeeeerrrr tttthhhhaaaatttt wwwwiiiillllllll ffffiiiitttt iiiinnnn tttthhhheeee sssseeeetttt ****////
               IIIInnnntttt____sssseeeetttt____ssssiiiizzzzeeee((((iiiinnnntttt))));;;;
          }}}};;;;

          ccccllllaaaassssssss IIIInnnntttt____sssseeeetttt____rrrreeeepppp {{{{............}}}};;;;

          ccccllllaaaassssssss IIIInnnntttt____sssseeeetttt {{{{
               ffffrrrriiiieeeennnndddd ccccllllaaaassssssss IIIInnnntttt____sssseeeetttt____iiiitttteeeerrrr;;;;
               ffffrrrriiiieeeennnndddd iiiioooossssttttrrrreeeeaaaammmm &&&&ooooppppeeeerrrraaaattttoooorrrr<<<<<<<<((((iiiioooossssttttrrrreeeeaaaammmm&&&&,,,, IIIInnnntttt____sssseeeetttt&&&&))));;;;
          pppprrrrooootttteeeecccctttteeeedddd::::
                    ////**** _S_t_o_r_a_g_e _r_e_a_l_l_o_c_a_t_i_o_n ****////
               vvvvooooiiiidddd ggggrrrroooowwww((((iiiinnnntttt))));;;;
          ppppuuuubbbblllliiiicccc::::
                    ////**** _c_o_n_s_t_r_u_c_t_o_r_s ****////
               IIIInnnntttt____sssseeeetttt(((())));;;;
               IIIInnnntttt____sssseeeetttt((((IIIInnnntttt____sssseeeetttt____ssssiiiizzzzeeee))));;;;
               IIIInnnntttt____sssseeeetttt((((iiiinnnntttt,,,, iiiinnnntttt ............))));;;;
               IIIInnnntttt____sssseeeetttt((((iiiinnnntttt ****))));;;;
               IIIInnnntttt____sssseeeetttt((((IIIInnnntttt____sssseeeetttt&&&&))));;;;
               ~~~~IIIInnnntttt____sssseeeetttt(((())));;;;
                    ////**** _a_s_s_i_g_n ****////
               vvvvooooiiiidddd ooooppppeeeerrrraaaattttoooorrrr====(_I_n_t__s_e_t &);
                    /* _b_i_n_a_r_y _s_e_t _o_p_e_r_a_t_o_r_s */
               _I_n_t__s_e_t _o_p_e_r_a_t_o_r-(_I_n_t__s_e_t&);  /* _d_i_f_f_e_r_e_n_c_e */
               _I_n_t__s_e_t _o_p_e_r_a_t_o_r&(_I_n_t__s_e_t&);  /* _i_n_t_e_r_s_e_c_t_i_o_n */
               _I_n_t__s_e_t _o_p_e_r_a_t_o_r|(_I_n_t__s_e_t&);  /* _u_n_i_o_n */
                    /* _a_d_d _m_e_m_b_e_r_s */
               _v_o_i_d _a_d_d(_i_n_t);
               _v_o_i_d _a_d_d(_i_n_t, _i_n_t ...);
               _v_o_i_d _a_d_d(_i_n_t *);
               _v_o_i_d _f_i_l_l__r_a_n_g_e(_i_n_t, _i_n_t);
                    /* _r_e_m_o_v_e _m_e_m_b_e_r_s */
               _v_o_i_d _r_e_m_o_v_e(_i_n_t);
               _v_o_i_d _r_e_m_o_v_e(_i_n_t, _i_n_t ...);
               _v_o_i_d _r_e_m_o_v_e(_i_n_t*);
               _v_o_i_d _c_l_e_a_r__r_a_n_g_e(_i_n_t, _i_n_t);
               _v_o_i_d _m_a_k_e__e_m_p_t_y();

                    /* _B_o_o_l_e_a_n_s: _e_q_u_a_l_i_t_y _a_n_d _l_e_x_i_c_o_g_r_a_p_h_i_c _o_r_d_e_r */
               _i_n_t _c_o_m_p_a_r_e(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _o_p_e_r_a_t_o_r==(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _o_p_e_r_a_t_o_r!=(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _o_p_e_r_a_t_o_r<(_I_n_t__s_e_t&);



     Page 1                                          (printed 11/9/90)






     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



               _u_n_s_i_g_n_e_d _i_n_t _o_p_e_r_a_t_o_r>(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _o_p_e_r_a_t_o_r<=(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _o_p_e_r_a_t_o_r>=(_I_n_t__s_e_t&);
                    /* _M_i_s_c_e_l_l_a_n_e_o_u_s _s_e_t _o_p_e_r_a_t_i_o_n_s */
               _u_n_s_i_g_n_e_d _i_n_t _i_n_c_l_u_d_e_s(_i_n_t);
               _i_n_t _c_a_r_d_i_n_a_l_i_t_y();
               _u_n_s_i_g_n_e_d _i_n_t _i_s__s_u_b_s_e_t__o_f(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _i_s__s_u_p_e_r_s_e_t__o_f(_I_n_t__s_e_t&);
               _u_n_s_i_g_n_e_d _i_n_t _i_s__e_m_p_t_y();
               _i_n_t _g_e_t__w_o_r_d__c_o_u_n_t();
               _i_n_t _g_e_t__m_a_x__m_e_m_b_e_r();
               _i_n_t _g_e_t__m_i_n__m_e_m_b_e_r();
          };

          _c_l_a_s_s _I_n_t__s_e_t__i_t_e_r{
          _p_u_b_l_i_c:
               _I_n_t__s_e_t__i_t_e_r(_I_n_t__s_e_t&);
                    /* _R_e_s_e_t _f_u_n_c_t_i_o_n_s */
               _i_n_t _f_i_r_s_t();
               _i_n_t _l_a_s_t();
                    /* _I_t_e_r_a_t_i_o_n_s */
               _i_n_t _o_p_e_r_a_t_o_r++();
               _i_n_t _o_p_e_r_a_t_o_r--();
          };
          _i_o_s_t_r_e_a_m &_o_p_e_r_a_t_o_r<<(_i_o_s_t_r_e_a_m&, _I_n_t__s_e_t&);

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          Every Int_set represents an integer set which may contain
          positive integers.  There is no fixed limit on the range
          other than the amount of memory available to store the set.
          Sets are stored in an array of unsigned integers which will
          grow when large integers are added to the set.  Sets do not
          have to be similar in size for the operations to be applied.

          The structure Int_set_size exists only to ensure the type
          safety of 5Int_set operators.  It's sole use is as an
          argument to an Int_set constructor, as described below.
          This is necessary only because C++ would understand a
          constructor with a simple integer argument to also be a
          conversion operator.  That conversion would be applied to
          mixed expressions of Int_sets and integer, so that these
          would compile with no errors and no warnings.  It is not our
          intention to use the constructor for any implicit
          conversions.  Mixed type operations with Int_sets should and
          must give a compile time error.  The existance of the
          Int_set_size type is a regretable kludge to work around the
          unfortunate overloading of the C++ constructors.

          The following constructors, operators and functions are
          defined for Int_sets where aaaa and bbbb are of type Int_set aaaannnndddd
          iiii,,,, jjjj aaaannnndddd kkkk aaaarrrreeee ooooffff ttttyyyyppppeeee iiiinnnntttt....  iiiinnnnttttlllliiiisssstttt iiiissss aaaannnn aaaarrrrrrrraaaayyyy ooooffff
          iiiinnnntttteeeeggggeeeerrrrssss:::: iiiinnnntttt iiiinnnnttttlllliiiisssstttt[[[[]]]] wwwwhhhhoooosssseeee llllaaaasssstttt eeeelllleeeemmmmeeeennnntttt iiiissss aaaa nnnneeeeggggaaaattttiiiivvvveeee



     Page 2                                          (printed 11/9/90)






     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



          iiiinnnntttteeeeggggeeeerrrr::::

        CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss::::
              IIIInnnntttt____sssseeeetttt aaaa(((())));;;;
                   Constructs an empty Int_set aaaa wwwwiiiitttthhhh oooonnnneeee uuuunnnnssssiiiiggggnnnneeeedddd iiiinnnntttt
                   aaaallllllllooooccccaaaatttteeeedddd ffffoooorrrr sssseeeetttt ssssttttoooorrrraaaaggggeeee....
              IIIInnnntttt____sssseeeetttt aaaa((((ssssssss))));;;;
                   Where ssssssss is of type Int_set_size....  CCCCoooonnnnssssttttrrrruuuuccccttttssss aaaannnn
                   eeeemmmmppppttttyyyy IIIInnnntttt____sssseeeetttt aaaa with at least enough storage
                   allocated to hold a member with the value ssssssss....ssssiiiizzzzeeee.
                   There are two ways to use this constructor.
                   Cautious users will explicitly pass arguments of
                   type Int_set_size ttttoooo tttthhhheeee ccccoooonnnnssssttttrrrruuuuccccttttoooorrrr,,,, eeeeiiiitttthhhheeeerrrr bbbbyyyy
                   ddddeeeeccccllllaaaarrrriiiinnnngggg IIIInnnntttt____sssseeeetttt____ssssiiiizzzzeeee variables, or by doing
                   explicit casts: Int_set a(Int_set_size(5)).
                   However, if an integer is passed to this
                   constructor, C++ will silently apply the cast:
                   Int_set a(5).
              IIIInnnntttt____sssseeeetttt aaaa((((bbbb))));;;;
                   Constructs an Int_set aaaa tttthhhhaaaatttt iiiissss aaaa ccccooooppppyyyy ooooffff IIIInnnntttt____sssseeeetttt
                   bbbb....
              IIIInnnntttt____sssseeeetttt aaaa((((5555,,,, 11110000,,,, iiii,,,, jjjj,,,, kkkk,,,, ----1111))));;;;
                   Assuming that iiii,,,, jjjj and kkkk are positive integers,
                   this creates an Int_set aaaa tttthhhhaaaatttt iiiinnnniiiittttiiiiaaaallllllllyyyy ccccoooonnnnttttaaaaiiiinnnnssss
                   tttthhhheeee mmmmeeeemmmmbbbbeeeerrrrssss 5555,,,, 11110000,,,, iiii,,,, jjjj,,,, kkkk....  AAAAnnnnyyyy nnnnuuuummmmbbbbeeeerrrr ooooffff iiiinnnntttteeeeggggeeeerrrr
                   aaaarrrrgggguuuummmmeeeennnnttttssss mmmmaaaayyyy bbbbeeee uuuusssseeeedddd....  AAAA nnnneeeeggggaaaattttiiiivvvveeee iiiinnnntttteeeeggggeeeerrrr mmmmuuuusssstttt
                   mmmmaaaarrrrkkkk tttthhhheeee eeeennnndddd ooooffff tttthhhheeee aaaarrrrgggguuuummmmeeeennnntttt lllliiiisssstttt....
              IIIInnnntttt____sssseeeetttt aaaa((((iiiinnnnttttlllliiiisssstttt))));;;;
                   Constructs an Int_set aaaa tttthhhhaaaatttt iiiinnnniiiittttiiiiaaaallllllllyyyy ccccoooonnnnttttaaaaiiiinnnnssss aaaallllllll
                   ooooffff tttthhhheeee ppppoooossssiiiittttiiiivvvveeee iiiinnnntttteeeeggggeeeerrrrssss iiiinnnn iiiinnnnttttlllliiiisssstttt ffffrrrroooommmm iiiinnnnttttlllliiiisssstttt[[[[0000]]]]
                   uuuupppp ttttoooo,,,, bbbbuuuutttt nnnnooootttt iiiinnnncccclllluuuuddddiiiinnnngggg,,,, tttthhhheeee ffffiiiirrrrsssstttt nnnneeeeggggaaaattttiiiivvvveeee
                   iiiinnnntttteeeeggggeeeerrrr iiiinnnn iiiinnnnttttlllliiiisssstttt....

        AAAAssssssssiiiiggggnnnnmmmmeeeennnntttt::::
              aaaa ==== b
                   The Int_set bbbb becomes a copy of Int_set aaaa....

        AAAAddddddddiiiinnnngggg mmmmeeeemmmmbbbbeeeerrrrssss::::
              aaaa....aaaadddddddd((((iiii))));;;;
                   Makes the integer iiii a member of Int_set aaaa....
                   RRRReeeeaaaallllllllooooccccaaaatttteeeessss ssssppppaaaacccceeee ffffoooorrrr aaaa iiiiffff iiii wwwwiiiillllllll nnnnooootttt ffffiiiitttt....
              aaaa....aaaadddddddd((((5555,,,, iiii,,,, 22225555,,,, jjjj,,,, ----1111))));;;;
                   Assuming that iiii and jjjj are positive integers, this
                   makes 5555,,,, 22225555,,,, iiii and jjjj members of Int_set aaaa....  TTTThhhheeee
                   lllliiiisssstttt ooooffff iiiinnnntttteeeeggggeeeerrrr aaaarrrrgggguuuummmmeeeennnnttttssss ttttoooo aaaadddddddd mmmmuuuusssstttt bbbbeeee tttteeeerrrrmmmmiiiinnnnaaaatttteeeedddd
                   bbbbyyyy aaaa nnnneeeeggggaaaattttiiiivvvveeee iiiinnnntttteeeeggggeeeerrrr....
              aaaa....aaaadddddddd((((iiiinnnnttttlllliiiisssstttt))))
                   Makes all the integers in array iiiinnnnttttlllliiiisssstttt from the
                   integer in iiiinnnnttttlllliiiisssstttt[[[[0000]]]] up to, but not including, the
                   first negative integer in iiiinnnnttttlllliiiisssstttt.  Lists of
                   integers to add to a set must always be terminated
                   by a negative integer.



     Page 3                                          (printed 11/9/90)






     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



              aaaa....ffffiiiillllllll____rrrraaaannnnggggeeee((((iiii,,,,jjjj))));;;;
                   For every positive integer kkkk such that _i_<_k_<_j, kkkk
                   becomes a member of Int_set aaaa....  IIIIffff _j<_i tttthhhhiiiissss ddddooooeeeessss
                   nnnnooootttthhhhiiiinnnngggg....

        RRRReeeemmmmoooovvvviiiinnnngggg mmmmeeeemmmmbbbbeeeerrrrssss::::
              aaaa....rrrreeeemmmmoooovvvveeee((((iiii))));;;;
                   Removes the integer iiii from Int_set aaaa....  IIIIffff iiii wwwwaaaassss nnnnooootttt
                   aaaa mmmmeeeemmmmbbbbeeeerrrr,,,, tttthhhhiiiissss ddddooooeeeessss nnnnooootttthhhhiiiinnnngggg....
              aaaa....rrrreeeemmmmoooovvvveeee((((5555,,,, iiii,,,, 22225555,,,, jjjj,,,, ----1111))));;;;
                   Assuming that iiii and jjjj are positive integers, this
                   removes 5555,,,, 22225555,,,, iiii and jjjj from Int_set aaaa....  TTTThhhheeee lllliiiisssstttt ooooffff
                   iiiinnnntttteeeeggggeeeerrrr aaaarrrrgggguuuummmmeeeennnnttttssss ttttoooo aaaadddddddd mmmmuuuusssstttt bbbbeeee tttteeeerrrrmmmmiiiinnnnaaaatttteeeedddd bbbbyyyy aaaa
                   nnnneeeeggggaaaattttiiiivvvveeee iiiinnnntttteeeeggggeeeerrrr....
              aaaa....rrrreeeemmmmoooovvvveeee((((iiiinnnnttttlllliiiisssstttt))))
                   Removes from set aaaa all the integers in array
                   iiiinnnnttttlllliiiisssstttt from the integer in iiiinnnnttttlllliiiisssstttt[[[[0000]]]] up to, but
                   not including, the first negative integer in
                   iiiinnnnttttlllliiiisssstttt.  Lists of integers to remove from a set
                   must always be terminated by a negative integer.
              aaaa....cccclllleeeeaaaarrrr____rrrraaaannnnggggeeee((((iiii,,,,jjjj))));;;;
                   For every positive integer kkkk such that _i_<_k_<_j, kkkk is
                   removed from Int_set aaaa....  IIIIffff _j<_i tttthhhhiiiissss ddddooooeeeessss nnnnooootttthhhhiiiinnnngggg....
              aaaa....mmmmaaaakkkkeeee____eeeemmmmppppttttyyyy(((())));;;;
                   Removes every member of set aaaa.  Int_set aaaa bbbbeeeeccccoooommmmeeeessss
                   aaaannnn eeeemmmmppppttttyyyy sssseeeetttt....

        BBBBiiiinnnnaaaarrrryyyy SSSSeeeetttt OOOOppppeeeerrrraaaattttiiiioooonnnnssss::::
              aaaa &&&& bbbb
                   Returns an Int_set tttthhhhaaaatttt iiiissss tttthhhheeee iiiinnnntttteeeerrrrsssseeeeccccttttiiiioooonnnn ooooffff aaaa
                   aaaannnndddd bbbb....  ((((aaaa ((((^^^^)))) bbbb))))
              aaaa |||| bbbb
                   Returns an Int_set tttthhhhaaaatttt iiiissss tttthhhheeee uuuunnnniiiioooonnnn ooooffff aaaa aaaannnndddd bbbb....
                   ((((aaaa UUUU bbbb))))
              aaaa ---- bbbb
                   Returns an Int_set tttthhhhaaaatttt iiiissss tttthhhheeee ddddiiiiffffffffeeeerrrreeeennnncccceeee ooooffff aaaa aaaannnndddd
                   bbbb....  ((((aaaa ---- bbbb))))

        LLLLeeeexxxxiiiiccccooooggggrrrraaaapppphhhhiiiicccc OOOOrrrrddddeeeerrrriiiinnnngggg OOOOppppeeeerrrraaaattttiiiioooonnnnssss ((((BBBBoooooooolllleeeeaaaannnn))))::::
              aaaa ===== bbbb
                   Returns a 1111 if aaaa contains the same members as bbbb,
                   returns a 0000 otherwise.  ( a = b )
              aaaa !!!!==== b
                   Returns a 1111 if aaaa does not contain the same members
                   as bbbb, returns a 0000 otherwise.  ( a =/ b )
              aaaa <<<<==== b
                   Returns a 1111 if aaaa is lexicographically equal or less
                   than bbbb, returns a 0000 otherwise.  ( a _< b )
              aaaa >>>>==== b
                   Returns a 1111 if aaaa is lexicographically equal to or
                   greater than bbbb, returns a 0000 otherwise.  ( a _> b )
              aaaa <<<< bbbb



     Page 4                                          (printed 11/9/90)






     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



                   Returns a 1111 if aaaa is lexicographically less than bbbb,
                   returns a 0000 otherwise.  ( a < b )
              aaaa >>>> bbbb
                   Returns a 1111 if aaaa is lexicographically greater than
                   bbbb, returns a 0000 otherwise.  ( a > b )
              aaaa....ccccoooommmmppppaaaarrrreeee((((bbbb))))
                   Returns a negative integer if aaaa is
                   lexicographically less than bbbb, Returns a positive
                   integer if aaaa is lexicographically greater than bbbb,
                   Returns a 0000 if aaaa is equal to bbbb.

        OOOOtttthhhheeeerrrr BBBBoooooooolllleeeeaaaannnn OOOOppppeeeerrrraaaattttiiiioooonnnnssss::::
              aaaa....iiiissss____eeeemmmmppppttttyyyy(((())))
                   Returns a 1111 if aaaa has no members, returns a 0000
                   otherwise.  ( a = O/ )
              aaaa....iiiinnnncccclllluuuuddddeeeessss((((iiii))))
                   Returns a 1111 if iiii is a member of aaaa, returns a 0000
                   otherwise.  ( i -C a )
              aaaa....iiiissss____ssssuuuubbbbsssseeeetttt____ooooffff((((bbbb))))
                   Returns a 1111 if all of the members of aaaa are
                   contained in bbbb, returns a 0000 otherwise.  ( a (~_= b )
              aaaa....iiiissss____ssssuuuuppppeeeerrrrsssseeeetttt____ooooffff((((bbbb))))
                   Returns a 1111 if aaaa contains all of the members of bbbb,
                   returns a 0000 otherwise.  ( a ~_=) b )

        MMMMiiiisssscccceeeellllllllaaaannnneeeeoooouuuussss::::
              aaaa....ggggrrrroooowwww((((iiii))))
                   Reallocates storage so that it contains i unsigned
                   intssss iiiinnnn tttthhhheeee sssseeeetttt ssssttttoooorrrraaaaggggeeee aaaarrrrrrrraaaayyyy ffffoooorrrr IIIInnnntttt____sssseeeetttt aaaa.  This
                   may expand or reduce the storage.  The members of
                   Int_set nnnneeeevvvveeeerrrr rrrreeeedddduuuucccceeee tttthhhheeee ssssttttoooorrrraaaaggggeeee ccccaaaappppaaaacccciiiittttyyyy ooooffff aaaa sssseeeetttt....
                   TTTThhhheeee ccccaaaappppaaaabbbbiiiilllliiiittttyyyy ffffoooorrrr sssshhhhrrrriiiinnnnkkkkiiiinnnngggg iiiissss tttthhhheeeerrrreeee ffffoooorrrr ddddeeeerrrriiiivvvveeeedddd
                   ccccllllaaaasssssssseeeessss....
              aaaa....ggggeeeetttt____wwwwoooorrrrdddd____ccccoooouuuunnnntttt(((())))
                   Returns the number of unsigned intssss tttthhhhaaaatttt hhhhaaaavvvveeee bbbbeeeeeeeennnn
                   aaaallllllllooooccccaaaatttteeeedddd ffffoooorrrr ssssttttoooorrrriiiinnnngggg mmmmeeeemmmmbbbbeeeerrrrssss ooooffff aaaa....
              aaaa....ccccaaaarrrrddddiiiinnnnaaaalllliiiittttyyyy(((())))
                   Returns an int tttthhhhaaaatttt iiiissss tttthhhheeee nnnnuuuummmmbbbbeeeerrrr ooooffff eeeelllleeeemmmmeeeennnnttttssss iiiinnnn
                   IIIInnnntttt____sssseeeetttt aaaa.  (|a|)
              aaaa....ggggeeeetttt____mmmmaaaaxxxx____mmmmeeeemmmmbbbbeeeerrrr(((())))
                   Returns the value of the largest member of aaaa.
                   Returns ----1111 if aaaa is empty.
              aaaa....ggggeeeetttt____mmmmiiiinnnn____mmmmeeeemmmmbbbbeeeerrrr(((())))
                   Returns the value of the smallest member of aaaa.
                   Returns ----1111 if aaaa is empty.

          The Int_set_iter class is a "friend" of Int_sets that can be
          used for iteration.  One or more iterators can be created
          for any Int_set object.  Below, iiiitttteeeerrrr is of type
          Int_set_iterator aaaannnndddd aaaa iiiissss ooooffff ttttyyyyppppeeee IIIInnnntttt____sssseeeetttt....  TTTThhhheeee vvvvaaaarrrriiiiaaaabbbblllleeeessss iiii,,,,
          jjjj aaaarrrreeee iiiinnnntttteeeeggggeeeerrrrssss....




     Page 5                                          (printed 11/9/90)






     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



        CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrr::::
              IIIInnnntttt____sssseeeetttt____iiiitttteeeerrrr iiiitttteeeerrrr((((aaaa))));;;;
                   Creates and initializes an iterator for set aaaa.

        RRRReeeesssseeeetttt ffffuuuunnnnccccttttiiiioooonnnnssss::::
              iiiitttteeeerrrr....ffffiiiirrrrsssstttt(((())))
                   Returns an integer equal to the smallest member of
                   set aaaa; Returns a ----1111 if aaaa is an empty set.
              iiiitttteeeerrrr....llllaaaasssstttt(((())))
                   Returns an integer equal to the largest member of
                   set aaaa; Returns a ----1111 if aaaa is an empty set.

        IIIInnnnccccrrrreeeemmmmeeeennnntttt////DDDDeeeeccccrrrreeeemmmmeeeennnntttt ooooppppeeeerrrraaaattttoooorrrrssss::::
              iiiitttteeeerrrr++++++++
                   If this is the first call after creating iiiitttteeeerrrr, this
                   call is the same as calling iter.first()....

                   IIIIffff tttthhhhiiiissss iiiissss nnnnooootttt tttthhhheeee ffffiiiirrrrsssstttt ccccaaaallllllll aaaafffftttteeeerrrr tttthhhheeee ccccrrrreeeeaaaattttoooorrrr,,,,
                   tttthhhheeeennnn iiiitttt wwwwiiiillllllll rrrreeeettttuuuurrrrnnnn aaaannnn iiiinnnntttteeeeggggeeeerrrr eeeeqqqquuuuaaaallll ttttoooo tttthhhheeee
                   ssssmmmmaaaalllllllleeeesssstttt mmmmeeeemmmmbbbbeeeerrrr ooooffff aaaa tttthhhhaaaatttt iiiissss llllaaaarrrrggggeeeerrrr tttthhhhaaaannnn tttthhhheeee llllaaaasssstttt
                   vvvvaaaalllluuuueeee rrrreeeettttuuuurrrrnnnneeeedddd bbbbyyyy tttthhhheeee iiiitttteeeerrrraaaattttoooorrrr....

                   IIIIffff tttthhhheeee sssseeeetttt iiiissss eeeemmmmppppttttyyyy,,,, oooorrrr tttthhhheeeerrrreeee iiiissss nnnnoooo llllaaaarrrrggggeeeerrrr mmmmeeeemmmmbbbbeeeerrrr,,,,
                   ++++++++ wwwwiiiillllllll rrrreeeettttuuuurrrrnnnn ----1111....
              iiiitttteeeerrrr--------
                   If this is the first call to any member function
                   after creating iiiitttteeeerrrr, this call will return ----1111.
                   Reverse iteration usually is initialized by calling
                   iter.last()....

                   IIIIffff tttthhhhiiiissss iiiissss nnnnooootttt tttthhhheeee ffffiiiirrrrsssstttt ccccaaaallllllll aaaafffftttteeeerrrr tttthhhheeee ccccrrrreeeeaaaattttoooorrrr,,,,
                   tttthhhheeeennnn iiiitttt wwwwiiiillllllll rrrreeeettttuuuurrrrnnnn aaaannnn iiiinnnntttteeeeggggeeeerrrr eeeeqqqquuuuaaaallll ttttoooo tttthhhheeee llllaaaarrrrggggeeeesssstttt
                   mmmmeeeemmmmbbbbeeeerrrr ooooffff aaaa tttthhhhaaaatttt iiiissss ssssmmmmaaaalllllllleeeerrrr tttthhhhaaaannnn tttthhhheeee llllaaaasssstttt vvvvaaaalllluuuueeee
                   rrrreeeettttuuuurrrrnnnneeeedddd bbbbyyyy tttthhhheeee iiiitttteeeerrrraaaattttoooorrrr....

                   IIIIffff tttthhhheeee sssseeeetttt iiiissss eeeemmmmppppttttyyyy,,,, oooorrrr tttthhhheeeerrrreeee iiiissss nnnnoooo ssssmmmmaaaalllllllleeeerrrr mmmmeeeemmmmbbbbeeeerrrr,,,,
                   ++++++++ wwwwiiiillllllll rrrreeeettttuuuurrrrnnnn ----1111....

          The Int_set package provides an output operator using the
          iostream library for printing sets.  If iiiioooossss is of type
          iostream,,,, tttthhhheeee ffffoooolllllllloooowwwwiiiinnnngggg ooooppppeeeerrrraaaattttiiiioooonnnn iiiissss ppppoooossssssssiiiibbbblllleeee::::

        SSSSttttrrrreeeeaaaammmm OOOOuuuuttttppppuuuutttt::::
              iiiioooossss <<<<< aaaa
                   Prints a textual representation of the set to the
                   iostream iiiioooossss.  If set aaaa contains the members 3333,,,, 5555,,,,
                   7777 and 9999, this prints: [3 5 7 9].

     FFFFIIIILLLLEEEESSSS
          Int_set.h, Int_set.c

     NNNNOOOOTTTTEEEESSSS



     PPPPaaaaggggeeee 6666                                          ((((pppprrrriiiinnnntttteeeedddd 11111111////9999////99990000))))






     IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((CCCCCCCClllliiiibbbb))))         IIIInnnntttt____sssseeeetttt((((3333CCCC++++++++))))



          This version of Int_set requires the functions contained in
          the include file stdarg.h.  This should be part of the
          standard C++ version 2.0 environment.  It also uses
          functions from iostream.h, also standard to version 2.0.
          Another version is available for earlier C++ versions.

          The files memory.h and values.h are included when this is
          compiled for System V or Version 9 systems.  Values.h is
          used to obtain the size of a byte on a particular machine.
          This package must have the correct number of bits in a byte
          for any machine it is run on.  For BSD systems, the file
          bstring.h is included.  No reliable include file exists to
          read the number of bits in a byte.  In this case, a byte is
          assumed to have eight bits.  If that is a bad assumption,
          this package will fail.


     DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
          Error messages are generated if negative integer arguments
          appear where they are not expected, such as for arguments to
          the function cccclllleeeeaaaarrrr____rrrraaaannnnggggeeee.

          The package contains a global variable IIIINNNNTTTTSSSSEEEETTTT____DDDDBBBBGGGG which can
          be set to 1111 to obtain some performance information.  If this
          is set, a message will be printed each time a new IIIInnnntttt____sssseeeetttt is
          created or when one is destroyed.  If this is set, the
          output operator will print additional information about the
          amount of memory allocated to the set.  In this additional
          output, wc iiiissss wwwwoooorrrrdddd ccccoooouuuunnnntttt ((((nnnnuuuummmmbbbbeeeerrrr ooooffff uuuunnnnssssiiiiggggnnnneeeedddd iiiinnnntttteeeeggggeeeerrrrssss uuuusssseeeedddd
          ffffoooorrrr ssssttttoooorrrraaaaggggeeee)))),,,, mmmmmmmm is the maximum member in the set, and ms iiiissss
          tttthhhheeee llllaaaarrrrggggeeeesssstttt mmmmeeeemmmmbbbbeeeerrrr tttthhhhaaaatttt ccccaaaannnn ffffiiiitttt wwwwiiiitttthhhhoooouuuutttt aaaa rrrreeeeaaaallllllllooooccccaaaattttiiiioooonnnn bbbbeeeeiiiinnnngggg
          nnnneeeeeeeeddddeeeedddd....


     WWWWAAAARRRRNNNNIIIINNNNGGGGSSSS
          If you are on a BSD system, make sure that your machine uses
          8 bits to represent a byte.

          Remember also, any of these functions that take an array of
          integers or a variable number of integer arguments must
          include a negative integer to mark the end of the list.
          This includes two constructors, the aaaadddddddd function and the
          rrrreeeemmmmoooovvvveeee function.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          Grass, J. E., _A_n _I_n_t_e_g_e_r _S_e_t _C_l_a_s_s _f_o_r _C++, AT&T-Bell
          Laboratories TM, 59113-880819-08, August 1988.








     Page 7                                          (printed 11/9/90)



