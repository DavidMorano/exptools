


     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



     NNNNAAAAMMMMEEEE
          ucvec cvec svec ivec fvec dvec fcxvec dcxvec - vector
          classes

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ucvec - vector of unsigned chars
          cvec - vector of chars
          svec - vector of shorts
          ivec - vector of ints
          fvec - vector of floats
          dvec - vector of doubles
          fcxvec - vector of single precision complex
          dcxvec - vector of double precision complex

          In the following, VEC can be replaced by ucvec, cvec, svec,
          ivec, fvec, dvec, fcxvec, or dxcvec, while TTTTYYYYPPPPEEEE is replaced
          by unsigned char, char, short, int, float, double, scomplex,
          or complex respectively. Some operations are not available
          for all classes as specifically noted below.

          ####iiiinnnncccclllluuuuddddeeee <<<<VVVVEEEECCCC....hhhh>>>>

          ttttyyyyppppeeeeddddeeeeffff  iiiinnnntttt ((((****GGGGPPPPTTTT))))((((iiiinnnntttt,,,,cccchhhhaaaarrrr****))));;;;

          ccccllllaaaassssssss VVVVEEEECCCC {{{{
          ppppuuuubbbblllliiiicccc::::
              ////****  _C_o_n_s_t_r_u_c_t_o_r_s ****////
              VVVVEEEECCCC(((())));;;;
              VVVVEEEECCCC((((iiiinnnntttt ssss))));;;;
              VVVVEEEECCCC((((iiiinnnntttt ffffiiiirrrrsssstttt,,,,iiiinnnntttt llllaaaasssstttt))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt SSSSuuuubbbbVVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt uuuuccccvvvveeeecccc&&&&))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt ccccvvvveeeecccc&&&&))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt ssssvvvveeeecccc&&&&))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt iiiivvvveeeecccc&&&&))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt ffffvvvveeeecccc&&&&))));;;;
              VVVVEEEECCCC((((ccccoooonnnnsssstttt ddddvvvveeeecccc&&&&))));;;;

              VVVVEEEECCCC((((ccccoooonnnnsssstttt ffffccccxxxxvvvveeeecccc&&&&))));;;;   ////**** OOOOnnnnllllyyyy ffffoooorrrr ccccoooommmmpppplllleeeexxxx vvvveeeeccccttttoooorrrrssss ****////
              VVVVEEEECCCC((((ccccoooonnnnsssstttt ddddccccxxxxvvvveeeecccc&&&&))));;;;
              ~~~~VVVVEEEECCCC(((())));;;;

              ////**** _N_u_m_b_e_r _o_f _e_l_e_m_e_n_t_s ****////
              iiiinnnntttt ssssiiiizzzzeeee(((())));;;;
              vvvvooooiiiidddd sssseeeetttt____ssssiiiizzzzeeee((((iiiinnnntttt))));;;;

              ////**** _O_r_i_g_i_n ****////
              iiiinnnntttt oooorrrriiiigggg(((())));;;;
              vvvvooooiiiidddd sssseeeetttt____oooorrrriiiigggg((((iiiinnnntttt xxxx))));;;;

              ////**** _S_u_b-_v_e_c_t_o_r_s ****////
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr(((())))((((iiiinnnntttt ffffiiiirrrrsssstttt,,,,iiiinnnntttt llllaaaasssstttt))));;;;



     Page 1                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr(((())))((((iiiinnnntttt ffffiiiirrrrsssstttt))));;;;

              ////**** _E_l_e_m_e_n_t _a_c_c_e_s_s ****////
              TTTTYYYYPPPPEEEE&&&& eeeelllleeeemmmm((((iiiinnnntttt iiii))));;;;
              TTTTYYYYPPPPEEEE&&&& ooooppppeeeerrrraaaattttoooorrrr[[[[]]]]((((iiiinnnntttt iiii))))

              ////**** _E_q_u_i_v_a_l_e_n_c_e ****////
              ffffrrrriiiieeeennnndddd iiiinnnntttt eeeeqqqquuuuaaaallll((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&& lllleeeefffftttt,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&& rrrriiiigggghhhhtttt))));;;;

              ////**** _R_e_d_u_c_t_i_o_n_s ****////
              ffffrrrriiiieeeennnndddd TTTTYYYYPPPPEEEE mmmmaaaaxxxx((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd TTTTYYYYPPPPEEEE mmmmiiiinnnn((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd TTTTYYYYPPPPEEEE ddddooootttt((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd TTTTYYYYPPPPEEEE pppprrrroooodddd((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&& xxxx))));;;;
              ffffrrrriiiieeeennnndddd TTTTYYYYPPPPEEEE ssssuuuummmm((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&& xxxx))));;;;

              ////**** _E_l_e_m_e_n_t _b_y _e_l_e_m_e_n_t _b_i_n_a_r_y _o_p_e_r_a_t_i_o_n_s ****////
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC mmmmiiiinnnn((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC mmmmiiiinnnn((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC mmmmiiiinnnn((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC mmmmaaaaxxxx((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC mmmmaaaaxxxx((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC mmmmaaaaxxxx((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr++++((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr++++((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr++++((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr----((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr----((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr----((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr****((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr****((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr****((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr////((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr////((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr////((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ////**** _B_i_t_w_i_s_e _o_p_e_r_a_t_o_r_s - _u_c_v_e_c, _c_v_e_c, _s_v_e_c, _a_n_d _i_v_e_c _o_n_l_y ****////
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr^^^^((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr^^^^((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr^^^^((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr&&&&((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr&&&&((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr&&&&((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr||||((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr||||((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;



     Page 2                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr||||((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd VVVVEEEECCCC eeeeqqqqvvvv((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC eeeeqqqqvvvv((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,,TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC eeeeqqqqvvvv((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ////**** _U_n_a_r_y _s_i_g_n_e_d _o_p_e_r_a_t_o_r_s, _a_l_l _b_u_t _u_c_v_e_c ****////
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC aaaabbbbssss((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr----((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ////**** _U_n_a_r_y _b_i_t _o_p_e_r_a_t_o_r_s, _u_c_v_e_c, _c_v_e_c, _s_v_e_c, _a_n_d _i_v_e_c _o_n_l_y ****////
              ffffrrrriiiieeeennnndddd VVVVEEEECCCC ooooppppeeeerrrraaaattttoooorrrr~~~~((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ////**** _A_s_s_i_g_n_m_e_n_t _o_p_e_r_a_t_o_r_s ****////
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr====((((TTTTYYYYPPPPEEEE))));;;;

              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr++++====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr++++====((((TTTTYYYYPPPPEEEE))));;;;

              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr----====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr----====((((TTTTYYYYPPPPEEEE))));;;;

              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr****====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr****====((((TTTTYYYYPPPPEEEE))));;;;

              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr////====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr////====((((TTTTYYYYPPPPEEEE))));;;;

              ////**** _A_s_s_i_g_n_m_e_n_t _b_i_t _o_p_e_r_a_t_o_r_s, _u_c_v_e_c, _c_v_e_c, _s_v_e_c, _a_n_d _i_v_e_c _o_n_l_y ****////
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr^^^^====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr^^^^====((((TTTTYYYYPPPPEEEE))));;;;

              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr&&&&====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr&&&&====((((TTTTYYYYPPPPEEEE))));;;;

              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr||||====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              VVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr||||====((((TTTTYYYYPPPPEEEE))));;;;

              ////**** _C_o_m_p_a_r_i_s_o_n _o_p_e_r_a_t_o_r_s ****////
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr>>>>====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr>>>>====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr>>>>====((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr>>>>((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr>>>>((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr>>>>((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr<<<<====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr<<<<====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr<<<<====((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;




     Page 3                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr<<<<((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr<<<<((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr<<<<((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr========((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr========((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr!!!!====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&,,,, TTTTYYYYPPPPEEEE))));;;;
              ffffrrrriiiieeeennnndddd iiiivvvveeeecccc ooooppppeeeerrrraaaattttoooorrrr!!!!====((((TTTTYYYYPPPPEEEE,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;

              ////**** _C_o_m_p_l_e_x _O_p_e_r_a_t_i_o_n_s ****////
              ffffxxxxvvvveeeecccc rrrreeeeaaaallll((((ccccoooonnnnsssstttt ffffccccxxxxvvvveeeecccc&&&&))));;;;
              ffffxxxxvvvveeeecccc iiiimmmmaaaagggg((((ccccoooonnnnsssstttt ffffccccxxxxvvvveeeecccc&&&&))));;;;
              ffffxxxxvvvveeeecccc aaaabbbbssss((((ccccoooonnnnsssstttt ffffccccxxxxvvvveeeecccc&&&&))));;;;
              ffffxxxxvvvveeeecccc nnnnoooorrrrmmmm((((ccccoooonnnnsssstttt ffffccccxxxxvvvveeeecccc&&&&))));;;;
              ffffxxxxvvvveeeecccc aaaarrrrgggg((((ccccoooonnnnsssstttt ffffccccxxxxvvvveeeecccc&&&&))));;;;

              ddddxxxxvvvveeeecccc rrrreeeeaaaallll((((ccccoooonnnnsssstttt ddddccccxxxxvvvveeeecccc&&&&))));;;;
              ddddxxxxvvvveeeecccc iiiimmmmaaaagggg((((ccccoooonnnnsssstttt ddddccccxxxxvvvveeeecccc&&&&))));;;;
              ddddxxxxvvvveeeecccc aaaabbbbssss((((ccccoooonnnnsssstttt ddddccccxxxxvvvveeeecccc&&&&))));;;;
              ddddxxxxvvvveeeecccc nnnnoooorrrrmmmm((((ccccoooonnnnsssstttt ddddccccxxxxvvvveeeecccc&&&&))));;;;
              ddddxxxxvvvveeeecccc aaaarrrrgggg((((ccccoooonnnnsssstttt ddddccccxxxxvvvveeeecccc&&&&))));;;;

              NNNNAAAAMMMMEEEE ccccoooonnnnjjjj((((ccccoooonnnnsssstttt NNNNAAAAMMMMEEEE&&&&))));;;;

              ////**** _i_o_s_t_r_e_a_m _I/_O ****////
              ffffrrrriiiieeeennnndddd oooossssttttrrrreeeeaaaammmm&&&& ooooppppeeeerrrraaaattttoooorrrr<<<<<<<<((((oooossssttttrrrreeeeaaaammmm&&&&,,,,ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              ffffrrrriiiieeeennnndddd iiiissssttttrrrreeeeaaaammmm&&&& ooooppppeeeerrrraaaattttoooorrrr>>>>>>>>((((iiiissssttttrrrreeeeaaaammmm&&&&,,,,VVVVEEEECCCC&&&&))));;;;

              ////**** _E_r_r_o_r _H_a_n_d_l_i_n_g ****////
              GGGGPPPPTTTT sssseeeetttthhhhaaaannnnddddlllleeeerrrr((((GGGGPPPPTTTT))));;;;
          }}}};;;;

          ccccllllaaaassssssss SSSSuuuubbbbVVVVEEEECCCC {{{{
          ppppuuuubbbblllliiiicccc::::
              ////**** _A_s_s_i_g_n_m_e_n_t _i_n_t_o _s_u_b _v_e_c_t_o_r_s ****////
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr====((((TTTTYYYYPPPPEEEE))));;;;

              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr++++====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr++++====((((TTTTYYYYPPPPEEEE))));;;;

              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr----====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr----====((((TTTTYYYYPPPPEEEE))));;;;

              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr****====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr****====((((TTTTYYYYPPPPEEEE))));;;;

              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr////====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr////====((((TTTTYYYYPPPPEEEE))));;;;



     Page 4                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              ////**** _A_s_s_i_g_n_m_e_n_t _b_i_t _o_p_e_r_a_t_o_r_s, _u_c_v_e_c, _c_v_e_c, _s_v_e_c, _a_n_d _i_v_e_c _o_n_l_y ****////
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr^^^^====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr^^^^====((((TTTTYYYYPPPPEEEE))));;;;

              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr&&&&====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr&&&&====((((TTTTYYYYPPPPEEEE))));;;;

              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr||||====((((ccccoooonnnnsssstttt VVVVEEEECCCC&&&&))));;;;
              SSSSuuuubbbbVVVVEEEECCCC&&&& ooooppppeeeerrrraaaattttoooorrrr||||====((((TTTTYYYYPPPPEEEE))));;;;
          }}}};;;;


     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          A VEC is an array of TYPEs.  Storage is allocated memory
          space as required.  Memory is not freed until the vector is
          destroyed.

          SubVECs can be formed from VECs using the () operator and
          may be used in any context in which an VEC is legal.  In
          addition, a SubVEC may be assigned into, changing the
          contents of the VEC it was formed from.

          This library attempts to use vector hardware if it is
          available on the machine.  An emulation library is available
          on machines that do not have vector coprocessors.


          The following constructors, operators, and functions are
          defined for Strings, where:
           -- aaaa and bbbb are of type VEC
           -- xxxx is of type TYPE
           -- iiii and jjjj are of type int
           -- iiiioooossss is of type iostream

        CCCCoooonnnnssssttttrrrruuuuccccttttoooorrrrssss::::
              VVVVEEEECCCC aaaa(((())))
                   A zero length VEC, aaaa with origin 0.
              VVVVEEEECCCC aaaa((((iiii))))
                   A VEC,  of length iiii with an origin of 0 and
                   undefined contents.
              VVVVEEEECCCC aaaa((((iiii,,,,jjjj))))
                   A VEC,  with origin iiii and maximum index of jjjj.  Its
                   length is jjjj----iiii++++1111.  The contents are undefined.
              VVVVEEEECCCC aaaa((((bbbb))))
                   If bbbb is the same type of vector as aaaa then this
                   constructor creates a VEC, aaaa,,,, containing a copy of
                   the VEC bbbb.  If bbbb is a different type of vector then
                   the constructed vector aaaa will have the same size
                   and origin as bbbb, but its contents will be the same
                   as if an assignment of each elements were
                   performed.  Note that the results are not well-
                   defined for all combinations of types and data



     Page 5                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



                   ranges, nor are any compile time warnings
                   generated.  Complex vectors, fcxvec and dcxvec, may
                   not be constructed from any of the non-complex
                   vectors.


        LLLLeeeennnnggggtttthhhh::::
              iiii ==== aaaa....ssssiiiizzzzeeee(((())))
                   Returns the number of elements in aaaa.
              aaaa....sssseeeetttt____ssssiiiizzzzeeee((((iiii))))
                   Changes the length of aaaa to hold iiii elements.  The
                   elements up the minimum of the old and sizes are
                   maintained.  If the new size is greater than the
                   old size, then the values of the added elements are
                   undefined.  Note that the amount of memory
                   allocated to a VEC is the maximum size it has
                   attained since creation.  Thus, setting the size of
                   a VEC to iiii and then resetting it a smaller number
                   leaves the VEC with iiii elements allocated.


        OOOOrrrriiiiggggiiiinnnn::::
              iiii ==== aaaa....oooorrrriiiigggg(((())))
                   Returns the origin of the VEC, aaaa.
              aaaa....sssseeeettttoooorrrriiiigggg((((iiii))))
                   Sets the origin of the VEC, aaaa to iiii.  Neither the
                   size nor contents of aaaa is changed.


        AAAAssssssssiiiiggggnnnn::::
              aaaa ==== bbbb
                   The elements of bbbb are copied into aaaa which is
                   resized to that same size as bbbb.
              aaaa ==== xxxx
                   All the elements of aaaa are set to xxxx.


        AAAAssssssssiiiiggggnnnnmmmmeeeennnntttt ooooppppeeeerrrraaaattttoooorrrrssss::::
              aaaa ++++==== bbbb
              aaaa ----==== bbbb
              aaaa ****==== bbbb
              aaaa ////==== bbbb
                   The number of elements in aaaa must be the same as the
                   number in bbbb.  Each element of aaaa is replaced with
                   its value added, subtracted, multiplied or divided
                   by the corresponding element of bbbb.
              aaaa ++++==== xxxx
              aaaa ----==== xxxx
              aaaa ****==== xxxx
              aaaa ////==== xxxx
                   Each element of aaaa is replaced with its value added,
                   subtracted, multiplied or divided by xxxx.



     Page 6                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              aaaa &&&&==== bbbb
              aaaa ||||==== bbbb
              aaaa ^^^^==== bbbb
                   The number of elements in aaaa must be the same as the
                   number in bbbb.  Each element of aaaa is replaced with
                   the bitwise AND, OR, or Exclusive OR of its value
                   and the corresponding element of bbbb.  Available for
                   ucvec, cvec, svec, and ivec vectors only.
              aaaa &&&&==== xxxx
              aaaa ||||==== xxxx
              aaaa ^^^^==== xxxx
                   Each element of aaaa is replaced with the bitwise AND,
                   OR, or Exclusive OR of its value and xxxx.  Available
                   for ucvec, cvec, svec, and ivec vectors only.


        UUUUnnnnaaaarrrryyyy ooooppppeeeerrrraaaattttiiiioooonnnnssss::::
              ----aaaa
                   Creates a new VEC with each element the negation of
                   the corresponding element in aaaa.  Available for all
                   types except unsigned chars (ucvec).
              ~~~~aaaa
                   Creates a new VEC containing the bitwise negation
                   of each element in aaaa.  Available for ucvec, cvec,
                   svec, and ivec only.
              aaaabbbbssss((((aaaa))))
                   Creates a new VEC with each element the absolute
                   value of the corresponding element in aaaa. Available
                   for all types except unsigned chars (ucvec).  See
                   below for the meaning of this function when the
                   argument is complex (fcxvec or dcxvec).


        BBBBiiiinnnnaaaarrrryyyy ooooppppeeeerrrraaaattttoooorrrrssss::::
              aaaa ++++ bbbb
              aaaa ---- bbbb
              aaaa **** bbbb
              aaaa //// bbbb
                   The number of elements in aaaa must be the same as the
                   number in bbbb.  The result is a new VEC, each element
                   of which is the corresponding element of aaaa added,
                   subtracted, multiplied or divided by the
                   corresponding element of bbbb.
              aaaa ++++ xxxx
              aaaa ---- xxxx
              aaaa **** xxxx
              aaaa //// xxxx
                   The result is a new VEC, each element of which is
                   the corresponding element of aaaa added, subtracted,
                   multiplied or divided by xxxx.
              xxxx ++++ aaaa
              xxxx ---- aaaa



     Page 7                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              xxxx **** aaaa
              xxxx //// aaaa
                   The result is a new VEC, each element of which is xxxx
                   added, subtracted, multiplied or divided by the
                   corresponding element of aaaa.
              aaaa &&&& bbbb
              aaaa |||| bbbb
              aaaa ^^^^ bbbb
                   The number of elements in aaaa must be the same as the
                   number in bbbb.  The result is a new VEC, each element
                   of which is the bitwise OR, AND, or Exclusive OR of
                   the corresponding elements of aaaa and bbbb. Available
                   for ucvec, cvec, svec, and ivec vectors only.
              xxxx &&&& aaaa
              xxxx |||| aaaa
              xxxx ^^^^ aaaa
              aaaa &&&& xxxx
              aaaa |||| xxxx
              aaaa ^^^^ xxxx
                   The result is a new VEC, each element of which is
                   the bitwise OR, AND, or Exclusive OR of xxxx and the
                   corresponding element of aaaa.  Available for ucvec,
                   cvec, svec, and ivec vectors only.
              eeeeqqqqvvvv((((aaaa,,,,bbbb))))
                   The number of elements in aaaa must be the same as the
                   number in bbbb.  The result is a new VEC, each element
                   of which is the bitwise equivalence of the
                   corresponding elements of aaaa and bbbb.  Available for
                   ucvec, cvec, svec, and ivec vectors only.
              eeeeqqqqvvvv((((xxxx,,,,aaaa))))
              eeeeqqqqvvvv((((aaaa,,,,xxxx))))
                   The result is a new VEC, each element of which is
                   the bitwise equivalence of xxxx and the corresponding
                   element of aaaa.  Available for ucvec, cvec, svec, and
                   ivec vectors only.
              mmmmiiiinnnn((((aaaa,,,,bbbb))))
              mmmmaaaaxxxx((((aaaa,,,,bbbb))))
                   The number of elements in aaaa must be the same as the
                   number in bbbb.  The result is a new VEC, each element
                   of which is the min or max of the corresponding
                   elements of aaaa and bbbb. Not available for ucvec, or
                   the complex vectors.
              mmmmiiiinnnn((((aaaa,,,,xxxx))))
              mmmmaaaaxxxx((((aaaa,,,,xxxx))))
              mmmmiiiinnnn((((xxxx,,,,aaaa))))
              mmmmaaaaxxxx((((xxxx,,,,aaaa))))
                   The result is a new VEC, each element of which is
                   the min or max of xxxx and the corresponding element
                   of aaaa.  Not available for ucvec, or the complex
                   vectors.





     Page 8                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



        EEEElllleeeemmmmeeeennnntttt aaaacccccccceeeessssssss::::
              xxxx ==== aaaa[[[[iiii]]]]
                   Returns element iiii of aaaa.   The range of iiii is
                   aaaa....oooorrrriiiigggg(((()))) to aaaa....oooorrrriiiigggg(((())))++++aaaa....ssssiiiizzzzeeee(((())))----1111.
              aaaa[[[[iiii]]]] ==== xxxx
                   Replaces element iiii of aaaa with xxxx.
              xxxx ==== aaaa....eeeelllleeeemmmm((((iiii))))
                   Returns the iiiith element of aaaa.   The range of iiii is 0
                   to aaaa....ssssiiiizzzzeeee(((())))----1111.  No range checking is performed.
              aaaa....eeeelllleeeemmmm((((iiii)))) ==== xxxx
                   Replaces the iiiith element of aaaa with xxxx.


        SSSSuuuubbbbvvvveeeeccccttttoooorrrr sssseeeelllleeeeccccttttiiiioooonnnn aaaannnndddd rrrreeeeppppllllaaaacccceeeemmmmeeeennnntttt::::
              aaaa ==== bbbb((((iiii,,,,jjjj))))
              aaaa ==== bbbb((((iiii))))
                   In the first case, returns a subvector consisting
                   of the elements iiii through jjjj of bbbb.  If jjjj is omitted,
                   the last element of bbbb is used.
              aaaa((((iiii,,,,jjjj)))) ==== bbbb
              aaaa((((iiii)))) ==== bbbb
                   Replaces elements iiii through jjjj of aaaa with bbbb. The size
                   of bbbb must be jjjj----iiii++++1111.  If jjjj is omitted it defaults to
                   the last element of aaaa


        EEEEqqqquuuuiiiivvvvaaaalllleeeennnncccceeee::::
              iiii====eeeeqqqquuuuaaaallll((((aaaa,,,,bbbb))))
                   Returns 1 if and only if aaaa and bbbb are VECs of the
                   same size with identical contents.  Otherwise 0 is
                   returned.


        RRRReeeedddduuuuccccttttiiiioooonnnn::::
              xxxx====mmmmaaaaxxxx((((aaaa))))
              xxxx====mmmmiiiinnnn((((aaaa))))
              xxxx====pppprrrroooodddd((((aaaa))))
              xxxx====ssssuuuummmm((((aaaa))))
                   The functions return a single scalar value which is
                   max, min, product, or sum of the elements of aaaa.
                   Max and min are not available for ucvec, or the
                   complex vectors.
              xxxx====ddddooootttt((((aaaa,,,,bbbb))))
                   The VECs aaaa and bbbb must have the same size.  The
                   result of forming the dot product of the VECs is
                   stored in xxxx.


        CCCCoooommmmppppaaaarrrriiiissssoooonnnn::::
              aaaa ======== bbbb
              aaaa !!!!==== bbbb
              aaaa <<<< bbbb



     Page 9                                          (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



              aaaa >>>> bbbb
              aaaa <<<<==== bbbb
              aaaa >>>>==== bbbb
                   The sizes of aaaa and bbbb must be equal.  Creates a new
                   ivec of the same size as aaaa and bbbb which contains the
                   result of applying the given comparison on each
                   element of aaaa and bbbb. The inequality operators are
                   not available for the complex vector types, ffffccccxxxxvvvveeeecccc
                   and  ddddccccxxxxvvvveeeecccc.
              aaaa ======== xxxx
              aaaa !!!!==== xxxx
              aaaa <<<< xxxx
              aaaa >>>> xxxx
              aaaa <<<<==== xxxx
              aaaa >>>>==== xxxx
              xxxx ======== aaaa
              xxxx !!!!==== aaaa
              xxxx <<<< aaaa
              xxxx >>>> aaaa
              xxxx <<<<==== aaaa
              xxxx >>>>==== aaaa
                   Creates a new ivec of the same size as aaaa  which
                   contains the result of applying the given
                   comparison between each element of aaaa and xxxx.  The
                   inequality operators are not available for the
                   complex vector types, ffffccccxxxxvvvveeeecccc and  ddddccccxxxxvvvveeeecccc.


        CCCCoooommmmpppplllleeeexxxx ooooppppeeeerrrraaaattttiiiioooonnnnssss::::
              aaaa ==== rrrreeeeaaaallll((((bbbb))))
              aaaa ==== iiiimmmmaaaagggg((((bbbb))))
              aaaa ==== aaaabbbbssss((((bbbb))))
              aaaa ==== nnnnoooorrrrmmmm((((bbbb))))
              aaaa ==== aaaarrrrgggg((((bbbb))))
                   These operations are valid only for the fcxvec and
                   dcxvec types.  They return an fvec or dvec, aaaa,
                   depending on whether bbbb is a fcxvec or dcxvec
                   respectively.  The result, bbbb, will contain either
                   the real part, imaginary part, magnitude, norm, or
                   angle of aaaa.
              aaaa ==== ccccoooonnnnjjjj((((bbbb))))
                   This operation is valid only for the fcxvec and
                   dcxvec types.  It returns the same type as its
                   argument, but each element of aaaa contains the
                   complex conjugate of bbbb.


        SSSSttttrrrreeeeaaaammmm IIIInnnnppppuuuutttt////OOOOuuuuttttppppuuuutttt::::
              iiiioooossss <<<<<<<< aaaa
                   Sends a copy of aaaa surrounded by square brackets to
                   iiiioooossss and returns iiiioooossss.
              iiiioooossss >>>>>>>> aaaa



     Page 10                                         (printed 11/9/90)






     VVVVEEEECCCC((((3333CCCC++++++++))))                     CCCCCCCClllliiiibbbb                     VVVVEEEECCCC((((3333CCCC++++++++))))



                   Reads a '[' , a set of aaaa....ssssiiiizzzzeeee(((()))) (white-space
                   separated) TYPE numbers from iiiioooossss, and a ']',
                   assigns the numbers  to aaaa and returns iiiioooossss.

     FFFFIIIILLLLEEEESSSS
          VEC.h, ivec.h, scomplex.h, complex.h, libVec.a

     NNNNOOOOTTTTEEEESSSS
          SubVEC is a class intended for internal use.  It is
          converted to a VEC automatically.  However, if the user has
          defined a conversion from a VEC to a user-defined type, this
          conversion will not work on expressions such as aaaa((((1111,,,,3333)))) since
          the compiler will not do the two-step conversion from SubVEC
          to VEC to user-defined type.

     DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
          A default error function is called whenever a position or
          overflow error occurs.  This function prints out a message
          and aborts.  The user can substitute his own error function,
          ffff, for the default.
              aaaa....sssseeeetttthhhhaaaannnnddddlllleeeerrrr((((ffff))))
                   Sets the default error function to ffff. The function
                   ffff should take an int and char* as arguments and
                   return an int.  The first argument is the type of
                   error and the second is a short error message.

     AAAAUUUUTTTTHHHHOOOORRRR
          Brent Townshend  MH 2D554  (201)582-4111  alice!bst



























     Page 11                                         (printed 11/9/90)



