SCCSID = "@(#)READ_ME	1.2	2/3/89"
************************************************************************
This software package is the property of AT&T and is not in the public
domain.  Protect it as required by corporate policy.
************************************************************************

Title:    PANELFEATURES - Objects for Building Interactive Control
	  Panels in C++

Provider:   Jim Iorio  Dept. 59232  HR 2E-211  speedy!jdi

Associated Documentation:  59232-880624-01TM (title and author, as above...)

************************************************************************
Abstract:

	PANELFEATURES is a library of C++ classes describing generic knob
  and display atoms and associated operations which can be combined to
  construct stimulus driven state machine models in software for any
  application which gains benefit from an interactive graphical interface
  presented in the form of a control panel.

	The package provides a set of tools which hide from the programmer
  the low level user interface details such as graphics representations,
  range checking, default values, panel layout, and window management
  for arbitrary applications.  In addition to the interface facilities, the
  package provides a methodology for decomposing the application into a 
  hierarchical tree structure and for creating re-usable modules which
  can be recombined to form new applications.  The above memo describes
  the details for each of the defined object classes and provides manual
  pages along with a description of a sample application (the demo program
  which is supplied in this directory).

	The software is mostly written in C++ with the exception of the
  graphics drivers which are downloaded to the AT&T 630 MTG terminal.  For
  those who don't have a 630 MTG terminal, a curses interface package is 
  provided.  Tools needed to build this software are the C++ compiler
  and optionally, the 630 MTG software development tools.

************************************************************************
************************************************************************

 
This directory contains the source for the entire PANELFEATURE package.  
The following steps will build the libraries and the demonstration program
described in the memo.



1. SET and EXPORT variable "PFPATH" to this directory which will contain
   all source and executables.  This is required of all users of the package.
   [It is accesses and used in file "screen.c" to spawn graphics interface
    processes and to find 'named pipes' which are located here]

   Also SET and EXPORT variable "DEST" to the name of a printer on your system.
   [The hardcopy routine in file "setup.c" issues a system command to the
    effect of "cat file | lp =d$DEST".  This is only executed by the 630 MTG
    version]

2. The Makefile has been set up so that the command:

        make all

   will compile and load the following modules:

	pf.a 	- The library of PANELFEATURES objects for host applications
	pfcmain - The curses terminal driver (crude but useable)
	gialmms - The 630 MTG graphics driver which downloads and executes
                  on the 630 terminal
	selfdoc - A utility called from the interactive interface packages
		  to provide automatic documentation of the current "machine".
	demo    - a demo application to do waveform addition using the
		  wavecalc module.  This example demonstrates many of the
 		  features of the package.

   If the 630 MTG tools are not available (I suggest you make an effort to
   get them) the rest of the package can be loaded with the command:

	make allx630


   In either case,  remove all of the *.o files when the load completes
   to reclaim a lot of space.  The load takes about 10-15 minutes to complete
   on a VAX. It seems like hours on a 3B2-600.  The makefile supports the
   following commands:

	make clean       -  removes all *.o files generated by the make file
	make clobber     -  removes all *.o files and executables
	
3.  Two special files of type "named pipe" must be created in the directory
   pointed to by PFPATH.  The administrator for this package should type
   the following commands at the shell prompt to create these files:

	/etc/mknod P_from_gi p
	chmod +w P_from_gi

	/etc/mknod P_to_gi p
	chmod +w P_to_gi


4. Execute demo redirecting stderr away from the terminal (e.g. demo 2>demoout) 

   The shell variable TERM is used to determine the user interface
   [630 or curses] to be used.  


************************************************************************
************************************************************************
************************************************************************

Changes since the release of the Panelfeatures document:


1.	The environment variable PFPATH must be set to this directory
	and exported so that the code can find things.  If not, a warning
	will be issued and the application will terminate.


2.	The CURSES based interface is implemented for non 630 MTG terminals.
	The environment variable TERM is polled and if not 630 or ATT630
	will result in the use of CURSES interface.  In that interface
	facility, type '?' for help at any screen.  If you don't like the
	default command keys, copy the file samp_pfckeys to ~HOME/.pfckeys
        and edit the file to specify your preferences.

	If you have a 630 but want to see the curses interface, you can set
	the environment variable PFTERM to 'adm3a' AND export it.
	Setting PFTERM to DBUG will disable both interfaces and provide
	raw dialog messages for inquiring developers.  Don't forget to unset
	this variable...

	The BUGS section of the manual page for BEGIN_PF() no longer applies...


3.	The self documenting capability provided by the "D" key will
	now generate a file suitable for PIC and TROFF postprocessing
	for each PANEL and SUB-PANEL in the currently active machine.
	The file will be named after the top CLUSTER of the panel
	followed by ".`user_id`".  For large panels, the graphical
	tree representation may exceed the page boundary and you are
	on your own to edit the file.  Try changing the scale factor
	and globally reducing the point size of the text...
	Machines which contain more than one instance of the same SUB-PANEL
	will result in a CORE DUMP of the selfdoc process after the first
	file is processes.  This is not good, but not yet debugged.  Your
 	application will continue to run...


4.	char * PANEL::pfsnap() produces a snapshot of the current state
	of the machine by generating an ascii string containing
	all of the ungreyed knob settings.  This string is in the
	form that is suitable for passing back to the PANEL::setup()
	function for later restoral of the current control settings.


5.	The bugs dealing with sequencing problems mentioned in the
	manual pages for changeaxis() and changefmt() have been
	resolved.  The manual page warnings no longer apply.


6.	The manual page for ASCIIknob should have the following changes:

	- The 3rd constructor should read the same as the 2nd except
	  for the integer types for default, min, and max values.

