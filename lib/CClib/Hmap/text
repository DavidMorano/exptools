C++ is a general purpose programming language designed to make programming more
enjoyable for the serious programmer.  Except for minor details, C++ is a
superset of the C programming language.  In addition to the facilities provided
by C, C++ provides flexible and efficient facilities for defining new types
that closely match the concepts of the application.  This technique for program
construction is often called data abstraction.  Objects of some user-defined
types contain type information.  Such objects can be used conveniently and
safely in contexts in which their type cannot be determined at compile time.
Programs using objects of such types are often called object based.  When well
used, these techniques result in shorter, easier to understand, and easier to
maintain programs.

The key concept in C++ is class.  A class is a user-defined type.  Classes
provide data hiding, guaranteed initialization of data, implicit type
conversion for user defined types, dynamic typing, user-controlled memory
management, and mechanisms for overloading operators.  C++ provides much better
facilities for type checking and for expressing modularity than C does.  It
also contains improvements that are not directly related to classes, including
symbolic constants, inline substitution of functions, default function
arguments, overloaded function names, free store management operators, and a
reference type.  C++ retains C's ability to deal efficiently with the
fundamental objects of the hardware (bits, bytes, words, addresses, etc.).
This allows the user-defined types to be implemented with a pleasing degree of
efficiency.

C++ and its standard libraries are designed for portability.  The current
implementation will run on most systems that support C.  C libraries can be
used from a C++ program, and most tools that support programming in C can be
used with C++.

This book is primarily intended to help serious programmers learn the language
and use it for nontrivial projects.  It provides a complete description of C++,
many complete examples, and many more program fragments.
