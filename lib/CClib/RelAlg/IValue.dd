#ident "@(#) /sable/sdb/ra/rel/IValue/s.IValue.dd"
/* Copyright (c) 1991 AT&T - All Rights Reserved */

class IntensionValue
   {
include(IValue.pd)
public:
   IntensionValue(Intension &i);
   IntensionValue(Attribute &a);
   ~IntensionValue();
   operator Tuple *();                         /* type cast operators */
   operator const char *();
   operator const void *();
   Boolean_t operator=(void *v);               /* assignment operators */
   Boolean_t operator=(Tuple *t);
   AttributeValue &operator[](Attribute &a);   /* project oeperator */
   };

class AttributeValue
   {
include(AValue.pd)
public:
   operator Int_t();                        /* type cast operators */
   operator Float_t();
   operator const char *();
   Boolean_t operator=(AttributeValue &);   /* assignment operators */
   Boolean_t operator=(Int_t);
   Boolean_t operator=(Float_t);
   Boolean_t operator=(const char *);
   Boolean_t operator==(AttributeValue &);      /* comparison operators */
   Boolean_t operator!=(AttributeValue &);
   Boolean_t operator<=(AttributeValue &);
   Boolean_t operator<(AttributeValue &);
   Boolean_t operator>=(AttributeValue &);
   Boolean_t operator>(AttributeValue &);
   Boolean_t operator==(Int_t);
   Boolean_t operator!=(Int_t);
   Boolean_t operator<=(Int_t);
   Boolean_t operator<(Int_t);
   Boolean_t operator>=(Int_t);
   Boolean_t operator>(Int_t);
   Boolean_t operator==(Float_t);
   Boolean_t operator!=(Float_t);
   Boolean_t operator<=(Float_t);
   Boolean_t operator<(Float_t);
   Boolean_t operator>=(Float_t);
   Boolean_t operator>(Float_t);
   Boolean_t operator==(const char *);
   Boolean_t operator!=(const char *);
   Boolean_t operator<=(const char *);
   Boolean_t operator<(const char *);
   Boolean_t operator>=(const char *);
   Boolean_t operator>(const char *);
   };
