#ident "@(#) /sable/sdb/ra/rel/attribute/s.attribut.dd"
/*      Copyright (c) 1989,1991 AT&T - All Rights Reserved */

typedef Dname Aname;

class Attribute
   {
include(attribut.pd)
public:
   Attribute(const char *const n,const Domain &d);

   Predicate & operator==(const Int_t i) const;
   Predicate & operator!=(const Int_t i) const;
   Predicate & operator<=(const Int_t i) const;
   Predicate & operator>=(const Int_t i) const;
   Predicate & operator<(const Int_t i) const;
   Predicate & operator>(const Int_t i) const;
   Predicate & operator==(const Float_t f) const;
   Predicate & operator!=(const Float_t f) const;
   Predicate & operator<=(const Float_t f) const;
   Predicate & operator>=(const Float_t f) const;
   Predicate & operator<(const Float_t f) const;
   Predicate & operator>(const Float_t f) const;
   Predicate & operator==(const char *const s) const;
   Predicate & operator!=(const char *const s) const;
   Predicate & operator<=(const char *const s) const;
   Predicate & operator>=(const char *const s) const;
   Predicate & operator<(const char *const s) const;
   Predicate & operator>(const char *const s) const;
   Predicate & operator==(const Attribute &a) const;
   Predicate & operator!=(const Attribute &a) const;
   Predicate & operator<=(const Attribute &a) const;
   Predicate & operator>=(const Attribute &a) const;
   Predicate & operator<(const Attribute &a) const;
   Predicate & operator>(const Attribute &a) const;
   Predicate & operator==(const Pattern &p) const;
   Predicate & operator!=(const Pattern &p) const;
   };

#define attribute(NAME,DOMAIN) Attribute NAME("NAME",DOMAIN)
