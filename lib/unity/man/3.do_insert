


     ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))                NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))



     NNNNAAAAMMMMEEEE
          do_insert - Insert tuples in a UNITY relation.

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee """"uuuuqqqquuuueeeerrrryyyy....hhhh""""

          ssssttttrrrruuuucccctttt uuuuiiiinnnnsssseeeerrrrttttiiiinnnnffffoooo ****
          iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt(((( rrrreeeellllppppttttrrrr,,,, aaaattttttttrrrrlllliiiisssstttt ))))
          ssssttttrrrruuuucccctttt uuuurrrreeeellllaaaattttiiiioooonnnn ****rrrreeeellllppppttttrrrr;;;;
          cccchhhhaaaarrrr ****aaaattttttttrrrrlllliiiisssstttt;;;;

          iiiinnnntttt
          aaaaddddddddaaaattttttttrrrr(((( iiiinnnnssssppppttttrrrr,,,, aaaattttttttrrrrnnnnaaaammmmeeee ))))
          ssssttttrrrruuuucccctttt uuuuiiiinnnnsssseeeerrrrttttiiiinnnnffffoooo ****iiiinnnnssssppppttttrrrr;;;;
          cccchhhhaaaarrrr ****aaaattttttttrrrrnnnnaaaammmmeeee;;;;

          iiiinnnntttt
          ddddoooo____iiiinnnnsssseeeerrrrtttt(((( iiiinnnnssssppppttttrrrr,,,, aaaattttttttrrrrvvvvaaaallllssss ))))
          ssssttttrrrruuuucccctttt uuuuiiiinnnnsssseeeerrrrttttiiiinnnnffffoooo ****iiiinnnnssssppppttttrrrr;;;;
          cccchhhhaaaarrrr ********aaaattttttttrrrrvvvvaaaallllssss;;;;

          iiiinnnntttt
          vvvvddddoooo____iiiinnnnsssseeeerrrrtttt(((( iiiinnnnssssppppttttrrrr,,,, aaaattttttttrrrrvvvvaaaallll1111,,,, aaaattttttttrrrrvvvvaaaallll2222,,,, ............ aaaattttttttrrrrvvvvaaaallllNNNN ))))
          ssssttttrrrruuuucccctttt uuuuiiiinnnnsssseeeerrrrttttiiiinnnnffffoooo ****iiiinnnnssssppppttttrrrr;;;;
          cccchhhhaaaarrrr ****aaaattttttttrrrrvvvvaaaallll1111;;;;
          cccchhhhaaaarrrr ****aaaattttttttrrrrvvvvaaaallll2222;;;;
          cccchhhhaaaarrrr ****aaaattttttttrrrrvvvvaaaallllNNNN;;;;

          iiiinnnntttt
          eeeennnndddd____iiiinnnnsssseeeerrrrtttt(((( iiiinnnnssssppppttttrrrr,,,, ccccoooommmmmmmmiiiitttt ))))
          ssssttttrrrruuuucccctttt uuuuiiiinnnnsssseeeerrrrttttiiiinnnnffffoooo ****iiiinnnnssssppppttttrrrr;;;;
          iiiinnnntttt ccccoooommmmmmmmiiiitttt;;;;

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          This set of routines is used to add tuples to a given UNITY
          relation.

          iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt() is used to initialize an insertion operation
          for the given relation with the given attributes.  It
          returns a pointer to the insertion information that must be
          used in the calls to all other insertion routines.

          aaaaddddddddaaaattttttttrrrr() can be used to add one attribute to the list of
          attributes inserted into a relation.

          ddddoooo____iiiinnnnsssseeeerrrrtttt() actually places a tuple into the relation.  This
          routine may be called as often as needed to insert tuples.
          Any attributes not specified previously with iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt()
          or aaaaddddddddaaaattttttttrrrr() will recieve an empty value.

          vvvvddddoooo____iiiinnnnsssseeeerrrrtttt() is an alternate interface to ddddoooo____iiiinnnnsssseeeerrrrtttt().  It
          allows the user to specify the attribute values as function



     Page 1                                          (printed 4/24/92)






     ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))                NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))



          parameters, rather than in an array of character pointers.
          There must be as many attributes given as parameters as were
          specified to iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt() and aaaaddddddddaaaattttttttrrrr().

          After all tuples are inserted, eeeennnndddd____iiiinnnnsssseeeerrrrtttt() is used to
          either commit or abort the insertion.  If this routine is
          called with _i_n_s_p_t_r equal to NULL, then all pending inser-
          tions are either aborted or committed according to the
          _c_o_m_m_i_t flag.  This can be used in signal handlers to clean
          up on terminating signals.

          See the EEEEXXXXTTTTEEEENNNNDDDDEEEEDDDD DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN section of the ccccmmmmppppqqqquuuueeeerrrryyyy(1)
          manual page for information on compiling and linking com-
          mands which use the new UNITY.

     PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRRSSSS
          _r_e_l_p_t_r
               A pointer to the relation information for the insertion
               relation.  The relation must exist and be readable.
               The directory where the relation exists must be write-
               able by the effective user-id or group-id of the pro-
               cess.

          _a_t_t_r_l_i_s_t
               A string containing white space separated attribute
               names that will be inserted in the relation.  This list
               can be NULL, but in this case aaaaddddddddaaaattttttttrrrr() must be called
               later to specify at least one attribute to insert.
               Each attribute name must be unique within _a_t_t_r_l_i_s_t . If
               an attribute is specified multiple times, iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt()
               will fail.  The order of the attributes in _a_t_t_r_l_i_s_t
               together with any additional calls to aaaaddddddddaaaattttttttrrrr() is the
               order the attribute values must be specified in
               _a_t_t_r_v_a_l_s when ddddoooo____iiiinnnnsssseeeerrrrtttt() or vvvvddddoooo____iiiinnnnsssseeeerrrrtttt() is called.

          _i_n_s_p_t_r
               The pointer to an insertion structure previously
               obtained from iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt().

               If a NULL value is passed for this parameter to
               _e_n_d__i_n_s_e_r_t (), all pending insertions will either be
               committed or aborted according to the _c_o_m_m_i_t flag.

          _a_t_t_r_n_a_m_e
               The name of one attribute to be inserted in the rela-
               tion.  The attribute must not have been previously
               specified for insertion, either through aaaaddddddddaaaattttttttrrrr() or in
               the _a_t_t_r_l_i_s_t parameter passed to iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt().

          _a_t_t_r_v_a_l_s
               One tuple's attribute values to insert in the relation.
               Each entry in the array corresponds to one attribute



     Page 2                                          (printed 4/24/92)






     ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))                NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))



               value.  There must be as many attribute values given,
               and in the same order, as specified in _a_t_t_r_l_i_s_t and
               calls to aaaaddddddddaaaattttttttrrrr().

          _a_t_t_r_v_a_l_1, _a_t_t_r_v_a_l_2, ... _a_t_t_r_v_a_l_N
               One tuple's attribute values to insert in the relation.
               Each function argument corresponds to one attribute
               value.  There must be as many attribute values given,
               and in the same order, as specified in _a_t_t_r_l_i_s_t and
               calls to aaaaddddddddaaaattttttttrrrr().

          _c_o_m_m_i_t
               A boolean flag indicating whether to commit the previ-
               ous insertions (non-zero) or abort the changes (zero).

     EEEEXXXXIIIITTTT CCCCOOOODDDDEEEESSSS
          iiiinnnniiiitttt____iiiinnnnsssseeeerrrrtttt() returns a pointer to an insertion structure on
          success or NULL on failure.

          All other functions return true (non-zero) on success and
          false (zero) on failure.

          If any of these routines fail, the external variable uuuueeeerrrrrrrroooorrrr
          contains the error code.

     RRRREEEESSSSTTTTRRRRIIIICCCCTTTTIIIIOOOONNNNSSSS
          The number of current insertions is limited  by the number
          of open files allowed, usually twenty.

          At most MAXATT attributes can be inserted in any relation at
          one time.  This is currently defined in _u_r_e_l_a_t_i_o_n._h as 200
          for mainframes and 100 for other machines.

          It is imperative that the application provide a signal
          handler to call eeeennnndddd____iiiinnnnsssseeeerrrrtttt() on terminating signals.  Other-
          wise, relations will not be unlocked.

     EEEEXXXXAAAAMMMMPPPPLLLLEEEE
          Add some attributes to a password file.  The login attribute
          will always be the first attribute inserted; any additional
          attributes will be given in a list.  Be sure and handle sig-
          nals.

               #include "uquery.h"
               #include <signal.h>

               catch_sig( sig )
               int sig;
               {
                    signal( sig, SIG_IGN );       /* ignore any subsequent signals */

                    end_insert( NULL, FALSE );    /* abort all pending insertions */



     Page 3                                          (printed 4/24/92)






     ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))                NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))



                    /* print message about aborted insertions */
                    exit( 2 );
               }
                . . .

               char **attrlist;
               int attrcnt, i;
               char **attrvals;
               struct urelation *relptr;
               struct uninsertinfo *insptr;

               signal( SIGINT, catch_sig );
               signal( SIGTERM, catch_sig );
               signal( SIGQUIT, catch_sig );
               signal( SIGHUP, catch_sig );

               /*
                * Get the relation information.
                */
               relptr = getrelinfo( "passwd", NULL, FALSE );
               if ( relptr == NULL ) {
                    pruerror();
                    /* print message and return failure */
               }
               /*
                * Initialize the insertion and give the "login" attribute
                * as part of the insertion.
                */
               insptr = init_insert( relptr, "login" );
               if ( insptr == NULL ) {
                    pruerror();
                    /* print message and return failure */
               }
               /*
                * For any other attributes given, also use them in the insertion.
                * We assume here that attrcnt is the total number of attributes,
                * including "login" that are inserted.
                */
               for( i = 1; i < attrcnt; i++ ) {
                    if ( ! addattr( insptr, attrlist[i - 1] ) ) {
                         pruerror( );
                         /* print message */
                         end_insert( insptr, FALSE );
                         /* return failure */
                    }
               }
               while( /* more tuples to insert . . . */ ) {
                    if ( ! do_insert( insptr, attrvals ) ) {  /* insert each tuple */
                         pruerror( );
                         /* print message */
                         end_insert( insptr, FALSE );
                         /* return failure */



     Page 4                                          (printed 4/24/92)






     ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))                NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                ddddoooo____iiiinnnnsssseeeerrrrtttt((((3333))))



                    }
               }
               if ( ! end_insert( insptr, TRUE ) ) {   /* commit the changes */
                    pruerror( );
                    /* print message and return failure */
               }

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          cmpquery.mp, ninsert(1), getrelinfo(3) and peruse(3).














































     Page 5                                          (printed 4/24/92)



