


     ccccoooommmmppppuuuutttteeee((((UUUUNNNNIIIITTTTYYYY))))         UUUUNNNNIIIITTTTYYYY UUUUsssseeeerrrr''''ssss MMMMaaaannnnuuuuaaaallll         ccccoooommmmppppuuuutttteeee((((UUUUNNNNIIIITTTTYYYY))))



     NNNNAAAAMMMMEEEE
          compute - compute arithmetic expressions on UNITY tables

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          _c_o_m_p_u_t_e [-q] [-Itable] [-Otable] [-f%format] aname [op aname ...] \
           _r_e_s_u_l_t aname3 _i_n table1 [_i_n_t_o table2] [where clause]

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          The _c_o_m_p_u_t_e command changes the value of the resultant
          attribute (aname3 in the SYNOPSIS) to the value computed by
          the expression specified before _r_e_s_u_l_t for those records
          that satisfy the _w_h_e_r_e condition in the specified table.
          The expressions accepted may contain attribute names from
          the specified table, numeric constants without signs, unary
          + and - (these must appear as separate arguments to the
          command), +, -, *, /, %, parentheses (to over-ride normal
          precedence rules), and abs(attribute) (returns the absolute
          value of the attribute value).  The precedence from highest
          to lowest is

          1.   abs(attribute),

          2.   unary + and - with right associativity,

          3.   (),

          4.   *, /, and % with left associativity (evaluated from
               left to right),

          5.   + and - with left associativity.

          Thus, with attributes a1, a2, a3, and a4,

          a1 + a2 \* a3 + - a4   evaluates as ( (a1 + (a2 * a3) ) + (-a4) )
          and

          \( abs\(a1\) + - a2 \) \* a3 evaluates as ( ((abs(a1))+(-a2)) * a3)

          The precedence is formally defined as

          <expression>     ::=  abs(<unity field>) | <expr1>
          <expr1>          ::=  <expr2> | - <expr2> | + <expr2>
          <expr2>          ::=  <expr3> | ( <expr3> )
          <expr3>          ::=  <expr4> | <expr4> [/*%] <expr4>
          <expr4>          ::=  <identifier> | <identifier> [+-] <identifier>
          <identifier>     ::=  <unity field> | <constant>
          <unity field>    ::=  any field in the description file
          <constant>       ::=  numeric floating-point constant (without sign)

          A value is computed for each record that matches the
          selection criteria.  The resultant field must be a
          terminator field.



     Page 1                                          (printed 1/19/90)






     ccccoooommmmppppuuuutttteeee((((UUUUNNNNIIIITTTTYYYY))))         UUUUNNNNIIIITTTTYYYY UUUUsssseeeerrrr''''ssss MMMMaaaannnnuuuuaaaallll         ccccoooommmmppppuuuutttteeee((((UUUUNNNNIIIITTTTYYYY))))



          If the -I option is used, the table name specified is used
          to determine an alternate description file to be used in
          reading the input table.

          This command is considered an update command if a table name
          is given (not "-") and the "into clause" is not specified.
          In this case, a temporary file is updated (i.e., the records
          satisfying the _w_h_e_r_e clause are altered), the original file
          is removed, and the temporary file is linked to the original
          table, thus updating the table.  Only one user may update
          the table at a time but any number of users may read the
          table.  The user must have write permission in the directory
          containing the table, but needs only read permission on the
          table itself.  The group and user identification, and mode
          of the table are preserved.

          If an "into clause" is specified, the output is written into
          the named table and a corresponding descrition file is
          created in the current directory.  An error is printed if
          the output table already exists.  If _o_n_t_o is specified
          instead of _i_n_t_o, the output is appended to the table if it
          already exists or the table created and written if it does
          not exist.  The input table is not locked during the update.

          If the input table specified is "-", then input is taken
          from the standard input instead of a table (note that no
          lockfile is created).  The -I option must be used to specify
          the name of a table from which the description file name can
          be determined and used.

          If the output table name specified is "-", then the table
          output will be written to the standard output.  The -O
          option must be used to specify the name of a table from
          which the output description file name can be determined.
          The description file will be created in the current
          directory.  The output description file is needed only if
          the output of this command is being piped to the input of
          another UNITY command.  Otherwise, the "into clause" should
          not be used so that the output will be written to the
          standard output but a description file is not created.

          The "-f" option may be used to change the output format of
          the resultant field.  The default format is "%.3f" which
          means that the result will be printed as a floating point
          number with minimally three decimal places.  The user may
          change the output format to any valid floating point format
          by specifying the output format immediately following the -f
          option on the command line with the desired format.  For
          example, -f%.0f would print results as integer values (no
          decimal point) and -f%.3e would print values in scientific
          notation.  The valid formats are discussed in detail on the
          _p_r_i_n_t_f(3S) manual page.  The regular expression that shows



     Page 2                                          (printed 1/19/90)






     ccccoooommmmppppuuuutttteeee((((UUUUNNNNIIIITTTTYYYY))))         UUUUNNNNIIIITTTTYYYY UUUUsssseeeerrrr''''ssss MMMMaaaannnnuuuuaaaallll         ccccoooommmmppppuuuutttteeee((((UUUUNNNNIIIITTTTYYYY))))



          all acceptable formats is

             %[+ -]*[0-9]*\.\{0,1\}[0-9]*[eEfgG]


          If the "-q" option is specified, the program does not print
          out the number of records for which a computation is done.

     EEEEXXXXAAAAMMMMPPPPLLLLEEEE
          $ compute -f%0.2f qty \* price result total in INV
          compute: 6 records computed in INV.

          BEFORE:                         AFTER:

          |-------------------------|     |-------------------------|
          |snu|pnu| qty|price| total|     |snu|pnu| qty|price| total|
          |mbe|mbe|    |     |      |     |mbe|mbe|    |     |      |
          |r  |r  |    |     |      |     |r  |r  |    |     |      |
          |-------------------------|     |-------------------------|
          |s1 |p1 | 300|  .25|      |     |s1 |p1 | 300|  .25| 75.00|
          |s1 |p2 | 200|  .30|      |     |s1 |p2 | 200|  .30| 60.00|
          |s1 |p3 | 400|  .35|      |     |s1 |p3 | 400|  .35|140.00|
          |s2 |p1 | 100|  .23|      |     |s2 |p1 | 100|  .23| 23.00|
          |s2 |p2 | 200|  .32|      |     |s2 |p2 | 200|  .32| 64.00|
          |s3 |p1 | 300|  .24|      |     |s3 |p1 | 300|  .24| 72.00|
          |-------------------------|     |-------------------------|

     FFFFIIIILLLLEEEESSSS
          unity/compute.c, zcompute.c - the C source program
          bin/compute - the executable program
          /tmp/???????? - the lockfile
          <directory of table>/ctmp?????? - the temporary update file

     CCCCAAAAVVVVEEEEAAAATTTT
          The user must remember to escape those characters that are
          recognized by the shell, namely (, ), and *.  The unary +
          and - signs must appear as a separate argument to the
          _c_o_m_p_u_t_e command; otherwise, an error message is given.
          Thus, minus two is entered as - 2 instead of -2.  _c_o_m_p_u_t_e
          does all arithmetic in single precision float which may be
          slow on machines that do not have floating-point hardware.
          If the compute.c and uexpr.c programs are compiled with
          -DINTCOMP (i.e., INTCOMP defined to the pre-processor), then
          all arithmetic will be done with integers.  The output
          format must then be %d type instead of one of the floating
          output formats (i.e., e, E, f, g, G).









     Page 3                                          (printed 1/19/90)



