


     uuuueeeerrrrrrrroooorrrr((((3333))))                   NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                   uuuueeeerrrrrrrroooorrrr((((3333))))



     NNNNAAAAMMMMEEEE
          uerror, pruerror(), prtplerror() - UNITY error code variable
          and error message print routines.

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee """"uuuueeeerrrrrrrroooorrrr....hhhh""""

          eeeexxxxtttteeeerrrrnnnn iiiinnnntttt uuuueeeerrrrrrrroooorrrr;;;;

          iiiinnnntttt
          pppprrrruuuueeeerrrrrrrroooorrrr(((( ))));;;;

          iiiinnnntttt pppprrrrttttpppplllleeeerrrrrrrroooorrrr(((( rrrreeeellllppppttttrrrr,,,, ttttppppllllppppttttrrrr ))))
          ssssttttrrrruuuucccctttt uuuurrrreeeellllaaaattttiiiioooonnnn ****rrrreeeellllppppttttrrrr;;;;
          ssssttttrrrruuuucccctttt uuuuttttuuuupppplllleeee ****ttttppppllllppppttttrrrr;;;;

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          The uuuueeeerrrrrrrroooorrrr variable is set to contain the error number for
          errors that occur within UNITY routines.  When no error has
          occurred, it is set to zero.  The particular error numbers
          are defined in the header file _u_e_r_r_o_r._h; however, this
          header file is not needed unless the application needs to
          modify the value of uuuueeeerrrrrrrroooorrrr or check for a specific error
          number.

          The pppprrrruuuueeeerrrrrrrroooorrrr() routine is used to print a message explaining
          the error number stored in uuuueeeerrrrrrrroooorrrr....  If no error has
          occurred, pppprrrruuuueeeerrrrrrrroooorrrr() prints nothing.  Because there are no
          arguments associated with each error message, the messages
          are worded very generally.  It is best to print another
          message after calling pppprrrruuuueeeerrrrrrrroooorrrr() giving the context or
          circumstances in which the error occurred.  For example, if
          reading in the descriptor information for a relation fails,
          pppprrrruuuueeeerrrrrrrroooorrrr() will say why it failed, while the application
          message should say what relation had problems.

          pppprrrruuuueeeerrrrrrrroooorrrr() always returns the error number of the error that
          occured or zero if none has occured.

          The pppprrrrttttpppplllleeeerrrrrrrroooorrrr() routine is used to print errors associated
          with reading a given tuple, e.g. syntax errors.  If the
          tuple has no errors, no message will be printed.  All
          messages indicate the relation name, the tuple number, and
          any attribute where the error occured.  pppprrrrttttpppplllleeeerrrrrrrroooorrrr() returns
          TRUE (non-zero) if an error occured while reading the tuple
          or FALSE (zero) if one did not occur.

          See the EEEEXXXXTTTTEEEENNNNDDDDEEEEDDDD DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN section of the ccccmmmmppppqqqquuuueeeerrrryyyy(1)
          manual page for information on compiling and linking
          commands which use the new UNITY.

     PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRRSSSS



     PPPPaaaaggggeeee 1111                                          ((((pppprrrriiiinnnntttteeeedddd 4444////22222222////99991111))))






     uuuueeeerrrrrrrroooorrrr((((3333))))                   NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                   uuuueeeerrrrrrrroooorrrr((((3333))))



          _r_e_l_p_t_r
               A pointer to the relation information for the relation
               the tuple was read from.

          _t_p_l_p_t_r
               A pointer to the tuple in which the error may have
               occurred.

     RRRREEEESSSSTTTTRRRRIIIICCCCTTTTIIIIOOOONNNNSSSS
          pppprrrruuuueeeerrrrrrrroooorrrr() and pppprrrrttttpppplllleeeerrrrrrrroooorrrr() use the pppprrrrmmmmssssgggg(3) routine to
          print error messages.  This routine normally prints the
          error message to ssssttttddddeeeerrrrrrrr, but can be redefined as needed to
          handle printing differently, such as printing the message to
          a window.

     EEEEXXXXAAAAMMMMPPPPLLLLEEEE
          Print a message when the ggggeeeettttrrrreeeelllliiiinnnnffffoooo(3) routine fails on
          /_e_t_c/_p_a_s_s_w_d.

               #include "urelation.h"
               #include "message.h"

               struct urelation r_passwd;

               if ( getrelinfo( "/etc/passwd", &r_passwd, FALSE ) == NULL ) {
                    pruerror( );
                    prmsg( MSG_ERROR,
                         "cannot read descriptor information for /etc/passwd file" );
                    return( FALSE );
               }

          Perform syntax checking on each tuple of a relation:
               #include "uquery.h"
               #include "message.h"

               struct urelation *relptr;     /* previously initialized */
               struct unperuseinfo *perptr;
               int errorcnt;
               struct utuple tpl;
               char *attrvals[MAXATT];

               /* Initialize the relation for perusal in read mode. */
               perptr = init_peruse( relptr, "r" );
               if ( perptr == NULL ) {
                    pruerror();
                    /* print message and return failure */
               }
               errorcnt = 0;
               tpl.tplval = attrvals;
               while( peruse_tuple( perptr, &tpl ) ) {
                    if ( prtplerror( relptr, &tpl ) != 0 ) {
                         /* An error occured; up the error count. */



     Page 2                                          (printed 4/22/91)






     uuuueeeerrrrrrrroooorrrr((((3333))))                   NNNNeeeewwww UUUUNNNNIIIITTTTYYYY                   uuuueeeerrrrrrrroooorrrr((((3333))))



                         ++errorcnt;
                    }
               }
               (void)end_peruse( perptr, FALSE ); /* end the perusal */
               prmsg( MSG_NOTE, "%d tuple%s with errors found",
                    errorcnt, errorcnt != 1 ? "s" : "" );

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          cmpquery(1), prmsg(3).














































     Page 3                                          (printed 4/22/91)



