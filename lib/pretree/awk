#!/bin/sh
###############################################################################
#	    This is unpublished AT&T proprietary source code.		      #
#			All rights reserved				      #
#			Copyright (c) 1990				      #
#			AT&T Bell Laboratories				      #
###############################################################################

##########################################################
# Extract function calls from an awk source file
#
#		Author: Bob Parnass
#		Date:	Oct 1990
#		AT&T Bell Laboratories
#
# USAGE:    awk  [-F char] [-p]  [-i file_of_files] [source_files]
#
# This program writes to stdout lines of the form:
#
#	file function
#
##########################################################
PGM=`basename $0`

FORHELP="\n\n(For more help, read the manual page then contact Bob Parnass)\n"
USAGE="### error ### ${PGM}\nUSAGE:  ${PGM}  [-p] [-i file_of_files] [-F char]\n\t\t[awk_files] ${FORHELP}"

TMP=/usr/tmp
JUNKFILE=$TMP/PC$$.c
CFILE=$TMP/PCb$$
CSCOPEFILE=$TMP/PCc$$
ALLFILES=$TMP/PCd$$

TMPFILES="${CSCOPEFILE} ${JUNKFILE} ${CFILE} ${CSERR} ${ALLFILES}"



# see if a public version of the newform program exists
test -x /usr/bin/newform
if [ $? -eq 0 ]
then
	# use public version
	NEWFORM=/usr/bin/newform
else
	# use private version
	NEWFORM=$TOOLS/lib/comment/newform
fi

# trap unexpected signals so we clean up temp file
trap 'rm -f ${TMPFILES}; trap 0; exit 1'  1 2 3 15


# parse command line arguments 
set -- `getopt i:F:p $*`
if [ $? !=  0 ]
then
	echo ${USAGE} 1>&2
	exit 1
else
	IFLAG=
	FFLAG=
	PFLAG=
	for i in $*
	do
		case $i in
		-p)
			# print params
			PFLAG="-p"
			shift 1;;
		-i)
			# file of files
			IFLAG="-I"
			FILEOFFILES=$2
			shift 2;;
		-F)
			# change interfield separator character
			FFLAG="-F $2"
			shift 2;;
		'-?')
			echo ${USAGE} 1>&2
			exit
			;;
		--)
			shift; break;;
		esac
	done
fi

# input file of fcn calls was specified
if [ "$IFLAG" ]
then
	# -i argument specified on command line
	# extract name of file of files

	> "${ALLFILES}"

	# for each file in file of files
	for file in `cat $FILEOFFILES`
	do
		XFILE=`basename $file`
		XFILE=`echo "$XFILE" | sed -e 's/\./___/g'`
		(echo "$XFILE(){"; cat $file;echo '}') >> "${ALLFILES}"
	done
else
	if [ $# -eq 0 ]
		then
		# assume source file is piped 
		(echo "awk(){"; cat;echo '}') >> "${ALLFILES}"

	else
		# files are specified on command line
		> "${ALLFILES}"
		while [ $# -gt 0 ]
		do
			INFILE=${1}
			test -r "${INFILE}"
			if [ $? -eq 0 ]
			then
			XFILE=`basename $INFILE`
			XFILE=`echo "$XFILE" | sed -e 's/\./___/g'`
			(echo "${XFILE}(){"; cat ${INFILE};echo '}') >> "${ALLFILES}"
			else
				echo "### error ### ${PGM}: Cannot read file ${INFILE}." 1>&2
				echo "${USAGE}" 1>&2
				rm -f ${TMPFILES}
				exit 1
			fi
			shift
		done
	fi
fi

# cull out lines of interest
${NEWFORM} -i $ALLFILES \
	| sed -e 's/#.*//' \
	> ${CFILE}

cscope -b -f ${CSCOPEFILE} ${CFILE} > /dev/null 2>&1
EXITCODE=$?

if [ $EXITCODE -eq 0 ]
then
	# extract rule names
	ccalls $FFLAG $PFLAG ${CSCOPEFILE}  \
		| sed -e 's/___/\./g' \
		| sed -e 's/\{.*//'
	EXITCODE=$?
else
	echo "### error ### ${PGM}:  cscope failed" 1>&2
fi

rm -f "${TMPFILES}"

exit $EXITCODE
