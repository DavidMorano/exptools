


     XXXXJJJJFFFF((((1111))))              UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((TTTTOOOOOOOOLLLLCCCCHHHHEEEESSSSTTTT))))              XXXXJJJJFFFF((((1111))))



     NNNNAAAAMMMMEEEE
          xjf - DMD font editor

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          _x_j_f [ ----VVVVcccc ] [ file ]

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          The _x_j_f utility is a menu driven font editor for AT&T Dot-
          Mapped Display terminals (5620 DMD and 630 MTG).  It reads
          and writes font files in the form specified in the 630 MTG
          Software Development Guide.

          The ----VVVV option causes _x_j_f to print a message that identifies
          which version it is.

          The ----cccc option, for "cache", is available only for the 630
          MTG.  It causes _x_j_f to remain in the terminal's RAM memory
          after the program terminates.  The next invocation of _x_j_f
          will bring up the program quickly without having to download
          it.  Use the 630 MTG _u_c_a_c_h_e(_1) program to remove _x_j_f from
          the terminal's cache.

          The ffffiiiilllleeee argument specifies a font file to be preloaded.

          Button 1 of the mouse is used for selecting character cells
          for editing.  Button 2 is used for returning character cells
          to their font.  Note that both button 1 and 2 select charac-
          ter cells from within a font display graphic.  That is, but-
          ton 2 has effect only when used to select the "tiny" charac-
          ter cell, not the large edit cell which represents the char-
          acter when distended (_z_o_o_m_e_d). Zoomed character cells are
          also referred to as _e_d_i_t _c_e_l_l_s.

        BBBBuuuuttttttttoooonnnn TTTThhhhrrrreeeeeeee MMMMeeeennnnuuuu
          All _x_j_f commands are entered from button 3 of the mouse.
          The menu for button 3 supports the following operations:

          cccchhhhaaaarrrr This menu entry allows certain parameters to be set for
               character cells on a per-cell basis.

               To adjust any of these character cell parameters
               (except for cccchhhhaaaarrrr wwwwiiiiddddtttthhhh), select the desired sub-menu
               entry, and place the resultant bullseye over the edit
               cell to be adjusted. Once the character is selected,
               the current value of the parameter will be displayed in
               the keyboard entry area at the bottom of the window,
               and _x_j_f will wait for keyboard input.  Merely entering
               a newline will leave the parameter unchanged.

               cccchhhhaaaarrrr wwwwiiiiddddtttthhhh
                    This parameter specifies how much space should be
                    allocated by the display device for the given



     Page 1                                           (printed 9/8/92)






     XXXXJJJJFFFF((((1111))))              UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((TTTTOOOOOOOOLLLLCCCCHHHHEEEESSSSTTTT))))              XXXXJJJJFFFF((((1111))))



                    character.  This is only relevant for variable-
                    width fonts.

                    To adjust the width of a character, select the
                    cccchhhhaaaarrrr wwwwiiiiddddtttthhhh menu selection, and place the resultant
                    icon over the character to be adjusted.  Button 1
                    resets the width indicator to 0.  Button 2 places
                    the width indicator in the column indicated by the
                    heavier bar of the icon.

               cccchhhhaaaarrrr lllleeeefffftttt
                    This parameter specifies how much space the given
                    character can be tucked under the proceeding char-
                    acter when the display device supports _k_e_r_n_i_n_g.

               cccchhhhaaaarrrr ttttoooopppp
                    This parameter specifies how far down from the top
                    of the character cell that the data bits of the
                    given character actually start.  For example, the
                    top parameter will be much larger for a small 'a'
                    than it will be for a large 'A'.  Precisely, it is
                    the number of blank raster lines that lie above
                    the character in the cell.

               cccchhhhaaaarrrr bbbboooottttttttoooommmm
                    This parameter specifies how far down from the top
                    of the character cell that the data bits of the
                    given character actually extend.  For example, the
                    bottom parameter will be much larger for a small
                     'g' than it will be for a large 'G'.  Precisely,
                    it is the number of raster lines that lie above
                    the blank lines at the bottom of the cell.

          ffffoooonnnntttt This menu entry allows certain parameters to be set for
               fonts on a per-font basis.

               To adjust any of the font parameters (except for hhhhoooolllllllloooowwww
               ffffoooonnnntttt), select the desired sub-menu entry, and place the
               resultant bullseye over the font to be adjusted.  Once
               the character is selected, the current value of the
               parameter will be displayed in the keyboard entry area
               at the bottom of the window, and _x_j_f will wait for key-
               board input.  Merely entering a newline will leave the
               parameter unchanged.

               mmmmaaaaxxxx wwwwiiiiddddtttthhhh
                    This parameter determines how many bit positions
                    character cells have in the horizontal direction.
                    This value represents the maximum character width
                    limit for a font.

               aaaallllllll wwwwiiiiddddtttthhhhssss



     Page 2                                           (printed 9/8/92)






     XXXXJJJJFFFF((((1111))))              UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((TTTTOOOOOOOOLLLLCCCCHHHHEEEESSSSTTTT))))              XXXXJJJJFFFF((((1111))))



                    This parameter determines how many bits per char-
                    acter _c_o_n_s_t_a_n_t _w_i_d_t_h _f_o_n_t_s are allocated.  Note
                    that setting this parameter eliminates all vari-
                    able width information stored with the font.

               nnnncccchhhhaaaarrrrssss
                    This parameter determines how many character cells
                    a font contains.

               hhhheeeeiiiigggghhhhtttt
                    This parameter determines how many bit positions
                    character cells have in the vertical direction.
                    This value represents the maximum character height
                    limit for a font.

               aaaasssscccceeeennnntttt
                    This parameter determines the position of the _b_a_s_e
                    _l_i_n_e of the font.  This is the line on which most
                    characters rest that is used to position charac-
                    ters to one another.  To be precise, aaaasssscccceeeennnntttt is the
                    number of blank lines above the base line.

               hhhhoooolllllllloooowwww ffffoooonnnntttt
                    This menu selection is reputed to actually
                    represent an operation: According to folklore, it
                    would take a stout font, and hollow it out.  The
                    provider assumes no responsibility for the
                    foolhardy.

          bbbbiiiitttt  This menu entry allows certain operations to be per-
               formed on edit cells.

               mmmmoooovvvveeee hhhhoooorrrr
                    This operation allows a character cell to be
                    rotated either left (button 1) or right (button
                    2).

               mmmmoooovvvveeee vvvveeeerrrr
                    This operation allows a character cell to be
                    rotated either up (button 1) or down (button 2).

               fffflllliiiipppp This operation allows a character cell to be
                    reflected around either its vertical axis (button
                    1) or its horizontal axis (button 2).

               ttttrrrraaaannnnssssppppoooosssseeee
                    This operation has an undetermined effect of the
                    edit cell.

               The following four operations allow intercellular bit
               manipulations.  After the operation is selected, the
               _s_o_u_r_c_e character cell must be selected by depressing



     Page 3                                           (printed 9/8/92)






     XXXXJJJJFFFF((((1111))))              UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((TTTTOOOOOOOOLLLLCCCCHHHHEEEESSSSTTTT))))              XXXXJJJJFFFF((((1111))))



               button 3.  Before the button is released, however, the
               _d_e_s_t_i_n_a_t_i_o_n character cell must also be selected, by
               placing the bullseye over it and finally releasing.
               The indicated operation is then performed.

               ccccooooppppyyyy All the bits in the source cell are copied to the
                    destination cell.  The entire previous contents of
                    the destination cell are overwritten.

               oooorrrr   All the bits in the source cell are _o_r-ed with the
                    contents of the destination cell.  The result
                    replaces the destination cell.

               cccclllleeeeaaaarrrr
                    All the bits in the source cell are inverted, and
                    then _a_n_d-ed with the contents of the destinations
                    cell.  The result replaces the destination cell.
                    If the source and destination cells are identical,
                    the contents of the cell are cleared.

               xxxxoooorrrr  All the bits in the source cell are exclusive-_o_r-
                    ed with the contents of the destination cell.  The
                    result replaces the destination cell.

          mmmmoooovvvveeee This menu entry allows either fonts or edit cells to be
               moved around within the _x_j_f window.  After selecting
               mmmmoooovvvveeee, place the resultant bullseye over the display
               graphic to be moved, depress button 3, move the icon to
               the new location, and release the button.

          cccclllloooosssseeee
               This menu entry selects an operation that can be used
               either for fonts or edit cells.  When applied to edit
               cells, it causes the cell to be returned to its font,
               just like button 2 does when a "tiny" character cell is
               selected.  When applied to a font, cccclllloooosssseeee causes _a_l_l
               outstanding edit cells of that font to be returned.
               Furthermore, it compresses the font, so that all unused
               space is removed.  This is currently the only way to
               compress the unused space out of a font.

          rrrreeeeaaaadddd This menu entry is the primary way existing fonts are
               edited.

               bbbblllliiiitttt ffffoooonnnntttt
                    This menu entry allows a font of the form
                    described in the 630 MTG Software Development
                    Guide to be read by _x_j_f.

               ccccaaaannnnoooonnnn ffffoooonnnntttt
                    This menu entry is unsupported.




     Page 4                                           (printed 9/8/92)






     XXXXJJJJFFFF((((1111))))              UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((TTTTOOOOOOOOLLLLCCCCHHHHEEEESSSSTTTT))))              XXXXJJJJFFFF((((1111))))



          wwwwrrrriiiitttteeee
               This menu entry is used to write edited fonts to mass
               storage.

               bbbblllliiiitttt ffffoooonnnntttt
                    This menu entry causes a font of the form
                    described in the 630 MTG Software Development
                    Guide to be written by _x_j_f.

               ccccaaaannnnoooonnnn ffffoooonnnntttt
                    This menu entry is unsupported.

               iiiiccccoooonnnn This menu entry can be used to write a single
                    character cell to a file that can be included in a
                    C program.  The character cell must be _z_o_o_m_e_d.

          nnnneeeewwww ffffoooonnnntttt
               This menu entry creates an empty font of 16 characters,
               each of which is 16 X 16 bits in size.  It can be used
               to start building a font from scratch, although it is
               usually easier to take one that already exists and
               modify it to the new requirements.

          ddddeeeelllleeeetttteeee ffffoooonnnntttt
               This menu entry can be used to clean up the _x_j_f window.

          eeeexxxxiiiitttt

        FFFFoooonnnntttt FFFFiiiilllleeee IIIInnnnccccoooonnnnssssiiiisssstttteeeennnncccciiiieeeessss
          There has been some confusion on the exact definition of the
          font file format used by AT&T Dot-Mapped Display terminals.
          _x_j_f uses the format described in the 630 MTG Software
          Development Guide.

          The first data item in DMD font files is called _n_c_h_a_r_s,
          which represents exactly the number of characters contained
          in the font. Some versions of _x_j_f's ancestor _j_f assumed that
          _n_c_h_a_r_s was a number _o_n_e _g_r_e_a_t_e_r than the actual number of
          characters stored in the font.   The result of this
          discrepancy is that fonts written by these older versions
          will display one extra character cell when read by _x_j_f.
          Furthermore, when fonts that have been written by _x_j_f are
          read by these version of _j_f, the last character cell of the
          font will not be displayed.

          These discrepancies are no cause for concern.  The _n_c_h_a_r_s
          value can be changed from the ffffoooonnnntttt sub-menu, if desired, or
          it can be left unchanged for compatibility between the two
          versions.  Sometimes the _m_a_x _w_i_d_t_h value (which is stored in
          the _n_c_h_a_r+1th position of the font file) is mis-read for
          these older fonts.  In that case, the correct value can also
          be entered from the ffffoooonnnntttt sub-menu.



     Page 5                                           (printed 9/8/92)






     XXXXJJJJFFFF((((1111))))              UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((TTTTOOOOOOOOLLLLCCCCHHHHEEEESSSSTTTT))))              XXXXJJJJFFFF((((1111))))



     FFFFIIIILLLLEEEESSSS
          $TOOLS/lib/dmdtools/xjfhost support for _x_j_f
          $TOOLS/lib/630/xjf.m  terminal support for the 630 MTG
          $TOOLS/lib/dmd/xjf.m  terminal support for the 5620 DMD
          $TOOLS/lib/xfont/*    fonts

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          630 MTG Software Development Guide.
          ucache(1) in the _6_3_0 _M_T_G _S_o_f_t_w_a_r_e _R_e_f_e_r_e_n_c_e _M_a_n_u_a_l.

     BBBBUUUUGGGGSSSS
          The "hollow font" feature is untested.
          The "canon font" feature is unsupported.
          Closing a font before writing it will give a more compressed
          font file than is created when the font is not closed first.
          When _x_j_f is cached, the ffffiiiilllleeee argument is only effective on
          the initial download.  Furthermore, this file will be loaded
          with every subsequent invocation.





































     Page 6                                           (printed 9/8/92)



