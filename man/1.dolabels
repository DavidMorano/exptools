


     DDDDOOOOLLLLAAAABBBBEEEELLLLSSSS((((1111))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))          DDDDOOOOLLLLAAAABBBBEEEELLLLSSSS((((1111))))



     NNNNAAAAMMMMEEEE
          dolabels - type addresses out on mailing labels

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ddddoooollllaaaabbbbeeeellllssss  [options]  file

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          This routine provides a convenient way to type out addresses
          found in an address file onto mailing labels using an output
          device such as a Diablo printer.  The size and orientation
          of the labels being used is specified when the command is
          invoked, allowing the same address file to be used with
          different sizes and types of labels.  If no size and
          orientation information is provided, a default is used.

          The _f_i_l_e argument names the address file to be used.  If the
          filename given is '-', the addresses are taken from standard
          input.

          If the program is invoked as

                                 dolabels help

          a brief statement of the options and their default values is
          printed at the terminal.

          One generally uses this program by

          1)  logging on to the printing terminal to be used to type
              out the labels,
          2)  issuing the 'dolabels' command with the appropriate
              arguments,
          3)  waiting for label-mounting instructions,
          4)  replacing the regular paper in the printer with special
              forms paper and positioning the printing element,
          5)  hitting RETURN and letting the labels print out,
          6)  restoring the regular paper in the terminal,
          7)  hitting another RETURN to signal the end of label
              processing, and
          8)  logging off.

        OOOOppppttttiiiioooonnnnssss
          ----nnnn_N       This option tells the program, through the number
                    _N, how many side-by-side labels there are on the
                    label paper.  DEFAULT: 4.

          ----wwww_W       This option tells the program, through the number
                    _W, how wide the labels are, i.e., the number of
                    characters that can be typed from the left side of
                    one label to the left side of the next label.
                    DEFAULT: 34.




     Page 1                                         (printed 10/16/91)






     DDDDOOOOLLLLAAAABBBBEEEELLLLSSSS((((1111))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))          DDDDOOOOLLLLAAAABBBBEEEELLLLSSSS((((1111))))



                    The program assumes that the last character on a
                    label is actually the gap between labels and will
                    not print anything there.

          ----llll_L       This option tells the program, through the number
                    _L, the length of each label, i.e., the number of
                    lines from the top of one label to the top of the
                    next.  DEFAULT: 6.

                    The program assumes that the last line on a label
                    is actually the gap between labels and will not
                    print anything there.

          ----cccc_C       This option tells the program, through the number
                    _C, how many copies of each label the user wants.
                    DEFAULT: 1.

          ----qqqq        This option tells the program to execute _q_u_i_e_t_l_y.
                    The preliminary label-mounting instructions and
                    the final pause for label unmounting are not
                    printed.  This option would be used when sending
                    the output to a file or a pipe.

        TTTThhhheeee AAAAddddddddrrrreeeessssssss FFFFiiiilllleeee
          The format of the address file is a list of addresses, each
          preceded by a line with the text '.AD' on it.  The size of
          the addresses in the file need not match the label size,
          since the program keeps track of label and address size as
          it is processing.  If an address is too long or wide for the
          labels being used, the excessive text is truncated.  If an
          address is too short or narrow, white space is inserted to
          keep the labels neat and orderly.

          Lines beginning with the character '#' are considered
          comments and are ignored.

          The following is an example of a typical address file:

                     .AD
                     # Major contributor!
                     Alice Zanzibar
                     2325 W. Main Street
                     Bigtown, TW
                     98765
                     .AD
                     John Q. Public
                     153 North Street
                     Anytown, ST

          Please note that in the above example the first address
          contains 4 lines, while the second contains 3.




     Page 2                                         (printed 10/16/91)






     DDDDOOOOLLLLAAAABBBBEEEELLLLSSSS((((1111))))         UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))          DDDDOOOOLLLLAAAABBBBEEEELLLLSSSS((((1111))))



          It should also be noted that an address file of this type is
          easily created from the more general address files used with
          the form-letter routine _p_e_r_f_o_r_m(_E_X_P_T_O_O_L_S). One would use
          'perform' to convert such data into a 'dolabels' address
          file, stripping out any and all variable-definition
          information found therein.  The output of 'perform' could be
          sent to a file to be used by this program at some later
          time, or it could be piped into this program directly.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          perform(EXPTOOLS).

     AAAAUUUUTTTTHHHHOOOORRRR AAAANNNNDDDD PPPPRRRROOOOVVVVIIIIDDDDEEEERRRR
          George Otto









































     Page 3                                         (printed 10/16/91)



