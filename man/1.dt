


       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



       NNNNAAAAMMMMEEEE
            dt -- draw a tree representation of a directed graph

       SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
            ddddtttt [-ampqrtu]  [-d depth]  [-i indent]  [-l length]  [-v
            number]         [-s starting_name]  [-x translation_file]
            [-F char]  [edgefile]

       DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
            _d_t "draws" a tree horizontally on standard output using the
            edges specified in _e_d_g_e_f_i_l_e or standard input.  Standard
            ASCII characters are used so the tree can be drawn on most
            any terminal.

            Edge information is read from standard input or the file
            _e_d_g_e_f_i_l_e, if specified, and must consist of lines of node
            name pairs, each name separated by a space.  Lines of the
            form: _n_o_d_e_1 _n_o_d_e_2 are interpreted to mean there is an edge
            from _n_o_d_e_1 to _n_o_d_e_2.

            Useful filters can be written to translate data into this
            format.  For instance, function reference information gen-
            erated by tools like _c_s_c_o_p_e can be reformatted, saved in a
            file, then used by _d_t to draw function call structure
            charts.  Similarly, machine names in _u_u_c_p paths, like
            ihnp4!ihuxz!ihlpg can be filtered to produce topological
            network diagrams.


            ----aaaa        Draw trees for all nodes.  If not specified, only
                      trees rooted by nodes having no edges leading into
                      them will be drawn.  See WWWWAAAARRRRNNNNIIIINNNNGGGGSSSS section below.

            ----iiii_i_n_d_e_n_t  The -i option specifies the number of columns to
                      indent each level of the tree.  Indentation is
                      relative to the start of node names. If not speci-
                      fied, _d_t defaults to 4 columns.

            ----dddd_d_e_p_t_h   The -d option specifies the maximum number of lev-
                      els to print.  If not specified, _d_t defaults to 12
                      levels.

            ----FFFF_c_h_a_r    Use _c_h_a_r as the input field separator character in
                      both the edgefile and translation files.  If -_F is
                      not specified, a space or tab is used as the
                      default.

            ----llll_l_e_n_g_t_h  Truncate node names at _l_e_n_g_t_h characters.  If not
                      specified, names are truncated at 8 characters.
                      If at least one name had to be truncated, a mes-
                      sage will be written to standard output.




       Page 1                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



            ----mmmm        Draw multiple edges if found in _e_d_g_e_f_i_l_e. By
                      default, edges are only displayed once.

            ----pppp        Paginate output by printing a formfeed character
                      before the start of each tree.

            ----qqqq        Chatty mode.  Display informatory messages.

            ----rrrr        Reverse the order of the node pairs, effectively
                      inverting the tree.  Interpret input lines of the
                      form: _n_o_d_e_1 _n_o_d_e_2 to mean there is an edge from
                      _n_o_d_e_2 to _n_o_d_e_1.

            ----ssss_s_t_a_r_t_i_n_g__n_a_m_e
                      Draw only one tree, starting with the node
                      _s_t_a_r_t_i_n_g__n_a_m_e. If the specified node cannot be
                      found in _e_d_g_e_f_i_l_e, an error message is written to
                      standard error.

            ----tttt        Do not trim duplicate subtrees within tree.  This
                      usually makes trees larger, and somewhat simpler
                      to follow.  This option also turns off line
                      numbers.  By default, duplicate subtrees within a
                      tree are trimmed and line numbers are used as
                      backwards references.

            ----uuuu        Display sibling nodes in sorted order.  Sibling
                      nodes are nodes at the same depth and having edges
                      into them from the same previous node.

            ----vvvv_n_u_m_b_e_r  Adjust vertical spacing to _n_u_m_b_e_r lines.  This
                      option will "spread out" the diagram, adding more
                      white space, thus making it easier to read.  If -_v
                      is not specified, _d_t will single space as the
                      default.

            ----xxxx_t_r_a_n_s_l_a_t_i_o_n__f_i_l_e
                      The -x option specifies the name of a file con-
                      taining node names and their translations to be
                      printed instead.  The file must contain lines of
                      the form:

                                    node_name alias_string

                      where _n_o_d_e__n_a_m_e and _a_l_i_a_s__s_t_r_i_n_g are separated by
                      the input field separator character (see -F
                      option).  If -x is specified, nodes named
                      _n_o_d_e__n_a_m_e will be translated to _a_l_i_a_s__s_t_r_i_n_g
                      before printing.  Nodes not specified in the
                      translation file will be printed as they appear in
                      the edge file, but truncated to the appropriate
                      length (see -l option).  Node names are also



       Page 2                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



                      truncated to the appropriate length before com-
                      parison with lines from the translation file.

                      The -x option can be used handily with the _c_c_a_l_l_s
                      program, and its -p option, to produce a structure
                      chart of C language programs showing function
                      calls and function parameters.
















































       Page 3                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



       EEEEXXXXAAAAMMMMPPPPLLLLEEEESSSS::::
            The following examples make use of this _e_d_g_e_f_i_l_e:

                 main1 print
                 print myputchar
                 myputchar open
                 myputchar write
                 myputchar close
                 main1 calc
                 calc print
                 calc sin
                 sin cos
                 calc sum
                 calc avg
                 avg sum
                 main2 print
                 main2 write






































       Page 4                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



       EEEEXXXXAAAAMMMMPPPPLLLLEEEE 1111
                                    dt edgefile

            produces this output:



                1  main1
                2    \__print
                3    |    \__myputcha
                4    |         \__open
                5    |         |__write
                6    |         |__close
                7    |__calc
                8         \__print_____[Line 2]
                9         |__sin
               10         |    \__cos
               11         |__sum
               12         |__avg
               13              \__sum

                1  main2
                2    \__print
                3    |    \__myputcha
                4    |         \__open
                5    |         |__write
                6    |         |__close
                7    |__write



























       Page 5                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



       EEEEXXXXAAAAMMMMPPPPLLLLEEEE 2222
                                 dt -q -i8 edgefile

            produces this output:

            dt version 5.0: 12 names, 14 unique edges processed, up to 12 levels deep.
            dt: NOTE - Names up to 9 characters long were truncated to 8 characters.



                1  main1
                2       \__print
                3       |       \__myputcha
                4       |               \__open
                5       |               |__write
                6       |               |__close
                7       |__calc_
                8               \__print_____[Line 2]
                9               |__sin__
               10               |       \__cos
               11               |__sum
               12               |__avg__
               13                       \__sum

                1  main2
                2       \__print
                3       |       \__myputcha
                4       |               \__open
                5       |               |__write
                6       |               |__close
                7       |__write
























       Page 6                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



       EEEEXXXXAAAAMMMMPPPPLLLLEEEE 3333
                               dt -i12 -a -t edgefile

            produces this output:




              main1____
                       \__print____
                       |           \__myputcha_
                       |                       \__open
                       |                       |__write
                       |                       |__close
                       |__calc_____
                                   \__print____
                                   |           \__myputcha_
                                   |                       \__open
                                   |                       |__write
                                   |                       |__close
                                   |__sin______
                                   |           \__cos
                                   |__sum
                                   |__avg______
                                               \__sum

              print____
                       \__myputcha_
                                   \__open
                                   |__write
                                   |__close

              myputcha_
                       \__open
                       |__write
                       |__close



















       Page 7                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



              open

              write

              close

              calc_____
                       \__print____
                       |           \__myputcha_
                       |                       \__open
                       |                       |__write
                       |                       |__close
                       |__sin______
                       |           \__cos
                       |__sum
                       |__avg______
                                   \__sum

              sin______
                       \__cos

              cos

              sum

              avg______
                       \__sum

              main2____
                       \__print____
                       |           \__myputcha_
                       |                       \__open
                       |                       |__write
                       |                       |__close
                       |__write




















       Page 8                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



       EEEEXXXXAAAAMMMMPPPPLLLLEEEE 4444
            Given the edge file _e_d_g_e_f_i_l_e:

                 main:calculate
                 main:printf
                 calculate:square

            and translation file _p_a_r_a_m_s:

                 main:main(argv,argc)
                 calculate:calculate(a,b)
                 square:square(n)

                             dt -F: -x params edgefile

            produces this output:



                1  main(argv,argc)
                2   __calculate(a,b)
                3   |   \__square(n)
                4   |__printf


       EEEEXXXXIIIITTTT CCCCOOOODDDDEEEESSSS
            0 for no errors; 1 for any error.


       DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS
            All error messages are written to standard error and are
            intended to be self-explanatory.


       WWWWAAAARRRRNNNNIIIINNNNGGGGSSSS
            Node names exceeding the length specified by the -l option,
            or the default length, will be truncated.  This can affect
            the topology of the tree if 2 names that are different
            before truncation become the same after truncation.  For
            example, if names 'getinputline' and 'getinputchar' are
            specified in the edge file, and the -l argument is not
            specified, both these names will be truncated to 'getinput'
            before the topology is calculated.

            Unless the -a option is specified, only trees rooted by
            nodes having no edges leading into them will be drawn.  This
            means that trees consisting of edges (Y, Z) and (Z, Y), for
            example, will not appear unless -a is specified on the com-
            mand line.

            Graphs containing more than 4096 names cannot be processed.
            Since dynamic memory allocation is used, _d_t may run out of



       Page 9                                          (printed 2/22/93)






       DDDDTTTT((((1111))))               UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))                DDDDTTTT((((1111))))



            memory while trying to process graphs having over 1000
            names.

            Execution time and memory requirements increase with the
            square of the number of nodes.

            The -x option currently causes repeated linear searches
            through the translation file, which can slow down drawing of
            large trees.


       FFFFIIIILLLLEEEESSSS
            /usr/tmp/dttmp$$ - standard input copied to this file if
            _e_d_g_e_f_i_l_e not specified on command line.


       AAAAUUUUTTTTHHHHOOOORRRR
            The tree drawing tool was written by Bob Parnass.


       PPPPRRRROOOOVVVVIIIIDDDDEEEERRRR
            The tree drawing tool is provided by Bob Parnass.


       SSSSEEEEEEEE AAAALLLLSSSSOOOO
            _d_t - _A _P_r_o_g_r_a_m _f_o_r _V_i_s_u_a_l_i_z_i_n_g _C_o_m_p_l_e_x _P_r_o_b_l_e_m_s _U_s_i_n_g _S_i_m_p_l_e
            _T_e_r_m_i_n_a_l_s, by R. S. Parnass, AT&T Bell Laboratories Techni-
            cal Memorandum 55545-880516-01TM.

            ccalls(1), cscope(1)

























       Page 10                                         (printed 2/22/93)



