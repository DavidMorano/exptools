


     LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))       UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))        LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))



     NNNNAAAAMMMMEEEE
          libwindows - layers host agent library

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          dmddir=$TOOLS/lib/agent
          cccccccc -I$dmddir/include ... $dmddir/lib/libwindows.a

          iiiinnnntttt  llllaaaayyyyeeeerrrrssssttttyyyyppppeeee
          iiiinnnntttt  yyyyeeeessssnnnnoooo
          iiiinnnntttt  ccccnnnnttttllllffffdddd,,,, ffffdddd
          iiiinnnntttt  cccchhhhaaaannnn
          iiiinnnntttt  oooorrrriiiiggggiiiinnnn____xxxx,,,, oooorrrriiiiggggiiiinnnn____yyyy,,,, ccccoooorrrrnnnneeeerrrr____xxxx,,,, ccccoooorrrrnnnneeeerrrr____yyyy
          cccchhhhaaaarrrr ****ccccoooommmmmmmmaaaannnndddd
          cccchhhhaaaarrrr ****ssssttttrrrriiiinnnngggg
          cccchhhhaaaarrrr ****aaaannnnsssswwwweeeerrrr
          cccchhhhaaaarrrr ****nnnnaaaammmmeeee
          iiiinnnntttt  lllleeeennnnggggtttthhhh
          iiiinnnntttt  ****bbbbyyyytttteeeessssxxxxpppp,,,, ****bbbbyyyytttteeeessssyyyypppp,,,, ****bbbbiiiittttssssxxxxpppp,,,, ****bbbbiiiittttssssyyyypppp
          vvvvooooiiiidddd ((((****eeeerrrrrrrrffff))))(((())))
          iiiinnnntttt  ((((****nnnnoooonnnnrrrraaaawwwwffff))))(((())))
          llllaaaayyyyeeeerrrrssssttttyyyyppppeeee ==== iiiinnnnllllaaaayyyyeeeerrrrssss(((())))
          yyyyeeeessssnnnnoooo ==== oooonnnnllllooooggggiiiinnnnllllaaaayyyyeeeerrrr(((())))
          ccccnnnnttttllllffffdddd ==== ooooppppeeeennnnaaaaggggeeeennnntttt(((())))
          cccclllloooosssseeeeaaaaggggeeeennnntttt(((())))
          cccchhhhaaaannnn ==== NNNNeeeewwww((((ccccnnnnttttllllffffdddd,,,, oooorrrriiiiggggiiiinnnn____xxxx,,,, oooorrrriiiiggggiiiinnnn____yyyy,,,, ccccoooorrrrnnnneeeerrrr____xxxx,,,, ccccoooorrrrnnnneeeerrrr____yyyy))))
          cccchhhhaaaannnn ==== NNNNeeeewwwwllllaaaayyyyeeeerrrr((((ccccnnnnttttllllffffdddd,,,, oooorrrriiiiggggiiiinnnn____xxxx,,,, oooorrrriiiiggggiiiinnnn____yyyy,,,, ccccoooorrrrnnnneeeerrrr____xxxx,,,, ccccoooorrrrnnnneeeerrrr____yyyy))))
          nnnnaaaammmmeeee ==== ffffiiiinnnnddddcccchhhhaaaannnnnnnnaaaammmmeeee((((cccchhhhaaaannnn))))
          ffffdddd ==== ooooppppeeeennnncccchhhhaaaannnnnnnnaaaammmmeeee((((nnnnaaaammmmeeee))))
          ffffdddd ==== ooooppppeeeennnncccchhhhaaaannnn((((cccchhhhaaaannnn))))
          RRRRuuuunnnnllllaaaayyyyeeeerrrr((((cccchhhhaaaannnn,,,, ccccoooommmmmmmmaaaannnndddd))))
          RRRRuuuunnnnwwwwaaaaiiiittttllllaaaayyyyeeeerrrr((((cccchhhhaaaannnn,,,, ccccoooommmmmmmmaaaannnndddd))))
          CCCCuuuurrrrrrrreeeennnntttt((((ccccnnnnttttllllffffdddd,,,, cccchhhhaaaannnn))))
          DDDDeeeelllleeeetttteeee((((ccccnnnnttttllllffffdddd,,,, cccchhhhaaaannnn))))
          TTTToooopppp((((ccccnnnnttttllllffffdddd,,,, cccchhhhaaaannnn))))
          BBBBoooottttttttoooommmm((((ccccnnnnttttllllffffdddd,,,, cccchhhhaaaannnn))))
          MMMMoooovvvveeee((((ccccnnnnttttllllffffdddd,,,, cccchhhhaaaannnn,,,, oooorrrriiiiggggiiiinnnn____xxxx,,,, oooorrrriiiiggggiiiinnnn____yyyy))))
          RRRReeeesssshhhhaaaappppeeee((((ccccnnnnttttllllffffdddd,,,, cccchhhhaaaannnn,,,, oooorrrriiiiggggiiiinnnn____xxxx,,,, oooorrrriiiiggggiiiinnnn____yyyy,,,, ccccoooorrrrnnnneeeerrrr____xxxx,,,, ccccoooorrrrnnnneeeerrrr____yyyy))))
          RRRRoooommmmvvvveeeerrrrssssiiiioooonnnn((((ccccnnnnttttllllffffdddd,,,, ssssttttrrrriiiinnnngggg,,,, lllleeeennnnggggtttthhhh))))
          EEEExxxxiiiitttt((((ccccnnnnttttllllffffdddd))))
          JJJJbbbbooooooootttt(((())))
          JJJJzzzzoooommmmbbbbooooooootttt(((())))
          JJJJtttteeeerrrrmmmm(((())))
          JJJJwwwwiiiinnnnssssiiiizzzzeeee((((bbbbyyyytttteeeessssxxxxpppp,,,, bbbbyyyytttteeeessssyyyypppp,,,, bbbbiiiittttssssxxxxpppp,,,, bbbbiiiittttssssyyyypppp))))
          iiiiooooccccttttllllaaaaggggeeeennnntttt((((ccccnnnnttttllllffffdddd,,,, ccccoooommmmmmmmaaaannnndddd,,,, xxxx1111,,,, yyyy1111,,,, xxxx2222,,,, yyyy2222,,,, cccchhhhaaaannnn))))
          cccchhhhaaaannnn ==== ggggeeeettttcccchhhhaaaannnn(((())))
          rrrreeeessssuuuulllltttt ==== ggggeeeettttaaaaggggeeeennnnttttaaaannnnssssrrrreeeessssuuuulllltttt(((())))
          cccchhhhaaaannnn ==== ggggeeeettttaaaaggggeeeennnnttttaaaannnnsssscccchhhhaaaannnnssss(((())))
          aaaannnnsssswwwweeeerrrr ==== ggggeeeettttaaaaggggeeeennnnttttaaaannnnsssswwwweeeerrrr(((())))
          sssseeeettttaaaaggggeeeennnntttteeeerrrrrrrrffff((((eeeerrrrrrrrffff))))
          sssseeeettttaaaaggggeeeennnnttttnnnnoooonnnnrrrraaaawwwwffff((((nnnnoooonnnnrrrraaaawwwwffff))))





     Page 1                                           (printed 2/7/94)






     LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))       UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))        LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))



     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          This library of routines enables a program running on a host
          UNIX system to perform windowing terminal mouse functions
          (see _l_a_y_e_r_s(1)).  This is a library for host executables, it
          is NOT for programs that are compiled with dmdcc for down-
          loading.  This version of lllliiiibbbbwwwwiiiinnnnddddoooowwwwssss works with both XT-
          driver based layers and pseudo-tty based layers.

     CCCCOOOOMMMMPPPPAAAATTTTIIIIBBBBIIIILLLLIIIITTTTYYYY
          For maximum compatibility between different versions of
          layers, programs should use this library and make the fol-
          lowing changes:

          1. JMPX ioctls should be replaced by iiiinnnnllllaaaayyyyeeeerrrrssss() or removed
          entirely; many programs will run on a 630/730 without being
          in layers.

          2. JBOOT, JZOMBOOT, JTERM, and JWINSIZE ioctls should be
          replaced by calls to Jboot(), Jzomboot(), Jterm(), and Jwin-
          size() respectively.  If you want to have your code compile
          with previous versions of lllliiiibbbbwwwwiiiinnnnddddoooowwwwssss you can key off the
          USE_HOSTAGENT define after including "sys/jioctl.h".

          3. Programs that used only ooooppppeeeennnnaaaaggggeeeennnntttt() should also use
          cccclllloooosssseeeeaaaaggggeeeennnntttt() to shut down the connection.

          4. Programs that used the last digit returned from
          ttttttttyyyynnnnaaaammmmeeee(3) to determine the XT channel number should use
          ggggeeeettttcccchhhhaaaannnn() instead.  Shell scripts that used the last digit
          returned from "tty" should use "agent -c" instead.

          5. Programs that looked in the utmp file or used "who am i"
          to determine whether or not a window was the loggined-in
          layer should use oooonnnnllllooooggggiiiinnnnllllaaaayyyyeeeerrrr(3) instead.  Shell scripts
          should use "agent -l".

          6. Programs that do not want error messages going to stderr
          should use sssseeeettttaaaaggggeeeennnntttteeeerrrrrrrrffff() to trap the messages.

     RRRROOOOUUUUTTTTIIIINNNNEEEESSSS
          The iiiinnnnllllaaaayyyyeeeerrrrssss() routine returns 0000 if none of stdin, stdout,
          and stderr are attached to a tty that is running under
          _l_a_y_e_r_s(1).  Otherwise, it returns a number indicating what
          kind of layers is running: 1111 for character XT-driver based
          _l_a_y_e_r_s, 2222 for streams XT-driver based _l_a_y_e_r_s, and 3333 for
          pseudo-tty based _l_a_y_e_r_s.

          The oooonnnnllllooooggggiiiinnnnllllaaaayyyyeeeerrrr() routine returns 1111 if one of stdin,
          stdout, or stderr is attached to a tty that is the logged-in
          layer running under _l_a_y_e_r_s(1).  Otherwise, it returns 0000.

          The ooooppppeeeennnnaaaaggggeeeennnntttt() routine opens the control channel of the



     Page 2                                           (printed 2/7/94)






     LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))       UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))        LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))



          _l_a_y_e_r_s(1) multiplexor to which the calling process belongs.
          Upon successful completion, ooooppppeeeennnnaaaaggggeeeennnntttt() returns a file
          descriptor, _c_n_t_l_f_d, that should be passed to the other
          _l_i_b_w_i_n_d_o_w_s routines that require a file descriptor.  Other-
          wise, the value ----1111 is returned.

          The cccclllloooosssseeeeaaaaggggeeeennnntttt() routine closes the control channel opened
          by a previous ooooppppeeeennnnaaaaggggeeeennnntttt() call. This should be called after
          the last possible agent call is made in a program.

          The NNNNeeeewwww() routine creates a new layer with a separate shell.
          The  _o_r_i_g_i_n__x, _o_r_i_g_i_n__y, _c_o_r_n_e_r__x, and _c_o_r_n_e_r__y arguments
          are the coordinates of the layer rectangle.  If all the
          coordinate arguments are 0, the user must define the layer's
          rectangle interactively.  The layer appears on top of any
          overlapping layers.  The layer is not made current (i.e.,
          the keyboard is not attached to the new layer).  Upon suc-
          cessful completion, NNNNeeeewwww() returns the xxxxtttt(7) channel number
          associated with the layer.  Otherwise, the value ----1111 is
          returned.

          The NNNNeeeewwwwllllaaaayyyyeeeerrrr() routine creates a new layer without executing
          a separate shell.  Otherwise it is identical to NNNNeeeewwww(),
          described above.

          The ffffiiiinnnnddddcccchhhhaaaannnnnnnnaaaammmmeeee() routine returns a pointer to a string
          which is the device name that corresponds to the channel
          argument _c_h_a_n.  If it fails, NNNNUUUULLLLLLLL is returned.  Beware that
          if ffffiiiinnnnddddcccchhhhaaaannnnnnnnaaaammmmeeee() is called again with a different channel
          number then the name string will be modified.

          The ooooppppeeeennnncccchhhhaaaannnnnnnnaaaammmmeeee() routine opens the device _n_a_m_e which was
          obtained from the ffffiiiinnnnddddcccchhhhaaaannnnnnnnaaaammmmeeee() routine.  Upon successful
          completion, ooooppppeeeennnncccchhhhaaaannnnnnnnaaaammmmeeee() returns a read-write file
          descriptor for that channel.  Otherwise, the value ----1111 is
          returned.  Use cccclllloooosssseeee(2) to close the file descriptor.

          The ooooppppeeeennnncccchhhhaaaannnn() routine calls _f_i_n_d_c_h_a_n_n_a_m_e() and _o_p_e_n_c_h_a_n_-
          _n_a_m_e().  Upon successful completion, ooooppppeeeennnncccchhhhaaaannnn() returns a
          read-write file descriptor for a pseudo-tty for that chan-
          nel.  Otherwise, the value ----1111 is returned.  Use cccclllloooosssseeee(2) to
          close the file descriptor.

          The RRRRuuuunnnnllllaaaayyyyeeeerrrr() routine runs the specified _c_o_m_m_a_n_d in the
          layer associated with the channel argument _c_h_a_n.  Tty set-
          tings for the command are taken from the tty connected to
          stdin, stdout, or stderr of the calling program, unless the
          sssseeeettttaaaaggggeeeennnnttttnnnnoooonnnnrrrraaaawwwwffff() routine is called (see below).  Returns
          the process id of the forked process or ----1111 on failure.

          The RRRRuuuunnnnwwwwaaaaiiiittttllllaaaayyyyeeeerrrr() routine is just like RRRRuuuunnnnllllaaaayyyyeeeerrrr() except
          that it waits for the child process to die.  It catches



     Page 3                                           (printed 2/7/94)






     LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))       UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))        LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))



          signals so if the calling program dies, the child will also
          be killed.  Returns the exit code from the _c_o_m_m_a_n_d.

          The CCCCuuuurrrrrrrreeeennnntttt() routine makes the layer associated with the
          channel argument _c_h_a_n current (i.e., attached to the key-
          board).

          The DDDDeeeelllleeeetttteeee() routine deletes the layer associated with the
          channel argument _c_h_a_n and kills all host processes associ-
          ated with the layer.

          The TTTToooopppp() routine makes the layer associated with the chan-
          nel argument _c_h_a_n appear on top of all overlapping layers.

          The BBBBoooottttttttoooommmm() routine puts the layer associated with the
          channel argument _c_h_a_n under all overlapping layers.

          The MMMMoooovvvveeee() routine moves the layer associated with the chan-
          nel argument _c_h_a_n from its current screen location to a new
          screen location at the origin point (_o_r_i_g_i_n__x, _o_r_i_g_i_n__y).
          The size and contents of the layer are maintained.

          The RRRReeeesssshhhhaaaappppeeee() routine reshapes the layer associated with the
          channel argument _c_h_a_n.  The arguments _o_r_i_g_i_n__x, _o_r_i_g_i_n__y,
          _c_o_r_n_e_r__x, and _c_o_r_n_e_r__y are the new coordinates of the layer
          rectangle.  If all the coordinate arguments are 0, the user
          is allowed to define the layer's rectangle interactively.

          The RRRRoooommmmvvvveeeerrrrssssiiiioooonnnn() routine copies the parameter part of the
          terminal id string (e.g., "8;8;6") into the character array
          string up to length characters.

          The EEEExxxxiiiitttt() routine causes the llllaaaayyyyeeeerrrrssss(1) program to exit,
          killing all processes associated with it.

          The JJJJbbbbooooooootttt() routine causes the current window to go into
          download mode.

          The JJJJzzzzoooommmmbbbbooooooootttt() routine causes the current window to go into
          download mode but to not start the downloaded code after
          downloading.

          The JJJJtttteeeerrrrmmmm() routine causes the current window to either exit
          download mode or kill the currently running process in the
          terminal and start a new windowproc.

          The JJJJwwwwiiiinnnnssssiiiizzzzeeee() routine returns the window sizes in columns
          and rows and in pixels.  It fills in the values to which
          pointers are passed in as parameters.  If any of the
          pointers are zero, those values are not filled in.

          The iiiiooooccccttttllllaaaaggggeeeennnntttt() routine is the general purpose routine that



     Page 4                                           (printed 2/7/94)






     LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))       UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))        LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))



          sends an agent call to llllaaaayyyyeeeerrrrssss(1); other agent call routines
          use this routine.  The parameters are as follows: 'cntlfd'
          is the file descriptor returned from ooooppppeeeennnnaaaaggggeeeennnntttt(); 'command'
          is the command number as found in "agent.h" or
          "hostagent.h"; 'x1', 'y1', 'x2', and 'y2' are the four short
          (2-byte) parameters to the agent call; 'chan' is the channel
          number.

          The ggggeeeettttcccchhhhaaaannnn() routine returns the channel number (if any) of
          the layer the process is invoked from.

          The ggggeeeettttaaaaggggeeeennnnttttaaaannnnssssrrrreeeessssuuuulllltttt() routine returns the integer result
          returned from an agent call.  It is zero if the agent call
          succeeded and non-zero (either -1 or 1) if the agent call
          failed.

          The ggggeeeettttaaaaggggeeeennnnttttaaaannnnsssscccchhhhaaaannnn() routine returns the integer channel
          returned from an agent call.  Usually it is the same as the
          requesting channel but on A_NEW or A_NEWLAYER it is the
          number of the allocated channel.

          The ggggeeeettttaaaaggggeeeennnnttttaaaannnnsssswwwweeeerrrr() routine returns the (char *) answer
          buffer returned from an agent call.  The answer buffer is a
          maximum of 8 bytes long.  Most agent calls don't return any-
          thing interesting in the answer buffer; the A_ROMVERSION
          agent call is a notable exception.

          The sssseeeettttaaaaggggeeeennnntttteeeerrrrrrrrffff() routine sets a pointer to a function that
          accepts one "char *" pointer.  This function will be called
          with an error message whenever any function encounters an
          error.

          The sssseeeettttaaaaggggeeeennnnttttnnnnoooonnnnrrrraaaawwwwffff() routine sets a pointer to a function
          that gets a file descriptor as a parameter, sets that file
          descriptor into non-raw mode, and returns -1 upon failure or
          something other than -1 upon success.  This function will be
          called whenever RRRRuuuunnnnllllaaaayyyyeeeerrrr() is called to set the tty settings
          for the command in the window.  This is useful for programs
          that have set their main tty to raw mode but want the com-
          mand in the window to run in non-raw mode.  If sssseeeettttaaaaggggeeeennnnttttnnnnoooonnnn----
          rrrraaaawwwwffff() is not called, the tty settings for RRRRuuuunnnnllllaaaayyyyeeeerrrr() are
          taken from the main tty.

     RRRREEEETTTTUUUURRRRNNNN VVVVAAAALLLLUUUUEEEE
          Unless otherwise noted in the individual routine descrip-
          tion, routines return 0000 upon successful completion and ----1111 if
          there is an error.

     NNNNOOOOTTTTEEEE
          The values of layer rectangle coordinates are dependent on
          the type of terminal.  This dependency affects the routines
          that pass layer rectangle coordinates: MMMMoooovvvveeee(), NNNNeeeewwww(),



     Page 5                                           (printed 2/7/94)






     LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))       UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((EEEEXXXXPPPPTTTTOOOOOOOOLLLLSSSS))))        LLLLIIIIBBBBWWWWIIIINNNNDDDDOOOOWWWWSSSS((((3333))))



          NNNNeeeewwwwllllaaaayyyyeeeerrrr(), and RRRReeeesssshhhhaaaappppeeee().  Some terminals will expect these
          numbers to be passed as character positions (bytes); others
          will expect the information to be in pixels (bits).

          For example, for the AT&T 630 MTG terminal, NNNNeeeewwww(),
          NNNNeeeewwwwllllaaaayyyyeeeerrrr(), and RRRReeeesssshhhhaaaappppeeee() take minimum values of 6 (pixels)
          for _o_r_i_g_i_n__x and _o_r_i_g_i_n__y and maximum values of 1018 (pix-
          els) for _c_o_r_n_e_r__x and 1018 (pixels) for _c_o_r_n_e_r__y.  In addi-
          tion, the minimum layer size is 32 by 32 pixels and the max-
          imum layer size is 1018 by 1018 pixels.  See the appropriate
          terminal manual for more specific details.

     BBBBUUUUGGGGSSSS
          Some versions of the 620 MTG return success status on
          Delete() even when it fails. A New() on some 615 MTG's might
          need to be followed by a Current() to get access to the new
          window.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          layers(1), agent(1)



































     Page 6                                           (printed 2/7/94)



